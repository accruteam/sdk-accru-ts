/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "\n  fragment OrganizationAcctProviderConnFragment on OrganizationAcctProviderConn {\n    id\n    acct_provider\n    code\n    payload\n    conn_expires_at\n    automatic_pull_enabled\n    disconnected_at\n    created_at\n    updated_at\n    organization_id\n    status\n\n    synchronizations(skip: 0, take: 1, finished: true) {\n      edges {\n        node {\n          ...OrganizationAcctProviderConnSynchronizationFragment\n        }\n      }\n    }\n  }\n": typeof types.OrganizationAcctProviderConnFragmentFragmentDoc,
    "\n  fragment OrganizationAcctProviderConnSynchronizationFragment on OrganizationAcctProviderConnSynchronization {\n    id\n    mode\n    force\n    provider\n    errors\n    warnings\n    data {\n        customer { items }\n        invoice { items }\n        invoice_transaction { items }\n        vendor { items }\n        bill { items }\n        bill_transaction { items }\n    }\n    started_at\n    finished_at\n    failed_at\n    succeeded_at\n\n    read_success\n    read_failure\n    skipped\n    create_success\n    create_failure\n    update_success\n    update_failure\n    delete_failure\n    delete_success\n    process_failure\n    process_success\n\n    created_at\n    updated_at\n\n    scope\n    scope_id\n    scope_description\n\n    organization_id\n    organization_acct_provider_conn_id\n  }\n": typeof types.OrganizationAcctProviderConnSynchronizationFragmentFragmentDoc,
    "\n  mutation UserOrganizationAcctProviderConnDisconnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnDisconnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": typeof types.UserOrganizationAcctProviderConnDisconnectDocument,
    "\n  mutation UserOrganizationAcctProviderConnUpdate(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $data: UserOrganizationAcctProviderConnUpdateSchema!\n  ) {\n    userOrganizationAcctProviderConnUpdate(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      data: $data\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": typeof types.UserOrganizationAcctProviderConnUpdateDocument,
    "\n  mutation UserOrganizationAcctProviderConnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $url: String!\n    $automaticPull: Boolean!\n  ) {\n    userOrganizationAcctProviderConnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      url: $url\n      automatic_pull_enabled: $automaticPull\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": typeof types.UserOrganizationAcctProviderConnectDocument,
    "\n  mutation UserOrganizationAcctProviderGetOAuthUrl(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderGetOAuthUrl(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n": typeof types.UserOrganizationAcctProviderGetOAuthUrlDocument,
    "\n  mutation UserOrganizationAcctProviderSynchronize(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderSynchronize(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n": typeof types.UserOrganizationAcctProviderSynchronizeDocument,
    "\n  query UserOrganizationAcctProviders(\n    $organizationId: String!,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviders(\n        organization_id: $organizationId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n": typeof types.UserOrganizationAcctProvidersDocument,
    "\n  query UserOrganizationAcctProvider(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String!\n  ) {\n    userOrganizationAcctProvider(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_id: $organizationAcctProviderConnId\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": typeof types.UserOrganizationAcctProviderDocument,
    "\n  query UserOrganizationAcctProviderSynchronizations(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String,\n\n    $scope: ORGANIZATION_ACCT_PROVIDER_CONN_SYNCHRONIZATION_SCOPE,\n    $finished: Boolean,\n    $failed: Boolean,\n    $succeeded: Boolean,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviderSynchronizations(\n        organization_id: $organizationId\n        organization_acct_provider_conn_id: $organizationAcctProviderConnId\n\n        scope: $scope\n        finished: $finished\n        failed: $failed\n        succeeded: $succeeded\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnSynchronizationFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n": typeof types.UserOrganizationAcctProviderSynchronizationsDocument,
    "\n  query UserOrganizationAcctProviderSynchronization(\n    $organizationId: String!,\n    $organizationAcctProviderConnSynchronizationId: String!\n  ) {\n    userOrganizationAcctProviderSynchronization(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_synchronization_id: $organizationAcctProviderConnSynchronizationId\n    ) {\n      ...OrganizationAcctProviderConnSynchronizationFragment\n    }\n  }\n": typeof types.UserOrganizationAcctProviderSynchronizationDocument,
    "\n  mutation UserOrganizationAcctProviderConnCheckConnection(\n    $organizationId: String!\n\n    $acctProvider: ACCT_PROVIDER!\n    $acctProviderConnCode: String!\n  ) {\n    userOrganizationAcctProviderConnCheckConnection(\n      organization_id: $organizationId\n      acct_provider: $acctProvider\n      acct_provider_conn_code: $acctProviderConnCode\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": typeof types.UserOrganizationAcctProviderConnCheckConnectionDocument,
    "\n  mutation UnauthorizedUserOrganizationAcctProviderConnCheckConnection(\n    $acctProvider: ACCT_PROVIDER!\n    $acctProviderConnCode: String!\n  ) {\n    unauthorizedUserOrganizationAcctProviderConnCheckConnection(\n      acct_provider: $acctProvider\n      acct_provider_conn_code: $acctProviderConnCode\n    )\n  }\n": typeof types.UnauthorizedUserOrganizationAcctProviderConnCheckConnectionDocument,
    "\n  query AdminOrganizations(\n    $id: String\n    $email: String\n    $name: String\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    adminOrganizations(\n      id: $id\n      email: $email\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      edges {\n        cursor\n        node {\n          ...OrganizationFragment\n        }\n      }\n      totalCount\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": typeof types.AdminOrganizationsDocument,
    "\n  mutation UserSessionsClose {\n    userSessionsClose {\n      id\n    }\n  }\n": typeof types.UserSessionsCloseDocument,
    "\n  query UnauthorizedUserOrganizationUserInvite(\n    $code: String!\n    $email: String!\n    $organizationId: String!\n    $organizationInviteId: String!\n  ) {\n    unauthorizedUserOrganizationUserInvite(\n      code: $code\n      email: $email\n      organization_id: $organizationId\n      organization_invite_id: $organizationInviteId\n    ) {\n      invited_by\n      organization_name\n      organization_id\n      target_account_exists\n    }\n  }\n": typeof types.UnauthorizedUserOrganizationUserInviteDocument,
    "\n  query UserOrganizationUserInvites(\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationUserInvites(\n      after: $after,\n      first: $first,\n\n      before: $before,\n      last: $last,\n\n      skip: $skip,\n      take: $take,\n\n      sorting: $sorting\n    ) {\n      edges {\n        node {\n          id\n          email\n          role\n          code\n          expires_at\n          accepted_at\n          canceled_at\n          rejected_at\n          created_at\n          updated_at\n          organization_id\n          organization {\n              id\n              name\n              logo_picture_file {\n                  public_url\n              }\n          }\n          created_by_user_id\n          created_by_user {\n              id\n              first_name\n              last_name\n              email\n              profile_picture_file {\n                  public_url\n              }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      totalCount\n    }\n  }\n": typeof types.UserOrganizationUserInvitesDocument,
    "\n  mutation UserSignUpWithEmailStart($data: UserSignUpWithEmailStartSchema!) {\n    userSignUpWithEmailStart(data: $data)\n  }\n": typeof types.UserSignUpWithEmailStartDocument,
    "\n  mutation UserSignUpWithEmailVerify($data: UserSignUpWithEmailVerifySchema!) {\n    userSignUpWithEmailVerify(data: $data)\n  }\n": typeof types.UserSignUpWithEmailVerifyDocument,
    "\n  mutation UserOrganizationUserInviteAccept(\n    $code: String!\n    $organizationInviteId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationUserInviteAccept(\n      code: $code\n      organization_invite_id: $organizationInviteId\n      organization_id: $organizationId\n    ) {\n      role\n    }\n  }\n": typeof types.UserOrganizationUserInviteAcceptDocument,
    "\n  mutation UserSignUpWithEmailFinishSchema(\n    $data: UserSignUpWithEmailFinishSchema!\n  ) {\n    userSignUpWithEmailFinish(data: $data)\n  }\n": typeof types.UserSignUpWithEmailFinishSchemaDocument,
    "\n  mutation UserPasswordResetStart($data: UserPasswordResetStartSchema!) {\n    userPasswordResetStart(data: $data)\n  }\n": typeof types.UserPasswordResetStartDocument,
    "\n  mutation UserPasswordResetFinish($userPasswordResetFinishData2: UserPasswordResetFinishSchema!) {\n    userPasswordResetFinish(data: $userPasswordResetFinishData2)\n  }\n": typeof types.UserPasswordResetFinishDocument,
    "\n  mutation UserAuthProviderGetOAuthUrl($authProvider: AUTH_PROVIDER!) {\n    userAuthProviderGetOAuthUrl(auth_provider: $authProvider)\n  }\n": typeof types.UserAuthProviderGetOAuthUrlDocument,
    "\n  mutation UserAuthProviderGetOAuthToken($authProvider: AUTH_PROVIDER!, $authorizationToken: String!) {\n    userAuthProviderGetOAuthToken(auth_provider: $authProvider, authorization_token: $authorizationToken)\n  }\n": typeof types.UserAuthProviderGetOAuthTokenDocument,
    "\n  fragment OrganizationBillFragment on OrganizationBill {\n    id\n    unique_code\n    number\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    bill_date\n    due_date\n    vendor_email\n    vendor_address_line_1\n    vendor_address_number\n    vendor_address_line_2\n    vendor_address_city\n    vendor_address_state\n    vendor_address_zip_code\n    vendor_address_country_code_iso_3\n    vendor_address_lat\n    vendor_address_lng\n    created_at\n    updated_at\n\n    conn_linked_invoice_id\n    conn_locked_data_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_vendor_id\n    organization_vendor {\n      name\n      email\n      balance\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n    latest_acct_provider_status\n    latest_acct_provider_is_overdue\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    transaction_links {\n      id\n      amount\n      organization_bill_id\n\n      created_at\n      updated_at\n\n      organization_bill_transaction_id\n      organization_bill_transaction {\n        id\n      }\n    }\n  }\n": typeof types.OrganizationBillFragmentFragmentDoc,
    "\n  fragment OrganizationBillSummaryFragment on OrganizationBillSummary {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    customer_organization_vendor_id\n    customer_organization_vendor {\n      id\n      name\n    }\n\n    customer_organization_id\n    customer_organization {\n      id\n      name\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationBillFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    status\n\n    total_open_bill_count\n    total_overdue_bill_count\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n  }\n": typeof types.OrganizationBillSummaryFragmentFragmentDoc,
    "\n  query UserOrganizationBillSummary(\n    $organizationId: String!\n    $organizationVendorId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: BILL_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: BILL_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationBillSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationBillSummaryFragment\n    }\n  }\n": typeof types.UserOrganizationBillSummaryDocument,
    "\n  query UserOrganizationBill(\n    $organizationId: String!\n    $organizationBillId: String!\n  ) {\n    userOrganizationBill(\n      organization_id: $organizationId\n      organization_bill_id: $organizationBillId\n    ) {\n      ...OrganizationBillFragment\n    }\n  }\n": typeof types.UserOrganizationBillDocument,
    "\n  mutation UserOrganizationBillCreate(\n    $organizationId: String!\n    $data: UserOrganizationBillSchema!\n  ) {\n    userOrganizationBillCreate(organization_id: $organizationId, data: $data) {\n      ...OrganizationBillFragment\n    }\n  }\n": typeof types.UserOrganizationBillCreateDocument,
    "\n  fragment OrganizationConnectionFragment on OrganizationConnection {\n    id\n\n    is_valid\n    is_connected\n\n    vendor_conn_status\n    vendor_conn_status_at\n    vendor_organization_id\n    vendor_organization_name\n    vendor_organization_email\n    vendor_target_customer_id\n    vendor_target_customer_name\n    vendor_target_customer_email\n\n    customer_conn_status\n    customer_conn_status_at\n    customer_organization_id\n    customer_organization_name\n    customer_organization_email\n    customer_target_vendor_id\n    customer_target_vendor_name\n    customer_target_vendor_email\n\n    created_at\n    updated_at\n  }\n": typeof types.OrganizationConnectionFragmentFragmentDoc,
    "\n  query UserOrganizationConnections(\n    $organizationId: String!\n    $status: ORGANIZATION_CONNECTION_STATUS\n  ) {\n    userOrganizationConnections(\n      organization_id: $organizationId\n      status: $status\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationConnectionFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": typeof types.UserOrganizationConnectionsDocument,
    "\n  query UserOrganizationConnection(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnection(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": typeof types.UserOrganizationConnectionDocument,
    "\n  mutation UserOrganizationConnectionInviteCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationConnectionInviteCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": typeof types.UserOrganizationConnectionInviteCustomerDocument,
    "\n  mutation UserOrganizationConnectionInviteVendor(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationConnectionInviteVendor(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": typeof types.UserOrganizationConnectionInviteVendorDocument,
    "\n  mutation UserOrganizationConnectionAccept(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionAccept(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": typeof types.UserOrganizationConnectionAcceptDocument,
    "\n  mutation UserOrganizationConnectionReject(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionReject(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": typeof types.UserOrganizationConnectionRejectDocument,
    "\n  mutation UserOrganizationCustomerConnLock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnLock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": typeof types.UserOrganizationCustomerConnLockDocument,
    "\n  mutation UserOrganizationCustomerConnUnlock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnUnlock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": typeof types.UserOrganizationCustomerConnUnlockDocument,
    "\n  mutation UserOrganizationVendorConnLock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnLock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": typeof types.UserOrganizationVendorConnLockDocument,
    "\n  mutation UserOrganizationVendorConnUnlock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnUnlock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": typeof types.UserOrganizationVendorConnUnlockDocument,
    "\n  query userOrganizationVendorContacts(\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContacts(\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          email\n          id\n          is_default\n          name\n          phone_number\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": typeof types.userOrganizationVendorContactsDocument,
    "\n  query UserOrganizationCustomerContacts(\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContacts(\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          id\n          name\n          email\n          phone_number\n          is_default\n          send_invoice_reminders\n          created_at\n          updated_at\n          organization_customer_id\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": typeof types.UserOrganizationCustomerContactsDocument,
    "\n  mutation userOrganizationVendorContactCreate(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $data: UserOrganizationVendorContactCreateSchema!\n  ) {\n    userOrganizationVendorContactCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      organization_vendor_id\n    }\n  }\n": typeof types.userOrganizationVendorContactCreateDocument,
    "\n  mutation UserOrganizationCustomerContactCreate(\n    $data: UserOrganizationCustomerContactCreateSchema!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactCreate(\n      data: $data\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n": typeof types.UserOrganizationCustomerContactCreateDocument,
    "\n  mutation UserOrganizationVendorContactUpdate(\n    $data: UserOrganizationVendorContactUpdateSchema!\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactUpdate(\n      data: $data\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      is_default\n      name\n      phone_number\n    }\n  }\n": typeof types.UserOrganizationVendorContactUpdateDocument,
    "\n  mutation UserOrganizationCustomerContactUpdate(\n    $data: UserOrganizationCustomerContactUpdateSchema!\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactUpdate(\n      data: $data\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n": typeof types.UserOrganizationCustomerContactUpdateDocument,
    "\n  mutation UserOrganizationVendorContactDelete(\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactDelete(\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      name\n      organization_vendor_id\n      phone_number\n      is_default\n    }\n  }\n": typeof types.UserOrganizationVendorContactDeleteDocument,
    "\n  mutation UserOrganizationCustomerContactDelete(\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactDelete(\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n": typeof types.UserOrganizationCustomerContactDeleteDocument,
    "\n  fragment OrganizationCustomerFragment on OrganizationCustomer {\n    id\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    balance\n    overdue_amount\n  }\n": typeof types.OrganizationCustomerFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerInvoiceSummaryFragment on OrganizationCustomer {\n    invoice_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n\n              provider\n              provider_code\n              provider_url\n              provider_errors\n              provider_warnings\n              last_successful_sync_id\n              last_successful_sync_at\n              last_sync_succeeded\n              last_sync_id\n              last_sync_at\n\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              invoice_date\n              due_date\n              customer_email\n              created_at\n              updated_at\n              status\n              latest_acct_provider_status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n\n      total_open_invoice_count\n      total_overdue_invoice_count\n\n      total_amount\n      paid_amount\n      overdue_amount\n      balance\n    }\n  }\n": typeof types.OrganizationCustomerInvoiceSummaryFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerAdditionalDataFragment on OrganizationCustomer {\n    ...OrganizationCustomerInvoiceSummaryFragment,\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n    }\n  }\n": typeof types.OrganizationCustomerAdditionalDataFragmentFragmentDoc,
    "\n  query UserOrganizationCustomers(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationCustomers(\n        organization_id: $organizationId\n\n        name: $name\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationCustomerFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n": typeof types.UserOrganizationCustomersDocument,
    "\n  query UserOrganizationCustomerStatement(\n    $organizationId: String!\n    $organizationCustomerId: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationCustomerStatement(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n    }\n  }\n": typeof types.UserOrganizationCustomerStatementDocument,
    "\n  query UserOrganizationCustomerStatementLine(\n    $organizationId: String!,\n    $organizationCustomerId: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n  ) {\n    userOrganizationCustomerStatementLine(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      organization_invoice_id: $organizationInvoiceId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n": typeof types.UserOrganizationCustomerStatementLineDocument,
    "\n  query UserOrganizationCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!,\n    ) {\n    userOrganizationCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId,\n      ) {\n      ...OrganizationCustomerFragment\n      ...OrganizationCustomerAdditionalDataFragment\n    }\n  }\n": typeof types.UserOrganizationCustomerDocument,
    "\n  mutation UserOrganizationCustomerUpdate($organizationId: String!, $organizationCustomerId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerUpdate(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n      ...OrganizationCustomerAdditionalDataFragment\n    }\n  }\n": typeof types.UserOrganizationCustomerUpdateDocument,
    "\n  mutation UserOrganizationCustomerCreate($organizationId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": typeof types.UserOrganizationCustomerCreateDocument,
    "\n  mutation UserOrganizationCustomerSendStatementEmail($targets: [UserOrganizationCustomerSendStatementEmailSchema!]!, $organizationId: String!) {\n    userOrganizationCustomerSendStatementEmail(targets: $targets, organization_id: $organizationId)\n  }\n": typeof types.UserOrganizationCustomerSendStatementEmailDocument,
    "\n  mutation UserOrganizationCustomerGetStatementLink($organizationId: String!, $organizationCustomerId: String!, $expiresAt: DateTime) {\n    userOrganizationCustomerGetStatementLink(organization_id: $organizationId, organization_customer_id: $organizationCustomerId, expires_at: $expiresAt)\n  }\n": typeof types.UserOrganizationCustomerGetStatementLinkDocument,
    "\n  mutation UserOrganizationCustomerSynchronize($organizationId: String!, $organizationCustomerId: String!) {\n    userOrganizationCustomerSynchronize(organization_id: $organizationId, organization_customer_id: $organizationCustomerId)\n  }\n": typeof types.UserOrganizationCustomerSynchronizeDocument,
    "\n  fragment OrganizationInvoiceFragment on OrganizationInvoice {\n    id\n    unique_code\n    number\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    currency_code\n    description\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    invoice_date\n    due_date\n    created_at\n    updated_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_customer_id\n    organization_customer {\n      name\n      email\n      balance\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n    latest_acct_provider_status\n    latest_acct_provider_is_overdue\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    email_sent_at\n\n    payment_options {\n        method\n        url\n        payload\n    }\n\n    transaction_links {\n      id\n      amount\n      organization_invoice_id\n\n      created_at\n      updated_at\n\n      organization_invoice_transaction_id\n      organization_invoice_transaction {\n        id\n      }\n    }\n  }\n": typeof types.OrganizationInvoiceFragmentFragmentDoc,
    "\n  fragment OrganizationInvoiceSummaryFragment on OrganizationInvoiceSummary {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      name\n      email\n    }\n\n    customer_organization_id\n    customer_organization {\n      name\n      email\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationInvoiceFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    status\n\n    total_open_invoice_count\n    total_overdue_invoice_count\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    latest_acct_provider_one_to_thirty_days_due_amount\n    latest_acct_provider_thirty_one_to_sixty_days_due_amount\n    latest_acct_provider_sixty_plus_days_due_amount\n  }\n": typeof types.OrganizationInvoiceSummaryFragmentFragmentDoc,
    "\n  query UserOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationCustomerId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n": typeof types.UserOrganizationInvoiceSummaryDocument,
    "\n  query UserOrganizationInvoice(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoice(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    ) {\n      ...OrganizationInvoiceFragment\n    }\n  }\n": typeof types.UserOrganizationInvoiceDocument,
    "\n  mutation UserOrganizationInvoiceCreate(\n    $data: UserOrganizationInvoiceSchema!\n    $organizationId: String!\n  ) {\n    userOrganizationInvoiceCreate(\n      data: $data\n      organization_id: $organizationId\n    ) {\n      amount\n      balance\n      created_at\n      currency_code\n      id\n      is_overdue\n      invoice_date\n      status\n      email_sent_at\n      paid_at\n      paid_amount\n      total_amount\n    }\n  }\n": typeof types.UserOrganizationInvoiceCreateDocument,
    "\n  mutation UserOrganizationCustomerSendInvoiceEmail(\n    $organizationId: String!\n    $targets: [UserOrganizationCustomerSendInvoiceEmailSchema!]!\n  ) {\n    userOrganizationCustomerSendInvoiceEmail(\n      organization_id: $organizationId\n      targets: $targets\n    )\n  }\n": typeof types.UserOrganizationCustomerSendInvoiceEmailDocument,
    "\n  mutation UserOrganizationInvoiceGetPDF(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userOrganizationInvoiceGetPDF(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n": typeof types.UserOrganizationInvoiceGetPDFDocument,
    "\n  query UnconnectedCustomerOrganizationInvoiceSummary(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationInvoiceSummary(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n": typeof types.UnconnectedCustomerOrganizationInvoiceSummaryDocument,
    "\n  mutation UnconnectedCustomerOrganizationInvoiceGetPDF(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    unconnectedCustomerOrganizationInvoiceGetPDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n": typeof types.UnconnectedCustomerOrganizationInvoiceGetPDFDocument,
    "\n  fragment OrganizationSubscriptionDataFragment on OrganizationSubscriptionData {\n    subscription_level\n    organization_user_seats\n    requires_user_action\n    requires_provider_refresh\n    active_subscriptions {\n        id\n        provider\n        provider_status\n    }\n    active_plans {\n        item_type\n        status\n    }\n    active_modules {\n        item_type\n        status\n    }\n    active_addons {\n        item_type\n        quantity\n        status\n    }\n  }\n": typeof types.OrganizationSubscriptionDataFragmentFragmentDoc,
    "\n  fragment OrganizationFragment on Organization {\n    id\n    name\n    email\n    unique_name\n    unique_code\n    phone_number\n    address_line_1\n    address_number\n    address_line_2\n    address_city\n    address_state\n    address_zip_code\n    address_country_code_iso_3\n    address_lat\n    address_lng\n    primary_contact_name\n    business_name\n    business_industry\n    business_number_of_employees\n    business_address_line_1\n    business_address_number\n    business_address_line_2\n    business_address_city\n    business_address_state\n    business_address_zip_code\n    business_address_country_code_iso_3\n    business_address_lat\n    business_address_lng\n    business_tax_code_type\n    business_tax_code\n    timezone\n    language\n\n    created_at\n    updated_at\n\n    logo_picture_file_id\n    logo_picture_file {\n      public_url\n    }\n\n    current_email_verification_id\n    current_phone_number_verification_id\n\n    subscription_level\n    subscription_data {\n      ...OrganizationSubscriptionDataFragment\n    }\n\n    setting_receive_customer_notification_mode\n  }\n": typeof types.OrganizationFragmentFragmentDoc,
    "\n  fragment OrganizationUserFragment on OrganizationUser {\n    id\n    role\n    is_current_organization_user_seat_available\n    receive_invoice_reminders\n    receive_customer_notification_mode\n    created_at\n    updated_at\n    organization_id\n    user_id\n    user {\n      id\n      email\n      phone_number\n      first_name\n      last_name\n      language\n      profile_picture_file_id\n      profile_picture_file {\n        public_url\n      }\n      current_email_verification_id\n      current_phone_number_verification_id\n    }\n  }\n": typeof types.OrganizationUserFragmentFragmentDoc,
    "\n  fragment OrganizationInviteFragment on OrganizationInvite {\n    id\n    email\n    role\n    code\n    expires_at\n    accepted_at\n    canceled_at\n    rejected_at\n    created_at\n    updated_at\n    organization_id\n    organization {\n        id\n        name\n        logo_picture_file {\n            public_url\n        }\n    }\n    created_by_user_id\n    created_by_user {\n        id\n        first_name\n        last_name\n        email\n        profile_picture_file {\n            public_url\n        }\n    }\n  }\n": typeof types.OrganizationInviteFragmentFragmentDoc,
    "\n  query UserOrganization ($organizationId: String!) {\n    userOrganization(organization_id: $organizationId) {\n      ...OrganizationFragment\n    }\n  }\n": typeof types.UserOrganizationDocument,
    "\n  query UserOrganizationBaseSettings(\n    $organizationId: String!\n  ) {\n    userOrganization(\n      organization_id: $organizationId\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n": typeof types.UserOrganizationBaseSettingsDocument,
    "\n  mutation UserOrganizationCreate($data: UserOrganizationCreateSchema!){\n    userOrganizationCreate(data: $data) {\n      id\n      email\n      name\n      phone_number\n      primary_contact_name\n    }\n  }\n": typeof types.UserOrganizationCreateDocument,
    "\n  query UserOrganizationCollaborators(\n    $organizationId: String!\n  ) {\n    userOrganizationCollaborators(\n      organization_id: $organizationId\n    ) {\n      ...OrganizationUserFragment\n    }\n  }\n": typeof types.UserOrganizationCollaboratorsDocument,
    "\n  mutation UserOrganizationInviteCollaboratorCreate($data: UserOrganizationInviteCollaboratorCreateSchema!, $organizationId: String!) {\n    userOrganizationInviteCollaboratorCreate(data: $data, organization_id: $organizationId) {\n      expires_at\n    }\n  }\n": typeof types.UserOrganizationInviteCollaboratorCreateDocument,
    "\n  mutation UserOrganizationInviteCollaboratorCancel($organizationId: String!, $organizationInviteId: String!) {\n    userOrganizationInviteCollaboratorCancel(organization_id: $organizationId, organization_invite_id: $organizationInviteId) {\n      ...OrganizationInviteFragment\n    }\n  }\n": typeof types.UserOrganizationInviteCollaboratorCancelDocument,
    "\n  mutation UserOrganizationInviteCollaboratorResend($organizationId: String!, $organizationInviteId: String!) {\n    userOrganizationInviteCollaboratorResend(organization_id: $organizationId, organization_invite_id: $organizationInviteId) {\n      ...OrganizationInviteFragment\n    }\n  }\n": typeof types.UserOrganizationInviteCollaboratorResendDocument,
    "\n  query UserOrganizationInviteCollaborators(\n    $organizationId: String!,\n\n    $accepted: Boolean,\n    $canceled: Boolean,\n    $expired: Boolean,\n    $rejected: Boolean,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInviteCollaborators(\n      organization_id: $organizationId,\n\n      accepted: $accepted,\n      canceled: $canceled,\n      expired: $expired,\n      rejected: $rejected,\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationInviteFragment\n        }\n      }\n      pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n      }\n    }\n  }\n": typeof types.UserOrganizationInviteCollaboratorsDocument,
    "\n  mutation UserOrganizationCollaboratorUpdate($data: UserOrganizationCollaboratorUpdateSchema!, $organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorUpdate(data: $data, organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      role\n    }\n  }\n": typeof types.UserOrganizationCollaboratorUpdateDocument,
    "\n  mutation UserOrganizationCollaboratorDelete($organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorDelete(organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      id\n    }\n  }\n": typeof types.UserOrganizationCollaboratorDeleteDocument,
    "\n  mutation UserOrganizationUpdate(\n    $organizationId: String!\n    $data: UserOrganizationUpdateSchema!\n  ) {\n    userOrganizationUpdate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationFragment\n    }\n  }\n": typeof types.UserOrganizationUpdateDocument,
    "\n  mutation UserOrganizationLogoPictureRemove($organizationId: String!) {\n    userOrganizationLogoPictureRemove(organization_id: $organizationId) {\n      logo_picture_file {\n        public_url\n      }\n    }\n  }\n": typeof types.UserOrganizationLogoPictureRemoveDocument,
    "\n  mutation UserOrganizationSendGenericInviteMail($organizationId: String!, $email: String!) {\n    userOrganizationSendGenericInviteMail(organization_id: $organizationId, email: $email)\n  }\n": typeof types.UserOrganizationSendGenericInviteMailDocument,
    "\n  mutation UserOrganizationEmailVerifyOrChangeStart($organizationId: String!, $data: UserOrganizationEmailVerifyOrChangeStartSchema!) {\n    userOrganizationEmailVerifyOrChangeStart(organization_id: $organizationId, data: $data)\n  }\n": typeof types.UserOrganizationEmailVerifyOrChangeStartDocument,
    "\n  mutation UserOrganizationEmailVerifyOrChangeFinish($organizationId: String!, $data: UserOrganizationEmailVerifyOrChangeFinishSchema!) {\n    userOrganizationEmailVerifyOrChangeFinish(organization_id: $organizationId, data: $data) {\n      ...OrganizationFragment\n    }\n  }\n": typeof types.UserOrganizationEmailVerifyOrChangeFinishDocument,
    "\n  fragment OrganizationProjectChangeFragment on OrganizationProjectChange {\n    id\n\n    organization_project_change_request_id\n    previous_budget_amount\n    previous_ends_at\n    previous_name\n    previous_starts_at\n\n    created_at\n    updated_at\n  }\n": typeof types.OrganizationProjectChangeFragmentFragmentDoc,
    "\n  fragment OrganizationProjectChangeRequestFragment on OrganizationProjectChangeRequest {\n    id\n\n    accepted_at\n    budget_amount\n    canceled_at\n    contract_url\n    created_by_user_id\n    created_by_user_name\n    created_side\n    ends_at\n    expires_at\n    finished_by_user_id\n    finished_by_user_name\n    finished_side\n    name\n    published_at\n    rejected_at\n    sequence_number\n    starts_at\n    status\n    organization_project_id\n\n    organization_project_change {\n      ...OrganizationProjectChangeFragment\n    }\n\n    created_at\n    updated_at\n  }\n": typeof types.OrganizationProjectChangeRequestFragmentFragmentDoc,
    "\n  fragment OrganizationProjectFragment on OrganizationProject {\n    id\n\n    budget_amount\n    budget_currency_code\n    canceled_at\n    completed_at\n    contract_url\n    description\n    ends_at\n    name\n    starts_at\n    status\n\n    organization_id\n    organization {\n      name\n    }\n\n    organization_customer_id\n    organization_customer {\n      name\n    }\n\n    created_at\n    updated_at\n  }\n": typeof types.OrganizationProjectFragmentFragmentDoc,
    "\n  query UserOrganizationProjects(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n\n    $name: String,\n\n    $started: Boolean,\n    $ended: Boolean,\n    $canceled: Boolean,\n    $completed: Boolean,\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationProjects(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": typeof types.UserOrganizationProjectsDocument,
    "\n  query UserOrganizationProject(\n    $organizationId: String!,\n    $organizationProjectId: String!,\n  ) {\n    userOrganizationProject(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": typeof types.UserOrganizationProjectDocument,
    "\n  mutation UserOrganizationProjectCreate(\n    $organizationId: String!\n    $data: UserOrganizationProjectCreateSchema!,\n  ) {\n    userOrganizationProjectCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": typeof types.UserOrganizationProjectCreateDocument,
    "\n  mutation UserOrganizationProjectUpdate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $data: UserOrganizationProjectUpdateSchema!,\n  ) {\n    userOrganizationProjectUpdate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": typeof types.UserOrganizationProjectUpdateDocument,
    "\n  mutation UserOrganizationProjectDelete(\n    $organizationId: String!,\n    $organizationProjectId: String!\n  ) {\n    userOrganizationProjectDelete(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": typeof types.UserOrganizationProjectDeleteDocument,
    "\n  mutation UserOrganizationProjectChangeRequestCreate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userOrganizationProjectChangeRequestCreate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserOrganizationProjectChangeRequestCreateDocument,
    "\n  mutation UserOrganizationProjectChangeRequestUpdate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userOrganizationProjectChangeRequestUpdate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserOrganizationProjectChangeRequestUpdateDocument,
    "\n  mutation UserOrganizationProjectChangeRequestCancel(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestCancel(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserOrganizationProjectChangeRequestCancelDocument,
    "\n  mutation UserOrganizationProjectChangeRequestAccept(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestAccept(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserOrganizationProjectChangeRequestAcceptDocument,
    "\n  mutation UserOrganizationProjectChangeRequestReject(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestReject(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserOrganizationProjectChangeRequestRejectDocument,
    "\n  query UserCustomerOrganizationProjects(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n\n    $name: String,\n\n    $started: Boolean,\n    $ended: Boolean,\n    $canceled: Boolean,\n    $completed: Boolean,\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationProjects(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": typeof types.UserCustomerOrganizationProjectsDocument,
    "\n  query UserCustomerOrganizationProject(\n    $organizationId: String!,\n    $organizationVendorId: String!\n    $organizationProjectId: String!,\n  ) {\n    userCustomerOrganizationProject(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": typeof types.UserCustomerOrganizationProjectDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestCreate(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserCustomerOrganizationProjectChangeRequestCreateDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestUpdate(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserCustomerOrganizationProjectChangeRequestUpdateDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestCancel(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestCancel(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserCustomerOrganizationProjectChangeRequestCancelDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestAccept(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestAccept(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserCustomerOrganizationProjectChangeRequestAcceptDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestReject(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestReject(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UserCustomerOrganizationProjectChangeRequestRejectDocument,
    "\n  query UnconnectedCustomerOrganizationProjects(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $name: String\n\n    $started: Boolean\n    $ended: Boolean\n    $canceled: Boolean\n    $completed: Boolean\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationProjects(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": typeof types.UnconnectedCustomerOrganizationProjectsDocument,
    "\n  query UnconnectedCustomerOrganizationProject(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n  ) {\n    unconnectedCustomerOrganizationProject(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": typeof types.UnconnectedCustomerOrganizationProjectDocument,
    "\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestActionRequestToken(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestActionRequestToken(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n    )\n  }\n": typeof types.UnconnectedCustomerOrganizationProjectChangeRequestActionRequestTokenDocument,
    "\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestAccept(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n    $verificationCode: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestAccept(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n      verification_code: $verificationCode\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UnconnectedCustomerOrganizationProjectChangeRequestAcceptDocument,
    "\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestReject(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n    $verificationCode: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestReject(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n      verification_code: $verificationCode\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": typeof types.UnconnectedCustomerOrganizationProjectChangeRequestRejectDocument,
    "\n  fragment OrganizationReminderSettingFragment on OrganizationReminderSetting {\n    id\n    due_date_mode\n    days_amount\n    repeat_mode\n    repeat_value\n    selected_hour\n    created_at\n    updated_at\n    organization_id\n    organization_customer_id\n    organization_project_id\n    organization_invoice_id\n  }\n": typeof types.OrganizationReminderSettingFragmentFragmentDoc,
    "\n  query UserOrganizationReminderSettings(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n    $organizationProjectId: String,\n    $organizationInvoiceId: String,\n\n    $dueDateMode: REMINDER_DUE_DATE_MODE,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationReminderSettings(\n      organization_id: $organizationId\n\n      organization_customer_id: $organizationCustomerId\n      organization_project_id: $organizationProjectId\n      organization_invoice_id: $organizationInvoiceId\n\n      due_date_mode: $dueDateMode\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationReminderSettingFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n": typeof types.UserOrganizationReminderSettingsDocument,
    "\n  query UserOrganizationReminderSetting($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSetting(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": typeof types.UserOrganizationReminderSettingDocument,
    "\n  mutation UserOrganizationReminderSettingCreate($organizationId: String!, $data: UserOrganizationReminderSettingSchema!) {\n    userOrganizationReminderSettingCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": typeof types.UserOrganizationReminderSettingCreateDocument,
    "\n  mutation UserOrganizationReminderSettingUpdate(\n    $organizationId: String!,\n    $organizationReminderSettingId: String!,\n    $data: UserOrganizationReminderSettingSchema!\n  ) {\n    userOrganizationReminderSettingUpdate(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": typeof types.UserOrganizationReminderSettingUpdateDocument,
    "\n  mutation UserOrganizationReminderSettingDelete($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSettingDelete(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": typeof types.UserOrganizationReminderSettingDeleteDocument,
    "\n  mutation UserOrganizationReminderSettingGlobalUpdate(\n    $organizationId: String!\n    $settingSendInvoiceDueReminders: Boolean!\n    $settingSendInvoiceOverdueReminders: Boolean!\n    $settingAllowInvoiceDueSnoozeReminders: Boolean!\n    $settingAllowInvoiceOverdueSnoozeReminders: Boolean!\n  ) {\n    userOrganizationReminderSettingGlobalUpdate(\n      organization_id: $organizationId\n      setting_send_invoice_due_reminders: $settingSendInvoiceDueReminders\n      setting_send_invoice_overdue_reminders: $settingSendInvoiceOverdueReminders\n      setting_allow_invoice_due_snooze_reminders: $settingAllowInvoiceDueSnoozeReminders\n      setting_allow_invoice_overdue_snooze_reminders: $settingAllowInvoiceOverdueSnoozeReminders\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n": typeof types.UserOrganizationReminderSettingGlobalUpdateDocument,
    "\n  fragment OrganizationCustomerStatementInvoiceLineFragment on OrganizationCustomerStatementInvoiceLine {\n    id\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    organization_customer_id\n    organization_invoice_id\n    paid_amount\n    running_balance\n    invoice_status\n    type\n    updated_at\n\n    organization_invoice {\n      provider\n      provider_code\n\n      payment_options {\n        method\n        url\n        payload\n      }\n    }\n  }\n": typeof types.OrganizationCustomerStatementInvoiceLineFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerStatementTransactionLineFragment on OrganizationCustomerStatementTransactionLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_transaction_id\n    paid_amount\n    running_balance\n    transaction_status\n    type\n    updated_at\n\n    organization_invoice_transaction {\n      provider\n      provider_code\n\n      links {\n        id\n        amount\n        organization_invoice_id\n      }\n    }\n  }\n": typeof types.OrganizationCustomerStatementTransactionLineFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerStatementFragment on OrganizationCustomerStatement {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      name\n      email\n    }\n\n    customer_organization_id\n    customer_organization {\n      name\n      email\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ... on OrganizationCustomerStatementInvoiceLine {\n            ...OrganizationCustomerStatementInvoiceLineFragment\n          }\n          ... on OrganizationCustomerStatementTransactionLine {\n            ...OrganizationCustomerStatementTransactionLineFragment\n          }\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    latest_acct_provider_one_to_thirty_days_due_amount\n    latest_acct_provider_thirty_one_to_sixty_days_due_amount\n    latest_acct_provider_sixty_plus_days_due_amount\n\n    total_open_invoice_count\n    total_overdue_invoice_count\n  }\n": typeof types.OrganizationCustomerStatementFragmentFragmentDoc,
    "\n  query UserCustomerOrganizationStatement(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationStatement(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n": typeof types.UserCustomerOrganizationStatementDocument,
    "\n  mutation UserCustomerOrganizationStatementLineGetPDF(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userCustomerOrganizationStatementLineGetPDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n": typeof types.UserCustomerOrganizationStatementLineGetPDFDocument,
    "\n  mutation UnconnectedCustomerOrganizationStatementRequestToken(\n    $uniqueCode: String!\n    $email: String!\n  ) {\n    unconnectedCustomerOrganizationStatementRequestToken(\n      unique_code: $uniqueCode\n      email: $email\n    )\n}\n": typeof types.UnconnectedCustomerOrganizationStatementRequestTokenDocument,
    "\n  query UnconnectedCustomerOrganizationStatement(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationStatement(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n": typeof types.UnconnectedCustomerOrganizationStatementDocument,
    "\n  mutation UnconnectedCustomerOrganizationStatementLineGetPDF(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    unconnectedCustomerOrganizationStatementLineGetPDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n": typeof types.UnconnectedCustomerOrganizationStatementLineGetPDFDocument,
    "\n  query UserCustomerOrganizationStatementLine(\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String!,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $organizationVendorId: String!\n  ) {\n    userCustomerOrganizationStatementLine(\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n": typeof types.UserCustomerOrganizationStatementLineDocument,
    "\n  query UnconnectedCustomerOrganizationStatementLine(\n    $email: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $token: String!,\n    $uniqueCode: String!\n  ) {\n    unconnectedCustomerOrganizationStatementLine(\n      email: $email,\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      token: $token,\n      unique_code: $uniqueCode\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n": typeof types.UnconnectedCustomerOrganizationStatementLineDocument,
    "\n  query UserCustomerOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n": typeof types.UserCustomerOrganizationInvoiceSummaryDocument,
    "\n  mutation UserCustomerOrganizationInvoiceGetPDF(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userCustomerOrganizationInvoiceGetPDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n": typeof types.UserCustomerOrganizationInvoiceGetPDFDocument,
    "\n  mutation UserCustomerOrganizationSynchronize($organizationId: String!, $organizationVendorId: String!) {\n    userCustomerOrganizationSynchronize(organization_id: $organizationId, organization_vendor_id: $organizationVendorId)\n  }\n": typeof types.UserCustomerOrganizationSynchronizeDocument,
    "\n  mutation UnconnectedCustomerSynchronize($uniqueCode: String!, $email: String!, $token: String!) {\n    unconnectedCustomerSynchronize(unique_code: $uniqueCode, email: $email,token: $token)\n  }\n": typeof types.UnconnectedCustomerSynchronizeDocument,
    "\n  fragment OrganizationPaymentMethodFragment on OrganizationPaymentMethod {\n    id\n    payment_method\n    payment_provider\n    bound_mode\n    bound_id\n    is_enabled\n    is_default\n    billing_first_name\n    billing_last_name\n    billing_email\n    billing_phone_number\n    billing_address_line_1\n    billing_address_number\n    billing_address_line_2\n    billing_address_city\n    billing_address_state\n    billing_address_zip_code\n    billing_address_country_code_iso_3\n    created_at\n    updated_at\n    payment_method_info {\n      ... on OrganizationPaymentMethodCreditCardInfo {\n        type\n        card_number_masked\n        card_brand\n      }\n      ... on OrganizationPaymentMethodGenericInfo {\n        type\n      }\n    }\n    organization_id\n  }\n": typeof types.OrganizationPaymentMethodFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionTransactionFragment on OrganizationSubscriptionTransaction {\n    id\n    transaction_provider\n    provider_transaction_code\n    transaction_code\n    amount\n    currency\n    started_at\n    succeeded_at\n    failed_at\n    reverted_at\n    transaction_date\n    due_date\n    procedure\n    subscription_item_ids\n    period_ends_at\n    period_sequence\n    period_starts_at\n    created_at\n    updated_at\n    status\n    organization_subscription_id\n    organization_payment_method_id\n  }\n": typeof types.OrganizationSubscriptionTransactionFragmentFragmentDoc,
    "\n  fragment OrganizationCouponFragment on OrganizationCoupon {\n    id\n    campaign\n    category\n    subdivision\n    is_activation_unlimited\n    activated_at\n    expires_at\n    created_at\n    updated_at\n    status\n    organization_id\n    category_description\n    subdivision_description\n  }\n": typeof types.OrganizationCouponFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionItemFragment on OrganizationSubscriptionItem {\n    id\n    quantity\n    unit_price\n    started_at\n    canceled_at\n    item_type\n    created_at\n    updated_at\n    status\n    category\n    classification\n    organization_subscription_id\n  }\n": typeof types.OrganizationSubscriptionItemFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionFragment on OrganizationSubscription {\n    id\n    price_total_amount\n    price_currency\n    price_tier\n    current_period_ends_at\n    current_period_starts_at\n    canceled_at\n    renew_interval\n    next_payment_at\n    provider\n    provider_status\n    provider_plan_code\n    provider_subscription_code\n    provider_last_verified_at\n    has_outdated_price\n    created_at\n    updated_at\n    status\n    payment_status\n\n    organization_id\n    organization_coupon_id\n\n    organization_payment_method_id\n    organization_payment_method {\n      ...OrganizationPaymentMethodFragment\n    }\n\n    items {\n      ...OrganizationSubscriptionItemFragment\n    }\n\n    transactions {\n      ...OrganizationSubscriptionTransactionFragment\n    }\n  }\n": typeof types.OrganizationSubscriptionFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionDefaultPricingFragment on OrganizationSubscriptionDefaultPricing {\n    organization_id\n    organization_coupon_id\n    organization_coupon {\n      ...OrganizationCouponFragment\n    }\n\n    price_tier\n    price_currency\n\n    options {\n      renew_interval\n      options {\n        base_item {\n          item_type\n          category\n          additional_organization_seats\n\n          original_unit_price\n          unit_price\n\n          is_purchase_available\n\n          current_item_pending_purchase_subscription {\n            ...OrganizationSubscriptionFragment\n          }\n\n          current_item_active_until\n          current_item_subscription {\n            ...OrganizationSubscriptionFragment\n          }\n        }\n        available_addon_items {\n          item_type\n          is_purchase_available\n          original_unit_price\n          unit_price\n        }\n      }\n    }\n  }\n": typeof types.OrganizationSubscriptionDefaultPricingFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionCalculatedPricingFragment on OrganizationSubscriptionCalculatedPricing {\n    organization_id\n    organization_coupon_id\n    organization_coupon {\n      ...OrganizationCouponFragment\n    }\n    price_tier\n    price_currency\n    renew_interval\n    selected_base_item {\n      item_type\n      original_unit_price\n      unit_price\n      category\n    }\n    selected_addon_items {\n      item_type\n      quantity\n      original_unit_price\n      unit_price\n    }\n    original_price_total_amount\n    price_total_amount\n    provider\n  }\n": typeof types.OrganizationSubscriptionCalculatedPricingFragmentFragmentDoc,
    "\n  query UserOrganizationSubscriptions(\n    $organizationId: String!\n    $organizationCouponId: String\n    $organizationPaymentMethodId: String\n\n    $provider: ORGANIZATION_SUBSCRIPTION_PROVIDER\n    $providerStatus: ORGANIZATION_SUBSCRIPTION_PROVIDER_STATUS\n    $providerPlanCode: String\n    $providerSubscriptionCode: String\n\n    $containsItem: ORGANIZATION_SUBSCRIPTION_ITEM\n\n    $renewInterval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL\n\n    $priceTier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER\n\n    $status: ORGANIZATION_SUBSCRIPTION_STATUS\n\n    $started: Boolean\n    $canceled: Boolean\n    $expired: Boolean\n\n    $hasOutdatedPrice: Boolean\n    $hasError: Boolean\n\n    $skip: Int\n    $take: Int\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationSubscriptions(\n      organization_id: $organizationId\n      organization_coupon_id: $organizationCouponId\n      organization_payment_method_id: $organizationPaymentMethodId\n\n      provider: $provider\n      provider_status: $providerStatus\n      provider_plan_code: $providerPlanCode\n      provider_subscription_code: $providerSubscriptionCode\n\n      contains_item: $containsItem\n\n      renew_interval: $renewInterval\n\n      price_tier: $priceTier\n\n      status: $status\n\n      started: $started\n      canceled: $canceled\n      expired: $expired\n\n      has_outdated_price: $hasOutdatedPrice\n      has_error: $hasError\n\n      skip: $skip\n      take: $take\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      sorting: $sorting\n    ) {\n      edges {\n        node {\n          ...OrganizationSubscriptionFragment\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      totalCount\n    }\n  }\n": typeof types.UserOrganizationSubscriptionsDocument,
    "\n  query UserOrganizationSubscription(\n    $organizationId: String!\n    $subscriptionId: String!\n  ) {\n    userOrganizationSubscription(\n      organization_id: $organizationId\n      organization_subscription_id: $subscriptionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n": typeof types.UserOrganizationSubscriptionDocument,
    "\n  query UserOrganizationSubscriptionDefaultPricingSetup($organizationId: String!, $organizationCouponId: String) {\n    userOrganizationSubscriptionDefaultPricingSetup(\n      organization_id: $organizationId\n      organization_coupon_id: $organizationCouponId\n    ) {\n      ...OrganizationSubscriptionDefaultPricingFragment\n    }\n  }\n": typeof types.UserOrganizationSubscriptionDefaultPricingSetupDocument,
    "\n  mutation UserOrganizationSubscriptionVerifyCoupon($organizationId: String!, $code: String!) {\n    userOrganizationSubscriptionVerifyCoupon(organization_id: $organizationId, code: $code) {\n      ...OrganizationCouponFragment\n    }\n  }\n": typeof types.UserOrganizationSubscriptionVerifyCouponDocument,
    "\n  mutation UserOrganizationSubscriptionCalculatePricing($data: UserOrganizationSubscriptionCalculatePricingSchema!, $organizationId: String!) {\n    userOrganizationSubscriptionCalculatePricing(data: $data, organization_id: $organizationId) {\n      ...OrganizationSubscriptionCalculatedPricingFragment\n    }\n  }\n": typeof types.UserOrganizationSubscriptionCalculatePricingDocument,
    "\n  mutation UserOrganizationSubscriptionGetPrePurchaseTransactionData(\n    $organizationId: String!\n  ) {\n    userOrganizationSubscriptionGetPrePurchaseTransactionData(\n      organization_id: $organizationId\n    ) {\n      ... on NuveiTransactionProviderPreTransactionData {\n        transaction_provider\n        environment\n        merchant_id\n        merchant_site_id\n      }\n\n      ... on AccruPayTransactionProviderPreTransactionData {\n        transaction_provider\n        environment\n        merchant_id\n        merchant_site_id\n      }\n    }\n  }\n": typeof types.UserOrganizationSubscriptionGetPrePurchaseTransactionDataDocument,
    "\n  mutation UserOrganizationSubscriptionStartPurchase(\n    $organizationId: String!\n    $data: UserOrganizationSubscriptionStartPurchaseSchema!\n  ) {\n    userOrganizationSubscriptionStartPurchase(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationSubscriptionTransactionFragment\n    }\n  }\n": typeof types.UserOrganizationSubscriptionStartPurchaseDocument,
    "\n  mutation UserOrganizationSubscriptionCompletePurchase(\n    $organizationId: String!\n    $organizationSubscriptionId: String!\n    $organizationSubscriptionTransactionId: String!\n  ) {\n    userOrganizationSubscriptionCompletePurchase(\n      organization_id: $organizationId\n      organization_subscription_id: $organizationSubscriptionId\n      organization_subscription_transaction_id: $organizationSubscriptionTransactionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n": typeof types.UserOrganizationSubscriptionCompletePurchaseDocument,
    "\n  mutation UserOrganizationSubscriptionCancel(\n    $organizationId: String!\n    $organizationSubscriptionId: String!\n  ) {\n    userOrganizationSubscriptionCancel(\n      organization_id: $organizationId\n      organization_subscription_id: $organizationSubscriptionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n": typeof types.UserOrganizationSubscriptionCancelDocument,
    "\n  mutation UserOrganizationInvoiceTransactionGetPDF(\n    $organizationId: String!\n    $organizationInvoiceTransactionId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userOrganizationInvoiceTransactionGetPDF(\n      organization_id: $organizationId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n      acct_provider: $acctProvider\n    )\n  }\n": typeof types.UserOrganizationInvoiceTransactionGetPDFDocument,
    "\n  fragment User on User {\n    id\n    email\n    organizations {\n      id\n      role\n      is_current_organization_user_seat_available\n      organization_id\n      organization {\n        name\n        email\n        subscription_level\n        subscription_data {\n          ...OrganizationSubscriptionDataFragment\n        }\n      }\n    }\n    first_name\n    last_name\n    language\n    phone_number\n    timezone\n    is_admin\n    updated_at\n    created_at\n    profile_picture_file {\n      public_url\n    }\n  }\n": typeof types.UserFragmentDoc,
    "\n  query User {\n    user {\n      ...User\n    }\n  }\n": typeof types.UserDocument,
    "\n  mutation UserUpdateData($data: UserUpdateDataSchema!) {\n    userUpdateData(\n      data: $data\n    ) {\n      ...User\n    }\n  }\n": typeof types.UserUpdateDataDocument,
    "\n  mutation UserEmailVerifyOrChangeStart($data: UserEmailVerifyOrChangeStartSchema!) {\n    userEmailVerifyOrChangeStart(data: $data)\n  }\n": typeof types.UserEmailVerifyOrChangeStartDocument,
    "\n  mutation UserEmailVerifyOrChangeFinish($data: UserEmailVerifyOrChangeFinishSchema!) {\n    userEmailVerifyOrChangeFinish(data: $data) {\n      email\n    }\n  }\n": typeof types.UserEmailVerifyOrChangeFinishDocument,
    "\n  mutation UserPhoneNumberVerifyOrChangeStart($data: UserPhoneNumberVerifyOrChangeStartSchema!) {\n    userPhoneNumberVerifyOrChangeStart(data: $data)\n  }\n": typeof types.UserPhoneNumberVerifyOrChangeStartDocument,
    "\n  mutation UserPhoneNumberVerifyOrChangeFinish($data: UserPhoneNumberVerifyOrChangeFinishSchema!) {\n    userPhoneNumberVerifyOrChangeFinish(data: $data) {\n      phone_number\n    }\n  }\n": typeof types.UserPhoneNumberVerifyOrChangeFinishDocument,
    "\n  mutation UserPasswordChangeStart($data: UserPasswordChangeStartSchema!) {\n    userPasswordChangeStart(data: $data)\n  }\n": typeof types.UserPasswordChangeStartDocument,
    "\n  mutation UserPasswordChangeFinish($data: UserPasswordChangeFinishSchema!) {\n    userPasswordChangeFinish(data: $data)\n  }\n": typeof types.UserPasswordChangeFinishDocument,
    "\n  mutation UserProfilePictureRemove {\n    userProfilePictureRemove {\n        profile_picture_file_id\n    }\n  }\n": typeof types.UserProfilePictureRemoveDocument,
    "\n  mutation UserHandleLoginAttempt($email: String!) {\n    userHandleLoginAttempt(email: $email)\n  }\n": typeof types.UserHandleLoginAttemptDocument,
    "\n  fragment OrganizationVendorFragment on OrganizationVendor {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    balance\n    overdue_amount\n  }\n": typeof types.OrganizationVendorFragmentFragmentDoc,
    "\n  fragment OrganizationVendorBillSummaryFragment on OrganizationVendor {\n    bill_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              bill_date\n              due_date\n              vendor_email\n              created_at\n              updated_at\n              status\n              latest_acct_provider_status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n\n      total_open_bill_count\n      total_overdue_bill_count\n\n      total_amount\n      paid_amount\n      overdue_amount\n      balance\n    }\n  }\n": typeof types.OrganizationVendorBillSummaryFragmentFragmentDoc,
    "\n  fragment OrganizationVendorAdditionalDataFragment on OrganizationVendor {\n    ...OrganizationVendorBillSummaryFragment\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      created_at\n      updated_at\n    }\n  }\n": typeof types.OrganizationVendorAdditionalDataFragmentFragmentDoc,
    "\n  query UserOrganizationVendors(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n    userOrganizationVendors(\n      organization_id: $organizationId\n\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationVendorFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n": typeof types.UserOrganizationVendorsDocument,
    "\n  query UserOrganizationVendor($organizationVendorId: String!, $organizationId: String!) {\n    userOrganizationVendor(organization_vendor_id: $organizationVendorId, organization_id: $organizationId) {\n      ...OrganizationVendorFragment\n      ...OrganizationVendorAdditionalDataFragment\n    }\n  }\n": typeof types.UserOrganizationVendorDocument,
    "\n  mutation UserOrganizationVendorUpdate ($organizationId: String!, $organizationVendorId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n      ...OrganizationVendorAdditionalDataFragment\n    }\n  }\n": typeof types.UserOrganizationVendorUpdateDocument,
    "\n  mutation UserOrganizationVendorCreate ($organizationId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": typeof types.UserOrganizationVendorCreateDocument,
};
const documents: Documents = {
    "\n  fragment OrganizationAcctProviderConnFragment on OrganizationAcctProviderConn {\n    id\n    acct_provider\n    code\n    payload\n    conn_expires_at\n    automatic_pull_enabled\n    disconnected_at\n    created_at\n    updated_at\n    organization_id\n    status\n\n    synchronizations(skip: 0, take: 1, finished: true) {\n      edges {\n        node {\n          ...OrganizationAcctProviderConnSynchronizationFragment\n        }\n      }\n    }\n  }\n": types.OrganizationAcctProviderConnFragmentFragmentDoc,
    "\n  fragment OrganizationAcctProviderConnSynchronizationFragment on OrganizationAcctProviderConnSynchronization {\n    id\n    mode\n    force\n    provider\n    errors\n    warnings\n    data {\n        customer { items }\n        invoice { items }\n        invoice_transaction { items }\n        vendor { items }\n        bill { items }\n        bill_transaction { items }\n    }\n    started_at\n    finished_at\n    failed_at\n    succeeded_at\n\n    read_success\n    read_failure\n    skipped\n    create_success\n    create_failure\n    update_success\n    update_failure\n    delete_failure\n    delete_success\n    process_failure\n    process_success\n\n    created_at\n    updated_at\n\n    scope\n    scope_id\n    scope_description\n\n    organization_id\n    organization_acct_provider_conn_id\n  }\n": types.OrganizationAcctProviderConnSynchronizationFragmentFragmentDoc,
    "\n  mutation UserOrganizationAcctProviderConnDisconnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnDisconnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderConnDisconnectDocument,
    "\n  mutation UserOrganizationAcctProviderConnUpdate(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $data: UserOrganizationAcctProviderConnUpdateSchema!\n  ) {\n    userOrganizationAcctProviderConnUpdate(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      data: $data\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderConnUpdateDocument,
    "\n  mutation UserOrganizationAcctProviderConnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $url: String!\n    $automaticPull: Boolean!\n  ) {\n    userOrganizationAcctProviderConnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      url: $url\n      automatic_pull_enabled: $automaticPull\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderConnectDocument,
    "\n  mutation UserOrganizationAcctProviderGetOAuthUrl(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderGetOAuthUrl(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n": types.UserOrganizationAcctProviderGetOAuthUrlDocument,
    "\n  mutation UserOrganizationAcctProviderSynchronize(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderSynchronize(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n": types.UserOrganizationAcctProviderSynchronizeDocument,
    "\n  query UserOrganizationAcctProviders(\n    $organizationId: String!,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviders(\n        organization_id: $organizationId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n": types.UserOrganizationAcctProvidersDocument,
    "\n  query UserOrganizationAcctProvider(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String!\n  ) {\n    userOrganizationAcctProvider(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_id: $organizationAcctProviderConnId\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderDocument,
    "\n  query UserOrganizationAcctProviderSynchronizations(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String,\n\n    $scope: ORGANIZATION_ACCT_PROVIDER_CONN_SYNCHRONIZATION_SCOPE,\n    $finished: Boolean,\n    $failed: Boolean,\n    $succeeded: Boolean,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviderSynchronizations(\n        organization_id: $organizationId\n        organization_acct_provider_conn_id: $organizationAcctProviderConnId\n\n        scope: $scope\n        finished: $finished\n        failed: $failed\n        succeeded: $succeeded\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnSynchronizationFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n": types.UserOrganizationAcctProviderSynchronizationsDocument,
    "\n  query UserOrganizationAcctProviderSynchronization(\n    $organizationId: String!,\n    $organizationAcctProviderConnSynchronizationId: String!\n  ) {\n    userOrganizationAcctProviderSynchronization(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_synchronization_id: $organizationAcctProviderConnSynchronizationId\n    ) {\n      ...OrganizationAcctProviderConnSynchronizationFragment\n    }\n  }\n": types.UserOrganizationAcctProviderSynchronizationDocument,
    "\n  mutation UserOrganizationAcctProviderConnCheckConnection(\n    $organizationId: String!\n\n    $acctProvider: ACCT_PROVIDER!\n    $acctProviderConnCode: String!\n  ) {\n    userOrganizationAcctProviderConnCheckConnection(\n      organization_id: $organizationId\n      acct_provider: $acctProvider\n      acct_provider_conn_code: $acctProviderConnCode\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderConnCheckConnectionDocument,
    "\n  mutation UnauthorizedUserOrganizationAcctProviderConnCheckConnection(\n    $acctProvider: ACCT_PROVIDER!\n    $acctProviderConnCode: String!\n  ) {\n    unauthorizedUserOrganizationAcctProviderConnCheckConnection(\n      acct_provider: $acctProvider\n      acct_provider_conn_code: $acctProviderConnCode\n    )\n  }\n": types.UnauthorizedUserOrganizationAcctProviderConnCheckConnectionDocument,
    "\n  query AdminOrganizations(\n    $id: String\n    $email: String\n    $name: String\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    adminOrganizations(\n      id: $id\n      email: $email\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      edges {\n        cursor\n        node {\n          ...OrganizationFragment\n        }\n      }\n      totalCount\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.AdminOrganizationsDocument,
    "\n  mutation UserSessionsClose {\n    userSessionsClose {\n      id\n    }\n  }\n": types.UserSessionsCloseDocument,
    "\n  query UnauthorizedUserOrganizationUserInvite(\n    $code: String!\n    $email: String!\n    $organizationId: String!\n    $organizationInviteId: String!\n  ) {\n    unauthorizedUserOrganizationUserInvite(\n      code: $code\n      email: $email\n      organization_id: $organizationId\n      organization_invite_id: $organizationInviteId\n    ) {\n      invited_by\n      organization_name\n      organization_id\n      target_account_exists\n    }\n  }\n": types.UnauthorizedUserOrganizationUserInviteDocument,
    "\n  query UserOrganizationUserInvites(\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationUserInvites(\n      after: $after,\n      first: $first,\n\n      before: $before,\n      last: $last,\n\n      skip: $skip,\n      take: $take,\n\n      sorting: $sorting\n    ) {\n      edges {\n        node {\n          id\n          email\n          role\n          code\n          expires_at\n          accepted_at\n          canceled_at\n          rejected_at\n          created_at\n          updated_at\n          organization_id\n          organization {\n              id\n              name\n              logo_picture_file {\n                  public_url\n              }\n          }\n          created_by_user_id\n          created_by_user {\n              id\n              first_name\n              last_name\n              email\n              profile_picture_file {\n                  public_url\n              }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      totalCount\n    }\n  }\n": types.UserOrganizationUserInvitesDocument,
    "\n  mutation UserSignUpWithEmailStart($data: UserSignUpWithEmailStartSchema!) {\n    userSignUpWithEmailStart(data: $data)\n  }\n": types.UserSignUpWithEmailStartDocument,
    "\n  mutation UserSignUpWithEmailVerify($data: UserSignUpWithEmailVerifySchema!) {\n    userSignUpWithEmailVerify(data: $data)\n  }\n": types.UserSignUpWithEmailVerifyDocument,
    "\n  mutation UserOrganizationUserInviteAccept(\n    $code: String!\n    $organizationInviteId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationUserInviteAccept(\n      code: $code\n      organization_invite_id: $organizationInviteId\n      organization_id: $organizationId\n    ) {\n      role\n    }\n  }\n": types.UserOrganizationUserInviteAcceptDocument,
    "\n  mutation UserSignUpWithEmailFinishSchema(\n    $data: UserSignUpWithEmailFinishSchema!\n  ) {\n    userSignUpWithEmailFinish(data: $data)\n  }\n": types.UserSignUpWithEmailFinishSchemaDocument,
    "\n  mutation UserPasswordResetStart($data: UserPasswordResetStartSchema!) {\n    userPasswordResetStart(data: $data)\n  }\n": types.UserPasswordResetStartDocument,
    "\n  mutation UserPasswordResetFinish($userPasswordResetFinishData2: UserPasswordResetFinishSchema!) {\n    userPasswordResetFinish(data: $userPasswordResetFinishData2)\n  }\n": types.UserPasswordResetFinishDocument,
    "\n  mutation UserAuthProviderGetOAuthUrl($authProvider: AUTH_PROVIDER!) {\n    userAuthProviderGetOAuthUrl(auth_provider: $authProvider)\n  }\n": types.UserAuthProviderGetOAuthUrlDocument,
    "\n  mutation UserAuthProviderGetOAuthToken($authProvider: AUTH_PROVIDER!, $authorizationToken: String!) {\n    userAuthProviderGetOAuthToken(auth_provider: $authProvider, authorization_token: $authorizationToken)\n  }\n": types.UserAuthProviderGetOAuthTokenDocument,
    "\n  fragment OrganizationBillFragment on OrganizationBill {\n    id\n    unique_code\n    number\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    bill_date\n    due_date\n    vendor_email\n    vendor_address_line_1\n    vendor_address_number\n    vendor_address_line_2\n    vendor_address_city\n    vendor_address_state\n    vendor_address_zip_code\n    vendor_address_country_code_iso_3\n    vendor_address_lat\n    vendor_address_lng\n    created_at\n    updated_at\n\n    conn_linked_invoice_id\n    conn_locked_data_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_vendor_id\n    organization_vendor {\n      name\n      email\n      balance\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n    latest_acct_provider_status\n    latest_acct_provider_is_overdue\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    transaction_links {\n      id\n      amount\n      organization_bill_id\n\n      created_at\n      updated_at\n\n      organization_bill_transaction_id\n      organization_bill_transaction {\n        id\n      }\n    }\n  }\n": types.OrganizationBillFragmentFragmentDoc,
    "\n  fragment OrganizationBillSummaryFragment on OrganizationBillSummary {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    customer_organization_vendor_id\n    customer_organization_vendor {\n      id\n      name\n    }\n\n    customer_organization_id\n    customer_organization {\n      id\n      name\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationBillFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    status\n\n    total_open_bill_count\n    total_overdue_bill_count\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n  }\n": types.OrganizationBillSummaryFragmentFragmentDoc,
    "\n  query UserOrganizationBillSummary(\n    $organizationId: String!\n    $organizationVendorId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: BILL_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: BILL_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationBillSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationBillSummaryFragment\n    }\n  }\n": types.UserOrganizationBillSummaryDocument,
    "\n  query UserOrganizationBill(\n    $organizationId: String!\n    $organizationBillId: String!\n  ) {\n    userOrganizationBill(\n      organization_id: $organizationId\n      organization_bill_id: $organizationBillId\n    ) {\n      ...OrganizationBillFragment\n    }\n  }\n": types.UserOrganizationBillDocument,
    "\n  mutation UserOrganizationBillCreate(\n    $organizationId: String!\n    $data: UserOrganizationBillSchema!\n  ) {\n    userOrganizationBillCreate(organization_id: $organizationId, data: $data) {\n      ...OrganizationBillFragment\n    }\n  }\n": types.UserOrganizationBillCreateDocument,
    "\n  fragment OrganizationConnectionFragment on OrganizationConnection {\n    id\n\n    is_valid\n    is_connected\n\n    vendor_conn_status\n    vendor_conn_status_at\n    vendor_organization_id\n    vendor_organization_name\n    vendor_organization_email\n    vendor_target_customer_id\n    vendor_target_customer_name\n    vendor_target_customer_email\n\n    customer_conn_status\n    customer_conn_status_at\n    customer_organization_id\n    customer_organization_name\n    customer_organization_email\n    customer_target_vendor_id\n    customer_target_vendor_name\n    customer_target_vendor_email\n\n    created_at\n    updated_at\n  }\n": types.OrganizationConnectionFragmentFragmentDoc,
    "\n  query UserOrganizationConnections(\n    $organizationId: String!\n    $status: ORGANIZATION_CONNECTION_STATUS\n  ) {\n    userOrganizationConnections(\n      organization_id: $organizationId\n      status: $status\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationConnectionFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.UserOrganizationConnectionsDocument,
    "\n  query UserOrganizationConnection(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnection(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionDocument,
    "\n  mutation UserOrganizationConnectionInviteCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationConnectionInviteCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionInviteCustomerDocument,
    "\n  mutation UserOrganizationConnectionInviteVendor(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationConnectionInviteVendor(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionInviteVendorDocument,
    "\n  mutation UserOrganizationConnectionAccept(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionAccept(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionAcceptDocument,
    "\n  mutation UserOrganizationConnectionReject(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionReject(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionRejectDocument,
    "\n  mutation UserOrganizationCustomerConnLock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnLock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": types.UserOrganizationCustomerConnLockDocument,
    "\n  mutation UserOrganizationCustomerConnUnlock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnUnlock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": types.UserOrganizationCustomerConnUnlockDocument,
    "\n  mutation UserOrganizationVendorConnLock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnLock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": types.UserOrganizationVendorConnLockDocument,
    "\n  mutation UserOrganizationVendorConnUnlock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnUnlock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": types.UserOrganizationVendorConnUnlockDocument,
    "\n  query userOrganizationVendorContacts(\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContacts(\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          email\n          id\n          is_default\n          name\n          phone_number\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.userOrganizationVendorContactsDocument,
    "\n  query UserOrganizationCustomerContacts(\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContacts(\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          id\n          name\n          email\n          phone_number\n          is_default\n          send_invoice_reminders\n          created_at\n          updated_at\n          organization_customer_id\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.UserOrganizationCustomerContactsDocument,
    "\n  mutation userOrganizationVendorContactCreate(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $data: UserOrganizationVendorContactCreateSchema!\n  ) {\n    userOrganizationVendorContactCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      organization_vendor_id\n    }\n  }\n": types.userOrganizationVendorContactCreateDocument,
    "\n  mutation UserOrganizationCustomerContactCreate(\n    $data: UserOrganizationCustomerContactCreateSchema!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactCreate(\n      data: $data\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n": types.UserOrganizationCustomerContactCreateDocument,
    "\n  mutation UserOrganizationVendorContactUpdate(\n    $data: UserOrganizationVendorContactUpdateSchema!\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactUpdate(\n      data: $data\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      is_default\n      name\n      phone_number\n    }\n  }\n": types.UserOrganizationVendorContactUpdateDocument,
    "\n  mutation UserOrganizationCustomerContactUpdate(\n    $data: UserOrganizationCustomerContactUpdateSchema!\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactUpdate(\n      data: $data\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n": types.UserOrganizationCustomerContactUpdateDocument,
    "\n  mutation UserOrganizationVendorContactDelete(\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactDelete(\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      name\n      organization_vendor_id\n      phone_number\n      is_default\n    }\n  }\n": types.UserOrganizationVendorContactDeleteDocument,
    "\n  mutation UserOrganizationCustomerContactDelete(\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactDelete(\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n": types.UserOrganizationCustomerContactDeleteDocument,
    "\n  fragment OrganizationCustomerFragment on OrganizationCustomer {\n    id\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    balance\n    overdue_amount\n  }\n": types.OrganizationCustomerFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerInvoiceSummaryFragment on OrganizationCustomer {\n    invoice_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n\n              provider\n              provider_code\n              provider_url\n              provider_errors\n              provider_warnings\n              last_successful_sync_id\n              last_successful_sync_at\n              last_sync_succeeded\n              last_sync_id\n              last_sync_at\n\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              invoice_date\n              due_date\n              customer_email\n              created_at\n              updated_at\n              status\n              latest_acct_provider_status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n\n      total_open_invoice_count\n      total_overdue_invoice_count\n\n      total_amount\n      paid_amount\n      overdue_amount\n      balance\n    }\n  }\n": types.OrganizationCustomerInvoiceSummaryFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerAdditionalDataFragment on OrganizationCustomer {\n    ...OrganizationCustomerInvoiceSummaryFragment,\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n    }\n  }\n": types.OrganizationCustomerAdditionalDataFragmentFragmentDoc,
    "\n  query UserOrganizationCustomers(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationCustomers(\n        organization_id: $organizationId\n\n        name: $name\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationCustomerFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n": types.UserOrganizationCustomersDocument,
    "\n  query UserOrganizationCustomerStatement(\n    $organizationId: String!\n    $organizationCustomerId: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationCustomerStatement(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n    }\n  }\n": types.UserOrganizationCustomerStatementDocument,
    "\n  query UserOrganizationCustomerStatementLine(\n    $organizationId: String!,\n    $organizationCustomerId: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n  ) {\n    userOrganizationCustomerStatementLine(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      organization_invoice_id: $organizationInvoiceId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n": types.UserOrganizationCustomerStatementLineDocument,
    "\n  query UserOrganizationCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!,\n    ) {\n    userOrganizationCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId,\n      ) {\n      ...OrganizationCustomerFragment\n      ...OrganizationCustomerAdditionalDataFragment\n    }\n  }\n": types.UserOrganizationCustomerDocument,
    "\n  mutation UserOrganizationCustomerUpdate($organizationId: String!, $organizationCustomerId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerUpdate(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n      ...OrganizationCustomerAdditionalDataFragment\n    }\n  }\n": types.UserOrganizationCustomerUpdateDocument,
    "\n  mutation UserOrganizationCustomerCreate($organizationId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": types.UserOrganizationCustomerCreateDocument,
    "\n  mutation UserOrganizationCustomerSendStatementEmail($targets: [UserOrganizationCustomerSendStatementEmailSchema!]!, $organizationId: String!) {\n    userOrganizationCustomerSendStatementEmail(targets: $targets, organization_id: $organizationId)\n  }\n": types.UserOrganizationCustomerSendStatementEmailDocument,
    "\n  mutation UserOrganizationCustomerGetStatementLink($organizationId: String!, $organizationCustomerId: String!, $expiresAt: DateTime) {\n    userOrganizationCustomerGetStatementLink(organization_id: $organizationId, organization_customer_id: $organizationCustomerId, expires_at: $expiresAt)\n  }\n": types.UserOrganizationCustomerGetStatementLinkDocument,
    "\n  mutation UserOrganizationCustomerSynchronize($organizationId: String!, $organizationCustomerId: String!) {\n    userOrganizationCustomerSynchronize(organization_id: $organizationId, organization_customer_id: $organizationCustomerId)\n  }\n": types.UserOrganizationCustomerSynchronizeDocument,
    "\n  fragment OrganizationInvoiceFragment on OrganizationInvoice {\n    id\n    unique_code\n    number\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    currency_code\n    description\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    invoice_date\n    due_date\n    created_at\n    updated_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_customer_id\n    organization_customer {\n      name\n      email\n      balance\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n    latest_acct_provider_status\n    latest_acct_provider_is_overdue\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    email_sent_at\n\n    payment_options {\n        method\n        url\n        payload\n    }\n\n    transaction_links {\n      id\n      amount\n      organization_invoice_id\n\n      created_at\n      updated_at\n\n      organization_invoice_transaction_id\n      organization_invoice_transaction {\n        id\n      }\n    }\n  }\n": types.OrganizationInvoiceFragmentFragmentDoc,
    "\n  fragment OrganizationInvoiceSummaryFragment on OrganizationInvoiceSummary {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      name\n      email\n    }\n\n    customer_organization_id\n    customer_organization {\n      name\n      email\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationInvoiceFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    status\n\n    total_open_invoice_count\n    total_overdue_invoice_count\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    latest_acct_provider_one_to_thirty_days_due_amount\n    latest_acct_provider_thirty_one_to_sixty_days_due_amount\n    latest_acct_provider_sixty_plus_days_due_amount\n  }\n": types.OrganizationInvoiceSummaryFragmentFragmentDoc,
    "\n  query UserOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationCustomerId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n": types.UserOrganizationInvoiceSummaryDocument,
    "\n  query UserOrganizationInvoice(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoice(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    ) {\n      ...OrganizationInvoiceFragment\n    }\n  }\n": types.UserOrganizationInvoiceDocument,
    "\n  mutation UserOrganizationInvoiceCreate(\n    $data: UserOrganizationInvoiceSchema!\n    $organizationId: String!\n  ) {\n    userOrganizationInvoiceCreate(\n      data: $data\n      organization_id: $organizationId\n    ) {\n      amount\n      balance\n      created_at\n      currency_code\n      id\n      is_overdue\n      invoice_date\n      status\n      email_sent_at\n      paid_at\n      paid_amount\n      total_amount\n    }\n  }\n": types.UserOrganizationInvoiceCreateDocument,
    "\n  mutation UserOrganizationCustomerSendInvoiceEmail(\n    $organizationId: String!\n    $targets: [UserOrganizationCustomerSendInvoiceEmailSchema!]!\n  ) {\n    userOrganizationCustomerSendInvoiceEmail(\n      organization_id: $organizationId\n      targets: $targets\n    )\n  }\n": types.UserOrganizationCustomerSendInvoiceEmailDocument,
    "\n  mutation UserOrganizationInvoiceGetPDF(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userOrganizationInvoiceGetPDF(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UserOrganizationInvoiceGetPDFDocument,
    "\n  query UnconnectedCustomerOrganizationInvoiceSummary(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationInvoiceSummary(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n": types.UnconnectedCustomerOrganizationInvoiceSummaryDocument,
    "\n  mutation UnconnectedCustomerOrganizationInvoiceGetPDF(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    unconnectedCustomerOrganizationInvoiceGetPDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UnconnectedCustomerOrganizationInvoiceGetPDFDocument,
    "\n  fragment OrganizationSubscriptionDataFragment on OrganizationSubscriptionData {\n    subscription_level\n    organization_user_seats\n    requires_user_action\n    requires_provider_refresh\n    active_subscriptions {\n        id\n        provider\n        provider_status\n    }\n    active_plans {\n        item_type\n        status\n    }\n    active_modules {\n        item_type\n        status\n    }\n    active_addons {\n        item_type\n        quantity\n        status\n    }\n  }\n": types.OrganizationSubscriptionDataFragmentFragmentDoc,
    "\n  fragment OrganizationFragment on Organization {\n    id\n    name\n    email\n    unique_name\n    unique_code\n    phone_number\n    address_line_1\n    address_number\n    address_line_2\n    address_city\n    address_state\n    address_zip_code\n    address_country_code_iso_3\n    address_lat\n    address_lng\n    primary_contact_name\n    business_name\n    business_industry\n    business_number_of_employees\n    business_address_line_1\n    business_address_number\n    business_address_line_2\n    business_address_city\n    business_address_state\n    business_address_zip_code\n    business_address_country_code_iso_3\n    business_address_lat\n    business_address_lng\n    business_tax_code_type\n    business_tax_code\n    timezone\n    language\n\n    created_at\n    updated_at\n\n    logo_picture_file_id\n    logo_picture_file {\n      public_url\n    }\n\n    current_email_verification_id\n    current_phone_number_verification_id\n\n    subscription_level\n    subscription_data {\n      ...OrganizationSubscriptionDataFragment\n    }\n\n    setting_receive_customer_notification_mode\n  }\n": types.OrganizationFragmentFragmentDoc,
    "\n  fragment OrganizationUserFragment on OrganizationUser {\n    id\n    role\n    is_current_organization_user_seat_available\n    receive_invoice_reminders\n    receive_customer_notification_mode\n    created_at\n    updated_at\n    organization_id\n    user_id\n    user {\n      id\n      email\n      phone_number\n      first_name\n      last_name\n      language\n      profile_picture_file_id\n      profile_picture_file {\n        public_url\n      }\n      current_email_verification_id\n      current_phone_number_verification_id\n    }\n  }\n": types.OrganizationUserFragmentFragmentDoc,
    "\n  fragment OrganizationInviteFragment on OrganizationInvite {\n    id\n    email\n    role\n    code\n    expires_at\n    accepted_at\n    canceled_at\n    rejected_at\n    created_at\n    updated_at\n    organization_id\n    organization {\n        id\n        name\n        logo_picture_file {\n            public_url\n        }\n    }\n    created_by_user_id\n    created_by_user {\n        id\n        first_name\n        last_name\n        email\n        profile_picture_file {\n            public_url\n        }\n    }\n  }\n": types.OrganizationInviteFragmentFragmentDoc,
    "\n  query UserOrganization ($organizationId: String!) {\n    userOrganization(organization_id: $organizationId) {\n      ...OrganizationFragment\n    }\n  }\n": types.UserOrganizationDocument,
    "\n  query UserOrganizationBaseSettings(\n    $organizationId: String!\n  ) {\n    userOrganization(\n      organization_id: $organizationId\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n": types.UserOrganizationBaseSettingsDocument,
    "\n  mutation UserOrganizationCreate($data: UserOrganizationCreateSchema!){\n    userOrganizationCreate(data: $data) {\n      id\n      email\n      name\n      phone_number\n      primary_contact_name\n    }\n  }\n": types.UserOrganizationCreateDocument,
    "\n  query UserOrganizationCollaborators(\n    $organizationId: String!\n  ) {\n    userOrganizationCollaborators(\n      organization_id: $organizationId\n    ) {\n      ...OrganizationUserFragment\n    }\n  }\n": types.UserOrganizationCollaboratorsDocument,
    "\n  mutation UserOrganizationInviteCollaboratorCreate($data: UserOrganizationInviteCollaboratorCreateSchema!, $organizationId: String!) {\n    userOrganizationInviteCollaboratorCreate(data: $data, organization_id: $organizationId) {\n      expires_at\n    }\n  }\n": types.UserOrganizationInviteCollaboratorCreateDocument,
    "\n  mutation UserOrganizationInviteCollaboratorCancel($organizationId: String!, $organizationInviteId: String!) {\n    userOrganizationInviteCollaboratorCancel(organization_id: $organizationId, organization_invite_id: $organizationInviteId) {\n      ...OrganizationInviteFragment\n    }\n  }\n": types.UserOrganizationInviteCollaboratorCancelDocument,
    "\n  mutation UserOrganizationInviteCollaboratorResend($organizationId: String!, $organizationInviteId: String!) {\n    userOrganizationInviteCollaboratorResend(organization_id: $organizationId, organization_invite_id: $organizationInviteId) {\n      ...OrganizationInviteFragment\n    }\n  }\n": types.UserOrganizationInviteCollaboratorResendDocument,
    "\n  query UserOrganizationInviteCollaborators(\n    $organizationId: String!,\n\n    $accepted: Boolean,\n    $canceled: Boolean,\n    $expired: Boolean,\n    $rejected: Boolean,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInviteCollaborators(\n      organization_id: $organizationId,\n\n      accepted: $accepted,\n      canceled: $canceled,\n      expired: $expired,\n      rejected: $rejected,\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationInviteFragment\n        }\n      }\n      pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n      }\n    }\n  }\n": types.UserOrganizationInviteCollaboratorsDocument,
    "\n  mutation UserOrganizationCollaboratorUpdate($data: UserOrganizationCollaboratorUpdateSchema!, $organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorUpdate(data: $data, organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      role\n    }\n  }\n": types.UserOrganizationCollaboratorUpdateDocument,
    "\n  mutation UserOrganizationCollaboratorDelete($organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorDelete(organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      id\n    }\n  }\n": types.UserOrganizationCollaboratorDeleteDocument,
    "\n  mutation UserOrganizationUpdate(\n    $organizationId: String!\n    $data: UserOrganizationUpdateSchema!\n  ) {\n    userOrganizationUpdate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationFragment\n    }\n  }\n": types.UserOrganizationUpdateDocument,
    "\n  mutation UserOrganizationLogoPictureRemove($organizationId: String!) {\n    userOrganizationLogoPictureRemove(organization_id: $organizationId) {\n      logo_picture_file {\n        public_url\n      }\n    }\n  }\n": types.UserOrganizationLogoPictureRemoveDocument,
    "\n  mutation UserOrganizationSendGenericInviteMail($organizationId: String!, $email: String!) {\n    userOrganizationSendGenericInviteMail(organization_id: $organizationId, email: $email)\n  }\n": types.UserOrganizationSendGenericInviteMailDocument,
    "\n  mutation UserOrganizationEmailVerifyOrChangeStart($organizationId: String!, $data: UserOrganizationEmailVerifyOrChangeStartSchema!) {\n    userOrganizationEmailVerifyOrChangeStart(organization_id: $organizationId, data: $data)\n  }\n": types.UserOrganizationEmailVerifyOrChangeStartDocument,
    "\n  mutation UserOrganizationEmailVerifyOrChangeFinish($organizationId: String!, $data: UserOrganizationEmailVerifyOrChangeFinishSchema!) {\n    userOrganizationEmailVerifyOrChangeFinish(organization_id: $organizationId, data: $data) {\n      ...OrganizationFragment\n    }\n  }\n": types.UserOrganizationEmailVerifyOrChangeFinishDocument,
    "\n  fragment OrganizationProjectChangeFragment on OrganizationProjectChange {\n    id\n\n    organization_project_change_request_id\n    previous_budget_amount\n    previous_ends_at\n    previous_name\n    previous_starts_at\n\n    created_at\n    updated_at\n  }\n": types.OrganizationProjectChangeFragmentFragmentDoc,
    "\n  fragment OrganizationProjectChangeRequestFragment on OrganizationProjectChangeRequest {\n    id\n\n    accepted_at\n    budget_amount\n    canceled_at\n    contract_url\n    created_by_user_id\n    created_by_user_name\n    created_side\n    ends_at\n    expires_at\n    finished_by_user_id\n    finished_by_user_name\n    finished_side\n    name\n    published_at\n    rejected_at\n    sequence_number\n    starts_at\n    status\n    organization_project_id\n\n    organization_project_change {\n      ...OrganizationProjectChangeFragment\n    }\n\n    created_at\n    updated_at\n  }\n": types.OrganizationProjectChangeRequestFragmentFragmentDoc,
    "\n  fragment OrganizationProjectFragment on OrganizationProject {\n    id\n\n    budget_amount\n    budget_currency_code\n    canceled_at\n    completed_at\n    contract_url\n    description\n    ends_at\n    name\n    starts_at\n    status\n\n    organization_id\n    organization {\n      name\n    }\n\n    organization_customer_id\n    organization_customer {\n      name\n    }\n\n    created_at\n    updated_at\n  }\n": types.OrganizationProjectFragmentFragmentDoc,
    "\n  query UserOrganizationProjects(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n\n    $name: String,\n\n    $started: Boolean,\n    $ended: Boolean,\n    $canceled: Boolean,\n    $completed: Boolean,\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationProjects(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.UserOrganizationProjectsDocument,
    "\n  query UserOrganizationProject(\n    $organizationId: String!,\n    $organizationProjectId: String!,\n  ) {\n    userOrganizationProject(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": types.UserOrganizationProjectDocument,
    "\n  mutation UserOrganizationProjectCreate(\n    $organizationId: String!\n    $data: UserOrganizationProjectCreateSchema!,\n  ) {\n    userOrganizationProjectCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": types.UserOrganizationProjectCreateDocument,
    "\n  mutation UserOrganizationProjectUpdate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $data: UserOrganizationProjectUpdateSchema!,\n  ) {\n    userOrganizationProjectUpdate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": types.UserOrganizationProjectUpdateDocument,
    "\n  mutation UserOrganizationProjectDelete(\n    $organizationId: String!,\n    $organizationProjectId: String!\n  ) {\n    userOrganizationProjectDelete(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": types.UserOrganizationProjectDeleteDocument,
    "\n  mutation UserOrganizationProjectChangeRequestCreate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userOrganizationProjectChangeRequestCreate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserOrganizationProjectChangeRequestCreateDocument,
    "\n  mutation UserOrganizationProjectChangeRequestUpdate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userOrganizationProjectChangeRequestUpdate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserOrganizationProjectChangeRequestUpdateDocument,
    "\n  mutation UserOrganizationProjectChangeRequestCancel(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestCancel(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserOrganizationProjectChangeRequestCancelDocument,
    "\n  mutation UserOrganizationProjectChangeRequestAccept(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestAccept(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserOrganizationProjectChangeRequestAcceptDocument,
    "\n  mutation UserOrganizationProjectChangeRequestReject(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestReject(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserOrganizationProjectChangeRequestRejectDocument,
    "\n  query UserCustomerOrganizationProjects(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n\n    $name: String,\n\n    $started: Boolean,\n    $ended: Boolean,\n    $canceled: Boolean,\n    $completed: Boolean,\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationProjects(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.UserCustomerOrganizationProjectsDocument,
    "\n  query UserCustomerOrganizationProject(\n    $organizationId: String!,\n    $organizationVendorId: String!\n    $organizationProjectId: String!,\n  ) {\n    userCustomerOrganizationProject(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": types.UserCustomerOrganizationProjectDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestCreate(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserCustomerOrganizationProjectChangeRequestCreateDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestUpdate(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserCustomerOrganizationProjectChangeRequestUpdateDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestCancel(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestCancel(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserCustomerOrganizationProjectChangeRequestCancelDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestAccept(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestAccept(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserCustomerOrganizationProjectChangeRequestAcceptDocument,
    "\n  mutation UserCustomerOrganizationProjectChangeRequestReject(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestReject(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UserCustomerOrganizationProjectChangeRequestRejectDocument,
    "\n  query UnconnectedCustomerOrganizationProjects(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $name: String\n\n    $started: Boolean\n    $ended: Boolean\n    $canceled: Boolean\n    $completed: Boolean\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationProjects(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.UnconnectedCustomerOrganizationProjectsDocument,
    "\n  query UnconnectedCustomerOrganizationProject(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n  ) {\n    unconnectedCustomerOrganizationProject(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n": types.UnconnectedCustomerOrganizationProjectDocument,
    "\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestActionRequestToken(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestActionRequestToken(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n    )\n  }\n": types.UnconnectedCustomerOrganizationProjectChangeRequestActionRequestTokenDocument,
    "\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestAccept(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n    $verificationCode: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestAccept(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n      verification_code: $verificationCode\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UnconnectedCustomerOrganizationProjectChangeRequestAcceptDocument,
    "\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestReject(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n    $verificationCode: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestReject(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n      verification_code: $verificationCode\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n": types.UnconnectedCustomerOrganizationProjectChangeRequestRejectDocument,
    "\n  fragment OrganizationReminderSettingFragment on OrganizationReminderSetting {\n    id\n    due_date_mode\n    days_amount\n    repeat_mode\n    repeat_value\n    selected_hour\n    created_at\n    updated_at\n    organization_id\n    organization_customer_id\n    organization_project_id\n    organization_invoice_id\n  }\n": types.OrganizationReminderSettingFragmentFragmentDoc,
    "\n  query UserOrganizationReminderSettings(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n    $organizationProjectId: String,\n    $organizationInvoiceId: String,\n\n    $dueDateMode: REMINDER_DUE_DATE_MODE,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationReminderSettings(\n      organization_id: $organizationId\n\n      organization_customer_id: $organizationCustomerId\n      organization_project_id: $organizationProjectId\n      organization_invoice_id: $organizationInvoiceId\n\n      due_date_mode: $dueDateMode\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationReminderSettingFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n": types.UserOrganizationReminderSettingsDocument,
    "\n  query UserOrganizationReminderSetting($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSetting(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": types.UserOrganizationReminderSettingDocument,
    "\n  mutation UserOrganizationReminderSettingCreate($organizationId: String!, $data: UserOrganizationReminderSettingSchema!) {\n    userOrganizationReminderSettingCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": types.UserOrganizationReminderSettingCreateDocument,
    "\n  mutation UserOrganizationReminderSettingUpdate(\n    $organizationId: String!,\n    $organizationReminderSettingId: String!,\n    $data: UserOrganizationReminderSettingSchema!\n  ) {\n    userOrganizationReminderSettingUpdate(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": types.UserOrganizationReminderSettingUpdateDocument,
    "\n  mutation UserOrganizationReminderSettingDelete($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSettingDelete(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": types.UserOrganizationReminderSettingDeleteDocument,
    "\n  mutation UserOrganizationReminderSettingGlobalUpdate(\n    $organizationId: String!\n    $settingSendInvoiceDueReminders: Boolean!\n    $settingSendInvoiceOverdueReminders: Boolean!\n    $settingAllowInvoiceDueSnoozeReminders: Boolean!\n    $settingAllowInvoiceOverdueSnoozeReminders: Boolean!\n  ) {\n    userOrganizationReminderSettingGlobalUpdate(\n      organization_id: $organizationId\n      setting_send_invoice_due_reminders: $settingSendInvoiceDueReminders\n      setting_send_invoice_overdue_reminders: $settingSendInvoiceOverdueReminders\n      setting_allow_invoice_due_snooze_reminders: $settingAllowInvoiceDueSnoozeReminders\n      setting_allow_invoice_overdue_snooze_reminders: $settingAllowInvoiceOverdueSnoozeReminders\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n": types.UserOrganizationReminderSettingGlobalUpdateDocument,
    "\n  fragment OrganizationCustomerStatementInvoiceLineFragment on OrganizationCustomerStatementInvoiceLine {\n    id\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    organization_customer_id\n    organization_invoice_id\n    paid_amount\n    running_balance\n    invoice_status\n    type\n    updated_at\n\n    organization_invoice {\n      provider\n      provider_code\n\n      payment_options {\n        method\n        url\n        payload\n      }\n    }\n  }\n": types.OrganizationCustomerStatementInvoiceLineFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerStatementTransactionLineFragment on OrganizationCustomerStatementTransactionLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_transaction_id\n    paid_amount\n    running_balance\n    transaction_status\n    type\n    updated_at\n\n    organization_invoice_transaction {\n      provider\n      provider_code\n\n      links {\n        id\n        amount\n        organization_invoice_id\n      }\n    }\n  }\n": types.OrganizationCustomerStatementTransactionLineFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerStatementFragment on OrganizationCustomerStatement {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      name\n      email\n    }\n\n    customer_organization_id\n    customer_organization {\n      name\n      email\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ... on OrganizationCustomerStatementInvoiceLine {\n            ...OrganizationCustomerStatementInvoiceLineFragment\n          }\n          ... on OrganizationCustomerStatementTransactionLine {\n            ...OrganizationCustomerStatementTransactionLineFragment\n          }\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    latest_acct_provider_one_to_thirty_days_due_amount\n    latest_acct_provider_thirty_one_to_sixty_days_due_amount\n    latest_acct_provider_sixty_plus_days_due_amount\n\n    total_open_invoice_count\n    total_overdue_invoice_count\n  }\n": types.OrganizationCustomerStatementFragmentFragmentDoc,
    "\n  query UserCustomerOrganizationStatement(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationStatement(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n": types.UserCustomerOrganizationStatementDocument,
    "\n  mutation UserCustomerOrganizationStatementLineGetPDF(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userCustomerOrganizationStatementLineGetPDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UserCustomerOrganizationStatementLineGetPDFDocument,
    "\n  mutation UnconnectedCustomerOrganizationStatementRequestToken(\n    $uniqueCode: String!\n    $email: String!\n  ) {\n    unconnectedCustomerOrganizationStatementRequestToken(\n      unique_code: $uniqueCode\n      email: $email\n    )\n}\n": types.UnconnectedCustomerOrganizationStatementRequestTokenDocument,
    "\n  query UnconnectedCustomerOrganizationStatement(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationStatement(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n": types.UnconnectedCustomerOrganizationStatementDocument,
    "\n  mutation UnconnectedCustomerOrganizationStatementLineGetPDF(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    unconnectedCustomerOrganizationStatementLineGetPDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UnconnectedCustomerOrganizationStatementLineGetPDFDocument,
    "\n  query UserCustomerOrganizationStatementLine(\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String!,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $organizationVendorId: String!\n  ) {\n    userCustomerOrganizationStatementLine(\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n": types.UserCustomerOrganizationStatementLineDocument,
    "\n  query UnconnectedCustomerOrganizationStatementLine(\n    $email: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $token: String!,\n    $uniqueCode: String!\n  ) {\n    unconnectedCustomerOrganizationStatementLine(\n      email: $email,\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      token: $token,\n      unique_code: $uniqueCode\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n": types.UnconnectedCustomerOrganizationStatementLineDocument,
    "\n  query UserCustomerOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n": types.UserCustomerOrganizationInvoiceSummaryDocument,
    "\n  mutation UserCustomerOrganizationInvoiceGetPDF(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userCustomerOrganizationInvoiceGetPDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UserCustomerOrganizationInvoiceGetPDFDocument,
    "\n  mutation UserCustomerOrganizationSynchronize($organizationId: String!, $organizationVendorId: String!) {\n    userCustomerOrganizationSynchronize(organization_id: $organizationId, organization_vendor_id: $organizationVendorId)\n  }\n": types.UserCustomerOrganizationSynchronizeDocument,
    "\n  mutation UnconnectedCustomerSynchronize($uniqueCode: String!, $email: String!, $token: String!) {\n    unconnectedCustomerSynchronize(unique_code: $uniqueCode, email: $email,token: $token)\n  }\n": types.UnconnectedCustomerSynchronizeDocument,
    "\n  fragment OrganizationPaymentMethodFragment on OrganizationPaymentMethod {\n    id\n    payment_method\n    payment_provider\n    bound_mode\n    bound_id\n    is_enabled\n    is_default\n    billing_first_name\n    billing_last_name\n    billing_email\n    billing_phone_number\n    billing_address_line_1\n    billing_address_number\n    billing_address_line_2\n    billing_address_city\n    billing_address_state\n    billing_address_zip_code\n    billing_address_country_code_iso_3\n    created_at\n    updated_at\n    payment_method_info {\n      ... on OrganizationPaymentMethodCreditCardInfo {\n        type\n        card_number_masked\n        card_brand\n      }\n      ... on OrganizationPaymentMethodGenericInfo {\n        type\n      }\n    }\n    organization_id\n  }\n": types.OrganizationPaymentMethodFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionTransactionFragment on OrganizationSubscriptionTransaction {\n    id\n    transaction_provider\n    provider_transaction_code\n    transaction_code\n    amount\n    currency\n    started_at\n    succeeded_at\n    failed_at\n    reverted_at\n    transaction_date\n    due_date\n    procedure\n    subscription_item_ids\n    period_ends_at\n    period_sequence\n    period_starts_at\n    created_at\n    updated_at\n    status\n    organization_subscription_id\n    organization_payment_method_id\n  }\n": types.OrganizationSubscriptionTransactionFragmentFragmentDoc,
    "\n  fragment OrganizationCouponFragment on OrganizationCoupon {\n    id\n    campaign\n    category\n    subdivision\n    is_activation_unlimited\n    activated_at\n    expires_at\n    created_at\n    updated_at\n    status\n    organization_id\n    category_description\n    subdivision_description\n  }\n": types.OrganizationCouponFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionItemFragment on OrganizationSubscriptionItem {\n    id\n    quantity\n    unit_price\n    started_at\n    canceled_at\n    item_type\n    created_at\n    updated_at\n    status\n    category\n    classification\n    organization_subscription_id\n  }\n": types.OrganizationSubscriptionItemFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionFragment on OrganizationSubscription {\n    id\n    price_total_amount\n    price_currency\n    price_tier\n    current_period_ends_at\n    current_period_starts_at\n    canceled_at\n    renew_interval\n    next_payment_at\n    provider\n    provider_status\n    provider_plan_code\n    provider_subscription_code\n    provider_last_verified_at\n    has_outdated_price\n    created_at\n    updated_at\n    status\n    payment_status\n\n    organization_id\n    organization_coupon_id\n\n    organization_payment_method_id\n    organization_payment_method {\n      ...OrganizationPaymentMethodFragment\n    }\n\n    items {\n      ...OrganizationSubscriptionItemFragment\n    }\n\n    transactions {\n      ...OrganizationSubscriptionTransactionFragment\n    }\n  }\n": types.OrganizationSubscriptionFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionDefaultPricingFragment on OrganizationSubscriptionDefaultPricing {\n    organization_id\n    organization_coupon_id\n    organization_coupon {\n      ...OrganizationCouponFragment\n    }\n\n    price_tier\n    price_currency\n\n    options {\n      renew_interval\n      options {\n        base_item {\n          item_type\n          category\n          additional_organization_seats\n\n          original_unit_price\n          unit_price\n\n          is_purchase_available\n\n          current_item_pending_purchase_subscription {\n            ...OrganizationSubscriptionFragment\n          }\n\n          current_item_active_until\n          current_item_subscription {\n            ...OrganizationSubscriptionFragment\n          }\n        }\n        available_addon_items {\n          item_type\n          is_purchase_available\n          original_unit_price\n          unit_price\n        }\n      }\n    }\n  }\n": types.OrganizationSubscriptionDefaultPricingFragmentFragmentDoc,
    "\n  fragment OrganizationSubscriptionCalculatedPricingFragment on OrganizationSubscriptionCalculatedPricing {\n    organization_id\n    organization_coupon_id\n    organization_coupon {\n      ...OrganizationCouponFragment\n    }\n    price_tier\n    price_currency\n    renew_interval\n    selected_base_item {\n      item_type\n      original_unit_price\n      unit_price\n      category\n    }\n    selected_addon_items {\n      item_type\n      quantity\n      original_unit_price\n      unit_price\n    }\n    original_price_total_amount\n    price_total_amount\n    provider\n  }\n": types.OrganizationSubscriptionCalculatedPricingFragmentFragmentDoc,
    "\n  query UserOrganizationSubscriptions(\n    $organizationId: String!\n    $organizationCouponId: String\n    $organizationPaymentMethodId: String\n\n    $provider: ORGANIZATION_SUBSCRIPTION_PROVIDER\n    $providerStatus: ORGANIZATION_SUBSCRIPTION_PROVIDER_STATUS\n    $providerPlanCode: String\n    $providerSubscriptionCode: String\n\n    $containsItem: ORGANIZATION_SUBSCRIPTION_ITEM\n\n    $renewInterval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL\n\n    $priceTier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER\n\n    $status: ORGANIZATION_SUBSCRIPTION_STATUS\n\n    $started: Boolean\n    $canceled: Boolean\n    $expired: Boolean\n\n    $hasOutdatedPrice: Boolean\n    $hasError: Boolean\n\n    $skip: Int\n    $take: Int\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationSubscriptions(\n      organization_id: $organizationId\n      organization_coupon_id: $organizationCouponId\n      organization_payment_method_id: $organizationPaymentMethodId\n\n      provider: $provider\n      provider_status: $providerStatus\n      provider_plan_code: $providerPlanCode\n      provider_subscription_code: $providerSubscriptionCode\n\n      contains_item: $containsItem\n\n      renew_interval: $renewInterval\n\n      price_tier: $priceTier\n\n      status: $status\n\n      started: $started\n      canceled: $canceled\n      expired: $expired\n\n      has_outdated_price: $hasOutdatedPrice\n      has_error: $hasError\n\n      skip: $skip\n      take: $take\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      sorting: $sorting\n    ) {\n      edges {\n        node {\n          ...OrganizationSubscriptionFragment\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      totalCount\n    }\n  }\n": types.UserOrganizationSubscriptionsDocument,
    "\n  query UserOrganizationSubscription(\n    $organizationId: String!\n    $subscriptionId: String!\n  ) {\n    userOrganizationSubscription(\n      organization_id: $organizationId\n      organization_subscription_id: $subscriptionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n": types.UserOrganizationSubscriptionDocument,
    "\n  query UserOrganizationSubscriptionDefaultPricingSetup($organizationId: String!, $organizationCouponId: String) {\n    userOrganizationSubscriptionDefaultPricingSetup(\n      organization_id: $organizationId\n      organization_coupon_id: $organizationCouponId\n    ) {\n      ...OrganizationSubscriptionDefaultPricingFragment\n    }\n  }\n": types.UserOrganizationSubscriptionDefaultPricingSetupDocument,
    "\n  mutation UserOrganizationSubscriptionVerifyCoupon($organizationId: String!, $code: String!) {\n    userOrganizationSubscriptionVerifyCoupon(organization_id: $organizationId, code: $code) {\n      ...OrganizationCouponFragment\n    }\n  }\n": types.UserOrganizationSubscriptionVerifyCouponDocument,
    "\n  mutation UserOrganizationSubscriptionCalculatePricing($data: UserOrganizationSubscriptionCalculatePricingSchema!, $organizationId: String!) {\n    userOrganizationSubscriptionCalculatePricing(data: $data, organization_id: $organizationId) {\n      ...OrganizationSubscriptionCalculatedPricingFragment\n    }\n  }\n": types.UserOrganizationSubscriptionCalculatePricingDocument,
    "\n  mutation UserOrganizationSubscriptionGetPrePurchaseTransactionData(\n    $organizationId: String!\n  ) {\n    userOrganizationSubscriptionGetPrePurchaseTransactionData(\n      organization_id: $organizationId\n    ) {\n      ... on NuveiTransactionProviderPreTransactionData {\n        transaction_provider\n        environment\n        merchant_id\n        merchant_site_id\n      }\n\n      ... on AccruPayTransactionProviderPreTransactionData {\n        transaction_provider\n        environment\n        merchant_id\n        merchant_site_id\n      }\n    }\n  }\n": types.UserOrganizationSubscriptionGetPrePurchaseTransactionDataDocument,
    "\n  mutation UserOrganizationSubscriptionStartPurchase(\n    $organizationId: String!\n    $data: UserOrganizationSubscriptionStartPurchaseSchema!\n  ) {\n    userOrganizationSubscriptionStartPurchase(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationSubscriptionTransactionFragment\n    }\n  }\n": types.UserOrganizationSubscriptionStartPurchaseDocument,
    "\n  mutation UserOrganizationSubscriptionCompletePurchase(\n    $organizationId: String!\n    $organizationSubscriptionId: String!\n    $organizationSubscriptionTransactionId: String!\n  ) {\n    userOrganizationSubscriptionCompletePurchase(\n      organization_id: $organizationId\n      organization_subscription_id: $organizationSubscriptionId\n      organization_subscription_transaction_id: $organizationSubscriptionTransactionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n": types.UserOrganizationSubscriptionCompletePurchaseDocument,
    "\n  mutation UserOrganizationSubscriptionCancel(\n    $organizationId: String!\n    $organizationSubscriptionId: String!\n  ) {\n    userOrganizationSubscriptionCancel(\n      organization_id: $organizationId\n      organization_subscription_id: $organizationSubscriptionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n": types.UserOrganizationSubscriptionCancelDocument,
    "\n  mutation UserOrganizationInvoiceTransactionGetPDF(\n    $organizationId: String!\n    $organizationInvoiceTransactionId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userOrganizationInvoiceTransactionGetPDF(\n      organization_id: $organizationId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UserOrganizationInvoiceTransactionGetPDFDocument,
    "\n  fragment User on User {\n    id\n    email\n    organizations {\n      id\n      role\n      is_current_organization_user_seat_available\n      organization_id\n      organization {\n        name\n        email\n        subscription_level\n        subscription_data {\n          ...OrganizationSubscriptionDataFragment\n        }\n      }\n    }\n    first_name\n    last_name\n    language\n    phone_number\n    timezone\n    is_admin\n    updated_at\n    created_at\n    profile_picture_file {\n      public_url\n    }\n  }\n": types.UserFragmentDoc,
    "\n  query User {\n    user {\n      ...User\n    }\n  }\n": types.UserDocument,
    "\n  mutation UserUpdateData($data: UserUpdateDataSchema!) {\n    userUpdateData(\n      data: $data\n    ) {\n      ...User\n    }\n  }\n": types.UserUpdateDataDocument,
    "\n  mutation UserEmailVerifyOrChangeStart($data: UserEmailVerifyOrChangeStartSchema!) {\n    userEmailVerifyOrChangeStart(data: $data)\n  }\n": types.UserEmailVerifyOrChangeStartDocument,
    "\n  mutation UserEmailVerifyOrChangeFinish($data: UserEmailVerifyOrChangeFinishSchema!) {\n    userEmailVerifyOrChangeFinish(data: $data) {\n      email\n    }\n  }\n": types.UserEmailVerifyOrChangeFinishDocument,
    "\n  mutation UserPhoneNumberVerifyOrChangeStart($data: UserPhoneNumberVerifyOrChangeStartSchema!) {\n    userPhoneNumberVerifyOrChangeStart(data: $data)\n  }\n": types.UserPhoneNumberVerifyOrChangeStartDocument,
    "\n  mutation UserPhoneNumberVerifyOrChangeFinish($data: UserPhoneNumberVerifyOrChangeFinishSchema!) {\n    userPhoneNumberVerifyOrChangeFinish(data: $data) {\n      phone_number\n    }\n  }\n": types.UserPhoneNumberVerifyOrChangeFinishDocument,
    "\n  mutation UserPasswordChangeStart($data: UserPasswordChangeStartSchema!) {\n    userPasswordChangeStart(data: $data)\n  }\n": types.UserPasswordChangeStartDocument,
    "\n  mutation UserPasswordChangeFinish($data: UserPasswordChangeFinishSchema!) {\n    userPasswordChangeFinish(data: $data)\n  }\n": types.UserPasswordChangeFinishDocument,
    "\n  mutation UserProfilePictureRemove {\n    userProfilePictureRemove {\n        profile_picture_file_id\n    }\n  }\n": types.UserProfilePictureRemoveDocument,
    "\n  mutation UserHandleLoginAttempt($email: String!) {\n    userHandleLoginAttempt(email: $email)\n  }\n": types.UserHandleLoginAttemptDocument,
    "\n  fragment OrganizationVendorFragment on OrganizationVendor {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    balance\n    overdue_amount\n  }\n": types.OrganizationVendorFragmentFragmentDoc,
    "\n  fragment OrganizationVendorBillSummaryFragment on OrganizationVendor {\n    bill_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              bill_date\n              due_date\n              vendor_email\n              created_at\n              updated_at\n              status\n              latest_acct_provider_status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n\n      total_open_bill_count\n      total_overdue_bill_count\n\n      total_amount\n      paid_amount\n      overdue_amount\n      balance\n    }\n  }\n": types.OrganizationVendorBillSummaryFragmentFragmentDoc,
    "\n  fragment OrganizationVendorAdditionalDataFragment on OrganizationVendor {\n    ...OrganizationVendorBillSummaryFragment\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      created_at\n      updated_at\n    }\n  }\n": types.OrganizationVendorAdditionalDataFragmentFragmentDoc,
    "\n  query UserOrganizationVendors(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n    userOrganizationVendors(\n      organization_id: $organizationId\n\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationVendorFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n": types.UserOrganizationVendorsDocument,
    "\n  query UserOrganizationVendor($organizationVendorId: String!, $organizationId: String!) {\n    userOrganizationVendor(organization_vendor_id: $organizationVendorId, organization_id: $organizationId) {\n      ...OrganizationVendorFragment\n      ...OrganizationVendorAdditionalDataFragment\n    }\n  }\n": types.UserOrganizationVendorDocument,
    "\n  mutation UserOrganizationVendorUpdate ($organizationId: String!, $organizationVendorId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n      ...OrganizationVendorAdditionalDataFragment\n    }\n  }\n": types.UserOrganizationVendorUpdateDocument,
    "\n  mutation UserOrganizationVendorCreate ($organizationId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": types.UserOrganizationVendorCreateDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationAcctProviderConnFragment on OrganizationAcctProviderConn {\n    id\n    acct_provider\n    code\n    payload\n    conn_expires_at\n    automatic_pull_enabled\n    disconnected_at\n    created_at\n    updated_at\n    organization_id\n    status\n\n    synchronizations(skip: 0, take: 1, finished: true) {\n      edges {\n        node {\n          ...OrganizationAcctProviderConnSynchronizationFragment\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationAcctProviderConnFragment on OrganizationAcctProviderConn {\n    id\n    acct_provider\n    code\n    payload\n    conn_expires_at\n    automatic_pull_enabled\n    disconnected_at\n    created_at\n    updated_at\n    organization_id\n    status\n\n    synchronizations(skip: 0, take: 1, finished: true) {\n      edges {\n        node {\n          ...OrganizationAcctProviderConnSynchronizationFragment\n        }\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationAcctProviderConnSynchronizationFragment on OrganizationAcctProviderConnSynchronization {\n    id\n    mode\n    force\n    provider\n    errors\n    warnings\n    data {\n        customer { items }\n        invoice { items }\n        invoice_transaction { items }\n        vendor { items }\n        bill { items }\n        bill_transaction { items }\n    }\n    started_at\n    finished_at\n    failed_at\n    succeeded_at\n\n    read_success\n    read_failure\n    skipped\n    create_success\n    create_failure\n    update_success\n    update_failure\n    delete_failure\n    delete_success\n    process_failure\n    process_success\n\n    created_at\n    updated_at\n\n    scope\n    scope_id\n    scope_description\n\n    organization_id\n    organization_acct_provider_conn_id\n  }\n"): (typeof documents)["\n  fragment OrganizationAcctProviderConnSynchronizationFragment on OrganizationAcctProviderConnSynchronization {\n    id\n    mode\n    force\n    provider\n    errors\n    warnings\n    data {\n        customer { items }\n        invoice { items }\n        invoice_transaction { items }\n        vendor { items }\n        bill { items }\n        bill_transaction { items }\n    }\n    started_at\n    finished_at\n    failed_at\n    succeeded_at\n\n    read_success\n    read_failure\n    skipped\n    create_success\n    create_failure\n    update_success\n    update_failure\n    delete_failure\n    delete_success\n    process_failure\n    process_success\n\n    created_at\n    updated_at\n\n    scope\n    scope_id\n    scope_description\n\n    organization_id\n    organization_acct_provider_conn_id\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnDisconnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnDisconnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnDisconnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnDisconnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnUpdate(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $data: UserOrganizationAcctProviderConnUpdateSchema!\n  ) {\n    userOrganizationAcctProviderConnUpdate(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      data: $data\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnUpdate(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $data: UserOrganizationAcctProviderConnUpdateSchema!\n  ) {\n    userOrganizationAcctProviderConnUpdate(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      data: $data\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $url: String!\n    $automaticPull: Boolean!\n  ) {\n    userOrganizationAcctProviderConnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      url: $url\n      automatic_pull_enabled: $automaticPull\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $url: String!\n    $automaticPull: Boolean!\n  ) {\n    userOrganizationAcctProviderConnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      url: $url\n      automatic_pull_enabled: $automaticPull\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderGetOAuthUrl(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderGetOAuthUrl(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderGetOAuthUrl(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderGetOAuthUrl(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderSynchronize(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderSynchronize(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderSynchronize(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderSynchronize(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationAcctProviders(\n    $organizationId: String!,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviders(\n        organization_id: $organizationId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"): (typeof documents)["\n  query UserOrganizationAcctProviders(\n    $organizationId: String!,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviders(\n        organization_id: $organizationId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationAcctProvider(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String!\n  ) {\n    userOrganizationAcctProvider(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_id: $organizationAcctProviderConnId\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationAcctProvider(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String!\n  ) {\n    userOrganizationAcctProvider(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_id: $organizationAcctProviderConnId\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationAcctProviderSynchronizations(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String,\n\n    $scope: ORGANIZATION_ACCT_PROVIDER_CONN_SYNCHRONIZATION_SCOPE,\n    $finished: Boolean,\n    $failed: Boolean,\n    $succeeded: Boolean,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviderSynchronizations(\n        organization_id: $organizationId\n        organization_acct_provider_conn_id: $organizationAcctProviderConnId\n\n        scope: $scope\n        finished: $finished\n        failed: $failed\n        succeeded: $succeeded\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnSynchronizationFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"): (typeof documents)["\n  query UserOrganizationAcctProviderSynchronizations(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String,\n\n    $scope: ORGANIZATION_ACCT_PROVIDER_CONN_SYNCHRONIZATION_SCOPE,\n    $finished: Boolean,\n    $failed: Boolean,\n    $succeeded: Boolean,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviderSynchronizations(\n        organization_id: $organizationId\n        organization_acct_provider_conn_id: $organizationAcctProviderConnId\n\n        scope: $scope\n        finished: $finished\n        failed: $failed\n        succeeded: $succeeded\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnSynchronizationFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationAcctProviderSynchronization(\n    $organizationId: String!,\n    $organizationAcctProviderConnSynchronizationId: String!\n  ) {\n    userOrganizationAcctProviderSynchronization(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_synchronization_id: $organizationAcctProviderConnSynchronizationId\n    ) {\n      ...OrganizationAcctProviderConnSynchronizationFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationAcctProviderSynchronization(\n    $organizationId: String!,\n    $organizationAcctProviderConnSynchronizationId: String!\n  ) {\n    userOrganizationAcctProviderSynchronization(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_synchronization_id: $organizationAcctProviderConnSynchronizationId\n    ) {\n      ...OrganizationAcctProviderConnSynchronizationFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnCheckConnection(\n    $organizationId: String!\n\n    $acctProvider: ACCT_PROVIDER!\n    $acctProviderConnCode: String!\n  ) {\n    userOrganizationAcctProviderConnCheckConnection(\n      organization_id: $organizationId\n      acct_provider: $acctProvider\n      acct_provider_conn_code: $acctProviderConnCode\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnCheckConnection(\n    $organizationId: String!\n\n    $acctProvider: ACCT_PROVIDER!\n    $acctProviderConnCode: String!\n  ) {\n    userOrganizationAcctProviderConnCheckConnection(\n      organization_id: $organizationId\n      acct_provider: $acctProvider\n      acct_provider_conn_code: $acctProviderConnCode\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnauthorizedUserOrganizationAcctProviderConnCheckConnection(\n    $acctProvider: ACCT_PROVIDER!\n    $acctProviderConnCode: String!\n  ) {\n    unauthorizedUserOrganizationAcctProviderConnCheckConnection(\n      acct_provider: $acctProvider\n      acct_provider_conn_code: $acctProviderConnCode\n    )\n  }\n"): (typeof documents)["\n  mutation UnauthorizedUserOrganizationAcctProviderConnCheckConnection(\n    $acctProvider: ACCT_PROVIDER!\n    $acctProviderConnCode: String!\n  ) {\n    unauthorizedUserOrganizationAcctProviderConnCheckConnection(\n      acct_provider: $acctProvider\n      acct_provider_conn_code: $acctProviderConnCode\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query AdminOrganizations(\n    $id: String\n    $email: String\n    $name: String\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    adminOrganizations(\n      id: $id\n      email: $email\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      edges {\n        cursor\n        node {\n          ...OrganizationFragment\n        }\n      }\n      totalCount\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query AdminOrganizations(\n    $id: String\n    $email: String\n    $name: String\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    adminOrganizations(\n      id: $id\n      email: $email\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      edges {\n        cursor\n        node {\n          ...OrganizationFragment\n        }\n      }\n      totalCount\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserSessionsClose {\n    userSessionsClose {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation UserSessionsClose {\n    userSessionsClose {\n      id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UnauthorizedUserOrganizationUserInvite(\n    $code: String!\n    $email: String!\n    $organizationId: String!\n    $organizationInviteId: String!\n  ) {\n    unauthorizedUserOrganizationUserInvite(\n      code: $code\n      email: $email\n      organization_id: $organizationId\n      organization_invite_id: $organizationInviteId\n    ) {\n      invited_by\n      organization_name\n      organization_id\n      target_account_exists\n    }\n  }\n"): (typeof documents)["\n  query UnauthorizedUserOrganizationUserInvite(\n    $code: String!\n    $email: String!\n    $organizationId: String!\n    $organizationInviteId: String!\n  ) {\n    unauthorizedUserOrganizationUserInvite(\n      code: $code\n      email: $email\n      organization_id: $organizationId\n      organization_invite_id: $organizationInviteId\n    ) {\n      invited_by\n      organization_name\n      organization_id\n      target_account_exists\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationUserInvites(\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationUserInvites(\n      after: $after,\n      first: $first,\n\n      before: $before,\n      last: $last,\n\n      skip: $skip,\n      take: $take,\n\n      sorting: $sorting\n    ) {\n      edges {\n        node {\n          id\n          email\n          role\n          code\n          expires_at\n          accepted_at\n          canceled_at\n          rejected_at\n          created_at\n          updated_at\n          organization_id\n          organization {\n              id\n              name\n              logo_picture_file {\n                  public_url\n              }\n          }\n          created_by_user_id\n          created_by_user {\n              id\n              first_name\n              last_name\n              email\n              profile_picture_file {\n                  public_url\n              }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      totalCount\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationUserInvites(\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationUserInvites(\n      after: $after,\n      first: $first,\n\n      before: $before,\n      last: $last,\n\n      skip: $skip,\n      take: $take,\n\n      sorting: $sorting\n    ) {\n      edges {\n        node {\n          id\n          email\n          role\n          code\n          expires_at\n          accepted_at\n          canceled_at\n          rejected_at\n          created_at\n          updated_at\n          organization_id\n          organization {\n              id\n              name\n              logo_picture_file {\n                  public_url\n              }\n          }\n          created_by_user_id\n          created_by_user {\n              id\n              first_name\n              last_name\n              email\n              profile_picture_file {\n                  public_url\n              }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      totalCount\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserSignUpWithEmailStart($data: UserSignUpWithEmailStartSchema!) {\n    userSignUpWithEmailStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserSignUpWithEmailStart($data: UserSignUpWithEmailStartSchema!) {\n    userSignUpWithEmailStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserSignUpWithEmailVerify($data: UserSignUpWithEmailVerifySchema!) {\n    userSignUpWithEmailVerify(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserSignUpWithEmailVerify($data: UserSignUpWithEmailVerifySchema!) {\n    userSignUpWithEmailVerify(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationUserInviteAccept(\n    $code: String!\n    $organizationInviteId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationUserInviteAccept(\n      code: $code\n      organization_invite_id: $organizationInviteId\n      organization_id: $organizationId\n    ) {\n      role\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationUserInviteAccept(\n    $code: String!\n    $organizationInviteId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationUserInviteAccept(\n      code: $code\n      organization_invite_id: $organizationInviteId\n      organization_id: $organizationId\n    ) {\n      role\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserSignUpWithEmailFinishSchema(\n    $data: UserSignUpWithEmailFinishSchema!\n  ) {\n    userSignUpWithEmailFinish(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserSignUpWithEmailFinishSchema(\n    $data: UserSignUpWithEmailFinishSchema!\n  ) {\n    userSignUpWithEmailFinish(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPasswordResetStart($data: UserPasswordResetStartSchema!) {\n    userPasswordResetStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserPasswordResetStart($data: UserPasswordResetStartSchema!) {\n    userPasswordResetStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPasswordResetFinish($userPasswordResetFinishData2: UserPasswordResetFinishSchema!) {\n    userPasswordResetFinish(data: $userPasswordResetFinishData2)\n  }\n"): (typeof documents)["\n  mutation UserPasswordResetFinish($userPasswordResetFinishData2: UserPasswordResetFinishSchema!) {\n    userPasswordResetFinish(data: $userPasswordResetFinishData2)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserAuthProviderGetOAuthUrl($authProvider: AUTH_PROVIDER!) {\n    userAuthProviderGetOAuthUrl(auth_provider: $authProvider)\n  }\n"): (typeof documents)["\n  mutation UserAuthProviderGetOAuthUrl($authProvider: AUTH_PROVIDER!) {\n    userAuthProviderGetOAuthUrl(auth_provider: $authProvider)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserAuthProviderGetOAuthToken($authProvider: AUTH_PROVIDER!, $authorizationToken: String!) {\n    userAuthProviderGetOAuthToken(auth_provider: $authProvider, authorization_token: $authorizationToken)\n  }\n"): (typeof documents)["\n  mutation UserAuthProviderGetOAuthToken($authProvider: AUTH_PROVIDER!, $authorizationToken: String!) {\n    userAuthProviderGetOAuthToken(auth_provider: $authProvider, authorization_token: $authorizationToken)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationBillFragment on OrganizationBill {\n    id\n    unique_code\n    number\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    bill_date\n    due_date\n    vendor_email\n    vendor_address_line_1\n    vendor_address_number\n    vendor_address_line_2\n    vendor_address_city\n    vendor_address_state\n    vendor_address_zip_code\n    vendor_address_country_code_iso_3\n    vendor_address_lat\n    vendor_address_lng\n    created_at\n    updated_at\n\n    conn_linked_invoice_id\n    conn_locked_data_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_vendor_id\n    organization_vendor {\n      name\n      email\n      balance\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n    latest_acct_provider_status\n    latest_acct_provider_is_overdue\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    transaction_links {\n      id\n      amount\n      organization_bill_id\n\n      created_at\n      updated_at\n\n      organization_bill_transaction_id\n      organization_bill_transaction {\n        id\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationBillFragment on OrganizationBill {\n    id\n    unique_code\n    number\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    bill_date\n    due_date\n    vendor_email\n    vendor_address_line_1\n    vendor_address_number\n    vendor_address_line_2\n    vendor_address_city\n    vendor_address_state\n    vendor_address_zip_code\n    vendor_address_country_code_iso_3\n    vendor_address_lat\n    vendor_address_lng\n    created_at\n    updated_at\n\n    conn_linked_invoice_id\n    conn_locked_data_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_vendor_id\n    organization_vendor {\n      name\n      email\n      balance\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n    latest_acct_provider_status\n    latest_acct_provider_is_overdue\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    transaction_links {\n      id\n      amount\n      organization_bill_id\n\n      created_at\n      updated_at\n\n      organization_bill_transaction_id\n      organization_bill_transaction {\n        id\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationBillSummaryFragment on OrganizationBillSummary {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    customer_organization_vendor_id\n    customer_organization_vendor {\n      id\n      name\n    }\n\n    customer_organization_id\n    customer_organization {\n      id\n      name\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationBillFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    status\n\n    total_open_bill_count\n    total_overdue_bill_count\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n  }\n"): (typeof documents)["\n  fragment OrganizationBillSummaryFragment on OrganizationBillSummary {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    customer_organization_vendor_id\n    customer_organization_vendor {\n      id\n      name\n    }\n\n    customer_organization_id\n    customer_organization {\n      id\n      name\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationBillFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    status\n\n    total_open_bill_count\n    total_overdue_bill_count\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationBillSummary(\n    $organizationId: String!\n    $organizationVendorId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: BILL_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: BILL_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationBillSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationBillSummaryFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationBillSummary(\n    $organizationId: String!\n    $organizationVendorId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: BILL_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: BILL_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationBillSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationBillSummaryFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationBill(\n    $organizationId: String!\n    $organizationBillId: String!\n  ) {\n    userOrganizationBill(\n      organization_id: $organizationId\n      organization_bill_id: $organizationBillId\n    ) {\n      ...OrganizationBillFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationBill(\n    $organizationId: String!\n    $organizationBillId: String!\n  ) {\n    userOrganizationBill(\n      organization_id: $organizationId\n      organization_bill_id: $organizationBillId\n    ) {\n      ...OrganizationBillFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationBillCreate(\n    $organizationId: String!\n    $data: UserOrganizationBillSchema!\n  ) {\n    userOrganizationBillCreate(organization_id: $organizationId, data: $data) {\n      ...OrganizationBillFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationBillCreate(\n    $organizationId: String!\n    $data: UserOrganizationBillSchema!\n  ) {\n    userOrganizationBillCreate(organization_id: $organizationId, data: $data) {\n      ...OrganizationBillFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationConnectionFragment on OrganizationConnection {\n    id\n\n    is_valid\n    is_connected\n\n    vendor_conn_status\n    vendor_conn_status_at\n    vendor_organization_id\n    vendor_organization_name\n    vendor_organization_email\n    vendor_target_customer_id\n    vendor_target_customer_name\n    vendor_target_customer_email\n\n    customer_conn_status\n    customer_conn_status_at\n    customer_organization_id\n    customer_organization_name\n    customer_organization_email\n    customer_target_vendor_id\n    customer_target_vendor_name\n    customer_target_vendor_email\n\n    created_at\n    updated_at\n  }\n"): (typeof documents)["\n  fragment OrganizationConnectionFragment on OrganizationConnection {\n    id\n\n    is_valid\n    is_connected\n\n    vendor_conn_status\n    vendor_conn_status_at\n    vendor_organization_id\n    vendor_organization_name\n    vendor_organization_email\n    vendor_target_customer_id\n    vendor_target_customer_name\n    vendor_target_customer_email\n\n    customer_conn_status\n    customer_conn_status_at\n    customer_organization_id\n    customer_organization_name\n    customer_organization_email\n    customer_target_vendor_id\n    customer_target_vendor_name\n    customer_target_vendor_email\n\n    created_at\n    updated_at\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationConnections(\n    $organizationId: String!\n    $status: ORGANIZATION_CONNECTION_STATUS\n  ) {\n    userOrganizationConnections(\n      organization_id: $organizationId\n      status: $status\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationConnectionFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationConnections(\n    $organizationId: String!\n    $status: ORGANIZATION_CONNECTION_STATUS\n  ) {\n    userOrganizationConnections(\n      organization_id: $organizationId\n      status: $status\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationConnectionFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationConnection(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnection(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationConnection(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnection(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationConnectionInviteCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationConnectionInviteCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationConnectionInviteCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationConnectionInviteCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationConnectionInviteVendor(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationConnectionInviteVendor(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationConnectionInviteVendor(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationConnectionInviteVendor(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationConnectionAccept(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionAccept(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationConnectionAccept(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionAccept(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationConnectionReject(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionReject(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationConnectionReject(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionReject(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerConnLock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnLock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerConnLock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnLock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerConnUnlock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnUnlock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerConnUnlock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnUnlock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorConnLock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnLock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorConnLock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnLock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorConnUnlock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnUnlock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorConnUnlock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnUnlock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query userOrganizationVendorContacts(\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContacts(\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          email\n          id\n          is_default\n          name\n          phone_number\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query userOrganizationVendorContacts(\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContacts(\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          email\n          id\n          is_default\n          name\n          phone_number\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomerContacts(\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContacts(\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          id\n          name\n          email\n          phone_number\n          is_default\n          send_invoice_reminders\n          created_at\n          updated_at\n          organization_customer_id\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCustomerContacts(\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContacts(\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          id\n          name\n          email\n          phone_number\n          is_default\n          send_invoice_reminders\n          created_at\n          updated_at\n          organization_customer_id\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation userOrganizationVendorContactCreate(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $data: UserOrganizationVendorContactCreateSchema!\n  ) {\n    userOrganizationVendorContactCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      organization_vendor_id\n    }\n  }\n"): (typeof documents)["\n  mutation userOrganizationVendorContactCreate(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $data: UserOrganizationVendorContactCreateSchema!\n  ) {\n    userOrganizationVendorContactCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      organization_vendor_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerContactCreate(\n    $data: UserOrganizationCustomerContactCreateSchema!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactCreate(\n      data: $data\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerContactCreate(\n    $data: UserOrganizationCustomerContactCreateSchema!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactCreate(\n      data: $data\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorContactUpdate(\n    $data: UserOrganizationVendorContactUpdateSchema!\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactUpdate(\n      data: $data\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      is_default\n      name\n      phone_number\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorContactUpdate(\n    $data: UserOrganizationVendorContactUpdateSchema!\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactUpdate(\n      data: $data\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      is_default\n      name\n      phone_number\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerContactUpdate(\n    $data: UserOrganizationCustomerContactUpdateSchema!\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactUpdate(\n      data: $data\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerContactUpdate(\n    $data: UserOrganizationCustomerContactUpdateSchema!\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactUpdate(\n      data: $data\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorContactDelete(\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactDelete(\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      name\n      organization_vendor_id\n      phone_number\n      is_default\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorContactDelete(\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactDelete(\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      name\n      organization_vendor_id\n      phone_number\n      is_default\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerContactDelete(\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactDelete(\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerContactDelete(\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactDelete(\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerFragment on OrganizationCustomer {\n    id\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    balance\n    overdue_amount\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerFragment on OrganizationCustomer {\n    id\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    balance\n    overdue_amount\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerInvoiceSummaryFragment on OrganizationCustomer {\n    invoice_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n\n              provider\n              provider_code\n              provider_url\n              provider_errors\n              provider_warnings\n              last_successful_sync_id\n              last_successful_sync_at\n              last_sync_succeeded\n              last_sync_id\n              last_sync_at\n\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              invoice_date\n              due_date\n              customer_email\n              created_at\n              updated_at\n              status\n              latest_acct_provider_status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n\n      total_open_invoice_count\n      total_overdue_invoice_count\n\n      total_amount\n      paid_amount\n      overdue_amount\n      balance\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerInvoiceSummaryFragment on OrganizationCustomer {\n    invoice_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n\n              provider\n              provider_code\n              provider_url\n              provider_errors\n              provider_warnings\n              last_successful_sync_id\n              last_successful_sync_at\n              last_sync_succeeded\n              last_sync_id\n              last_sync_at\n\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              invoice_date\n              due_date\n              customer_email\n              created_at\n              updated_at\n              status\n              latest_acct_provider_status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n\n      total_open_invoice_count\n      total_overdue_invoice_count\n\n      total_amount\n      paid_amount\n      overdue_amount\n      balance\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerAdditionalDataFragment on OrganizationCustomer {\n    ...OrganizationCustomerInvoiceSummaryFragment,\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerAdditionalDataFragment on OrganizationCustomer {\n    ...OrganizationCustomerInvoiceSummaryFragment,\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomers(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationCustomers(\n        organization_id: $organizationId\n\n        name: $name\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationCustomerFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"): (typeof documents)["\n  query UserOrganizationCustomers(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationCustomers(\n        organization_id: $organizationId\n\n        name: $name\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationCustomerFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomerStatement(\n    $organizationId: String!\n    $organizationCustomerId: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationCustomerStatement(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCustomerStatement(\n    $organizationId: String!\n    $organizationCustomerId: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationCustomerStatement(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomerStatementLine(\n    $organizationId: String!,\n    $organizationCustomerId: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n  ) {\n    userOrganizationCustomerStatementLine(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      organization_invoice_id: $organizationInvoiceId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCustomerStatementLine(\n    $organizationId: String!,\n    $organizationCustomerId: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n  ) {\n    userOrganizationCustomerStatementLine(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      organization_invoice_id: $organizationInvoiceId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!,\n    ) {\n    userOrganizationCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId,\n      ) {\n      ...OrganizationCustomerFragment\n      ...OrganizationCustomerAdditionalDataFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!,\n    ) {\n    userOrganizationCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId,\n      ) {\n      ...OrganizationCustomerFragment\n      ...OrganizationCustomerAdditionalDataFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerUpdate($organizationId: String!, $organizationCustomerId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerUpdate(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n      ...OrganizationCustomerAdditionalDataFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerUpdate($organizationId: String!, $organizationCustomerId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerUpdate(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n      ...OrganizationCustomerAdditionalDataFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerCreate($organizationId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerCreate($organizationId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerSendStatementEmail($targets: [UserOrganizationCustomerSendStatementEmailSchema!]!, $organizationId: String!) {\n    userOrganizationCustomerSendStatementEmail(targets: $targets, organization_id: $organizationId)\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerSendStatementEmail($targets: [UserOrganizationCustomerSendStatementEmailSchema!]!, $organizationId: String!) {\n    userOrganizationCustomerSendStatementEmail(targets: $targets, organization_id: $organizationId)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerGetStatementLink($organizationId: String!, $organizationCustomerId: String!, $expiresAt: DateTime) {\n    userOrganizationCustomerGetStatementLink(organization_id: $organizationId, organization_customer_id: $organizationCustomerId, expires_at: $expiresAt)\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerGetStatementLink($organizationId: String!, $organizationCustomerId: String!, $expiresAt: DateTime) {\n    userOrganizationCustomerGetStatementLink(organization_id: $organizationId, organization_customer_id: $organizationCustomerId, expires_at: $expiresAt)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerSynchronize($organizationId: String!, $organizationCustomerId: String!) {\n    userOrganizationCustomerSynchronize(organization_id: $organizationId, organization_customer_id: $organizationCustomerId)\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerSynchronize($organizationId: String!, $organizationCustomerId: String!) {\n    userOrganizationCustomerSynchronize(organization_id: $organizationId, organization_customer_id: $organizationCustomerId)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationInvoiceFragment on OrganizationInvoice {\n    id\n    unique_code\n    number\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    currency_code\n    description\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    invoice_date\n    due_date\n    created_at\n    updated_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_customer_id\n    organization_customer {\n      name\n      email\n      balance\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n    latest_acct_provider_status\n    latest_acct_provider_is_overdue\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    email_sent_at\n\n    payment_options {\n        method\n        url\n        payload\n    }\n\n    transaction_links {\n      id\n      amount\n      organization_invoice_id\n\n      created_at\n      updated_at\n\n      organization_invoice_transaction_id\n      organization_invoice_transaction {\n        id\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationInvoiceFragment on OrganizationInvoice {\n    id\n    unique_code\n    number\n\n    provider\n    provider_code\n    provider_url\n    provider_errors\n    provider_warnings\n    last_successful_sync_id\n    last_successful_sync_at\n    last_sync_succeeded\n    last_sync_id\n    last_sync_at\n\n    currency_code\n    description\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    invoice_date\n    due_date\n    created_at\n    updated_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_customer_id\n    organization_customer {\n      name\n      email\n      balance\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n    latest_acct_provider_status\n    latest_acct_provider_is_overdue\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    email_sent_at\n\n    payment_options {\n        method\n        url\n        payload\n    }\n\n    transaction_links {\n      id\n      amount\n      organization_invoice_id\n\n      created_at\n      updated_at\n\n      organization_invoice_transaction_id\n      organization_invoice_transaction {\n        id\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationInvoiceSummaryFragment on OrganizationInvoiceSummary {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      name\n      email\n    }\n\n    customer_organization_id\n    customer_organization {\n      name\n      email\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationInvoiceFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    status\n\n    total_open_invoice_count\n    total_overdue_invoice_count\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    latest_acct_provider_one_to_thirty_days_due_amount\n    latest_acct_provider_thirty_one_to_sixty_days_due_amount\n    latest_acct_provider_sixty_plus_days_due_amount\n  }\n"): (typeof documents)["\n  fragment OrganizationInvoiceSummaryFragment on OrganizationInvoiceSummary {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      name\n      email\n    }\n\n    customer_organization_id\n    customer_organization {\n      name\n      email\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationInvoiceFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    status\n\n    total_open_invoice_count\n    total_overdue_invoice_count\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    latest_acct_provider_one_to_thirty_days_due_amount\n    latest_acct_provider_thirty_one_to_sixty_days_due_amount\n    latest_acct_provider_sixty_plus_days_due_amount\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationCustomerId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationCustomerId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationInvoice(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoice(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    ) {\n      ...OrganizationInvoiceFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationInvoice(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoice(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    ) {\n      ...OrganizationInvoiceFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInvoiceCreate(\n    $data: UserOrganizationInvoiceSchema!\n    $organizationId: String!\n  ) {\n    userOrganizationInvoiceCreate(\n      data: $data\n      organization_id: $organizationId\n    ) {\n      amount\n      balance\n      created_at\n      currency_code\n      id\n      is_overdue\n      invoice_date\n      status\n      email_sent_at\n      paid_at\n      paid_amount\n      total_amount\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInvoiceCreate(\n    $data: UserOrganizationInvoiceSchema!\n    $organizationId: String!\n  ) {\n    userOrganizationInvoiceCreate(\n      data: $data\n      organization_id: $organizationId\n    ) {\n      amount\n      balance\n      created_at\n      currency_code\n      id\n      is_overdue\n      invoice_date\n      status\n      email_sent_at\n      paid_at\n      paid_amount\n      total_amount\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerSendInvoiceEmail(\n    $organizationId: String!\n    $targets: [UserOrganizationCustomerSendInvoiceEmailSchema!]!\n  ) {\n    userOrganizationCustomerSendInvoiceEmail(\n      organization_id: $organizationId\n      targets: $targets\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerSendInvoiceEmail(\n    $organizationId: String!\n    $targets: [UserOrganizationCustomerSendInvoiceEmailSchema!]!\n  ) {\n    userOrganizationCustomerSendInvoiceEmail(\n      organization_id: $organizationId\n      targets: $targets\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInvoiceGetPDF(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userOrganizationInvoiceGetPDF(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInvoiceGetPDF(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userOrganizationInvoiceGetPDF(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UnconnectedCustomerOrganizationInvoiceSummary(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationInvoiceSummary(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n"): (typeof documents)["\n  query UnconnectedCustomerOrganizationInvoiceSummary(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationInvoiceSummary(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnconnectedCustomerOrganizationInvoiceGetPDF(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    unconnectedCustomerOrganizationInvoiceGetPDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UnconnectedCustomerOrganizationInvoiceGetPDF(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    unconnectedCustomerOrganizationInvoiceGetPDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationSubscriptionDataFragment on OrganizationSubscriptionData {\n    subscription_level\n    organization_user_seats\n    requires_user_action\n    requires_provider_refresh\n    active_subscriptions {\n        id\n        provider\n        provider_status\n    }\n    active_plans {\n        item_type\n        status\n    }\n    active_modules {\n        item_type\n        status\n    }\n    active_addons {\n        item_type\n        quantity\n        status\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationSubscriptionDataFragment on OrganizationSubscriptionData {\n    subscription_level\n    organization_user_seats\n    requires_user_action\n    requires_provider_refresh\n    active_subscriptions {\n        id\n        provider\n        provider_status\n    }\n    active_plans {\n        item_type\n        status\n    }\n    active_modules {\n        item_type\n        status\n    }\n    active_addons {\n        item_type\n        quantity\n        status\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationFragment on Organization {\n    id\n    name\n    email\n    unique_name\n    unique_code\n    phone_number\n    address_line_1\n    address_number\n    address_line_2\n    address_city\n    address_state\n    address_zip_code\n    address_country_code_iso_3\n    address_lat\n    address_lng\n    primary_contact_name\n    business_name\n    business_industry\n    business_number_of_employees\n    business_address_line_1\n    business_address_number\n    business_address_line_2\n    business_address_city\n    business_address_state\n    business_address_zip_code\n    business_address_country_code_iso_3\n    business_address_lat\n    business_address_lng\n    business_tax_code_type\n    business_tax_code\n    timezone\n    language\n\n    created_at\n    updated_at\n\n    logo_picture_file_id\n    logo_picture_file {\n      public_url\n    }\n\n    current_email_verification_id\n    current_phone_number_verification_id\n\n    subscription_level\n    subscription_data {\n      ...OrganizationSubscriptionDataFragment\n    }\n\n    setting_receive_customer_notification_mode\n  }\n"): (typeof documents)["\n  fragment OrganizationFragment on Organization {\n    id\n    name\n    email\n    unique_name\n    unique_code\n    phone_number\n    address_line_1\n    address_number\n    address_line_2\n    address_city\n    address_state\n    address_zip_code\n    address_country_code_iso_3\n    address_lat\n    address_lng\n    primary_contact_name\n    business_name\n    business_industry\n    business_number_of_employees\n    business_address_line_1\n    business_address_number\n    business_address_line_2\n    business_address_city\n    business_address_state\n    business_address_zip_code\n    business_address_country_code_iso_3\n    business_address_lat\n    business_address_lng\n    business_tax_code_type\n    business_tax_code\n    timezone\n    language\n\n    created_at\n    updated_at\n\n    logo_picture_file_id\n    logo_picture_file {\n      public_url\n    }\n\n    current_email_verification_id\n    current_phone_number_verification_id\n\n    subscription_level\n    subscription_data {\n      ...OrganizationSubscriptionDataFragment\n    }\n\n    setting_receive_customer_notification_mode\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationUserFragment on OrganizationUser {\n    id\n    role\n    is_current_organization_user_seat_available\n    receive_invoice_reminders\n    receive_customer_notification_mode\n    created_at\n    updated_at\n    organization_id\n    user_id\n    user {\n      id\n      email\n      phone_number\n      first_name\n      last_name\n      language\n      profile_picture_file_id\n      profile_picture_file {\n        public_url\n      }\n      current_email_verification_id\n      current_phone_number_verification_id\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationUserFragment on OrganizationUser {\n    id\n    role\n    is_current_organization_user_seat_available\n    receive_invoice_reminders\n    receive_customer_notification_mode\n    created_at\n    updated_at\n    organization_id\n    user_id\n    user {\n      id\n      email\n      phone_number\n      first_name\n      last_name\n      language\n      profile_picture_file_id\n      profile_picture_file {\n        public_url\n      }\n      current_email_verification_id\n      current_phone_number_verification_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationInviteFragment on OrganizationInvite {\n    id\n    email\n    role\n    code\n    expires_at\n    accepted_at\n    canceled_at\n    rejected_at\n    created_at\n    updated_at\n    organization_id\n    organization {\n        id\n        name\n        logo_picture_file {\n            public_url\n        }\n    }\n    created_by_user_id\n    created_by_user {\n        id\n        first_name\n        last_name\n        email\n        profile_picture_file {\n            public_url\n        }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationInviteFragment on OrganizationInvite {\n    id\n    email\n    role\n    code\n    expires_at\n    accepted_at\n    canceled_at\n    rejected_at\n    created_at\n    updated_at\n    organization_id\n    organization {\n        id\n        name\n        logo_picture_file {\n            public_url\n        }\n    }\n    created_by_user_id\n    created_by_user {\n        id\n        first_name\n        last_name\n        email\n        profile_picture_file {\n            public_url\n        }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganization ($organizationId: String!) {\n    userOrganization(organization_id: $organizationId) {\n      ...OrganizationFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganization ($organizationId: String!) {\n    userOrganization(organization_id: $organizationId) {\n      ...OrganizationFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationBaseSettings(\n    $organizationId: String!\n  ) {\n    userOrganization(\n      organization_id: $organizationId\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationBaseSettings(\n    $organizationId: String!\n  ) {\n    userOrganization(\n      organization_id: $organizationId\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCreate($data: UserOrganizationCreateSchema!){\n    userOrganizationCreate(data: $data) {\n      id\n      email\n      name\n      phone_number\n      primary_contact_name\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCreate($data: UserOrganizationCreateSchema!){\n    userOrganizationCreate(data: $data) {\n      id\n      email\n      name\n      phone_number\n      primary_contact_name\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCollaborators(\n    $organizationId: String!\n  ) {\n    userOrganizationCollaborators(\n      organization_id: $organizationId\n    ) {\n      ...OrganizationUserFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCollaborators(\n    $organizationId: String!\n  ) {\n    userOrganizationCollaborators(\n      organization_id: $organizationId\n    ) {\n      ...OrganizationUserFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInviteCollaboratorCreate($data: UserOrganizationInviteCollaboratorCreateSchema!, $organizationId: String!) {\n    userOrganizationInviteCollaboratorCreate(data: $data, organization_id: $organizationId) {\n      expires_at\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInviteCollaboratorCreate($data: UserOrganizationInviteCollaboratorCreateSchema!, $organizationId: String!) {\n    userOrganizationInviteCollaboratorCreate(data: $data, organization_id: $organizationId) {\n      expires_at\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInviteCollaboratorCancel($organizationId: String!, $organizationInviteId: String!) {\n    userOrganizationInviteCollaboratorCancel(organization_id: $organizationId, organization_invite_id: $organizationInviteId) {\n      ...OrganizationInviteFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInviteCollaboratorCancel($organizationId: String!, $organizationInviteId: String!) {\n    userOrganizationInviteCollaboratorCancel(organization_id: $organizationId, organization_invite_id: $organizationInviteId) {\n      ...OrganizationInviteFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInviteCollaboratorResend($organizationId: String!, $organizationInviteId: String!) {\n    userOrganizationInviteCollaboratorResend(organization_id: $organizationId, organization_invite_id: $organizationInviteId) {\n      ...OrganizationInviteFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInviteCollaboratorResend($organizationId: String!, $organizationInviteId: String!) {\n    userOrganizationInviteCollaboratorResend(organization_id: $organizationId, organization_invite_id: $organizationInviteId) {\n      ...OrganizationInviteFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationInviteCollaborators(\n    $organizationId: String!,\n\n    $accepted: Boolean,\n    $canceled: Boolean,\n    $expired: Boolean,\n    $rejected: Boolean,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInviteCollaborators(\n      organization_id: $organizationId,\n\n      accepted: $accepted,\n      canceled: $canceled,\n      expired: $expired,\n      rejected: $rejected,\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationInviteFragment\n        }\n      }\n      pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationInviteCollaborators(\n    $organizationId: String!,\n\n    $accepted: Boolean,\n    $canceled: Boolean,\n    $expired: Boolean,\n    $rejected: Boolean,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInviteCollaborators(\n      organization_id: $organizationId,\n\n      accepted: $accepted,\n      canceled: $canceled,\n      expired: $expired,\n      rejected: $rejected,\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationInviteFragment\n        }\n      }\n      pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCollaboratorUpdate($data: UserOrganizationCollaboratorUpdateSchema!, $organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorUpdate(data: $data, organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      role\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCollaboratorUpdate($data: UserOrganizationCollaboratorUpdateSchema!, $organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorUpdate(data: $data, organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      role\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCollaboratorDelete($organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorDelete(organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCollaboratorDelete($organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorDelete(organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationUpdate(\n    $organizationId: String!\n    $data: UserOrganizationUpdateSchema!\n  ) {\n    userOrganizationUpdate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationUpdate(\n    $organizationId: String!\n    $data: UserOrganizationUpdateSchema!\n  ) {\n    userOrganizationUpdate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationLogoPictureRemove($organizationId: String!) {\n    userOrganizationLogoPictureRemove(organization_id: $organizationId) {\n      logo_picture_file {\n        public_url\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationLogoPictureRemove($organizationId: String!) {\n    userOrganizationLogoPictureRemove(organization_id: $organizationId) {\n      logo_picture_file {\n        public_url\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationSendGenericInviteMail($organizationId: String!, $email: String!) {\n    userOrganizationSendGenericInviteMail(organization_id: $organizationId, email: $email)\n  }\n"): (typeof documents)["\n  mutation UserOrganizationSendGenericInviteMail($organizationId: String!, $email: String!) {\n    userOrganizationSendGenericInviteMail(organization_id: $organizationId, email: $email)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationEmailVerifyOrChangeStart($organizationId: String!, $data: UserOrganizationEmailVerifyOrChangeStartSchema!) {\n    userOrganizationEmailVerifyOrChangeStart(organization_id: $organizationId, data: $data)\n  }\n"): (typeof documents)["\n  mutation UserOrganizationEmailVerifyOrChangeStart($organizationId: String!, $data: UserOrganizationEmailVerifyOrChangeStartSchema!) {\n    userOrganizationEmailVerifyOrChangeStart(organization_id: $organizationId, data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationEmailVerifyOrChangeFinish($organizationId: String!, $data: UserOrganizationEmailVerifyOrChangeFinishSchema!) {\n    userOrganizationEmailVerifyOrChangeFinish(organization_id: $organizationId, data: $data) {\n      ...OrganizationFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationEmailVerifyOrChangeFinish($organizationId: String!, $data: UserOrganizationEmailVerifyOrChangeFinishSchema!) {\n    userOrganizationEmailVerifyOrChangeFinish(organization_id: $organizationId, data: $data) {\n      ...OrganizationFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationProjectChangeFragment on OrganizationProjectChange {\n    id\n\n    organization_project_change_request_id\n    previous_budget_amount\n    previous_ends_at\n    previous_name\n    previous_starts_at\n\n    created_at\n    updated_at\n  }\n"): (typeof documents)["\n  fragment OrganizationProjectChangeFragment on OrganizationProjectChange {\n    id\n\n    organization_project_change_request_id\n    previous_budget_amount\n    previous_ends_at\n    previous_name\n    previous_starts_at\n\n    created_at\n    updated_at\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationProjectChangeRequestFragment on OrganizationProjectChangeRequest {\n    id\n\n    accepted_at\n    budget_amount\n    canceled_at\n    contract_url\n    created_by_user_id\n    created_by_user_name\n    created_side\n    ends_at\n    expires_at\n    finished_by_user_id\n    finished_by_user_name\n    finished_side\n    name\n    published_at\n    rejected_at\n    sequence_number\n    starts_at\n    status\n    organization_project_id\n\n    organization_project_change {\n      ...OrganizationProjectChangeFragment\n    }\n\n    created_at\n    updated_at\n  }\n"): (typeof documents)["\n  fragment OrganizationProjectChangeRequestFragment on OrganizationProjectChangeRequest {\n    id\n\n    accepted_at\n    budget_amount\n    canceled_at\n    contract_url\n    created_by_user_id\n    created_by_user_name\n    created_side\n    ends_at\n    expires_at\n    finished_by_user_id\n    finished_by_user_name\n    finished_side\n    name\n    published_at\n    rejected_at\n    sequence_number\n    starts_at\n    status\n    organization_project_id\n\n    organization_project_change {\n      ...OrganizationProjectChangeFragment\n    }\n\n    created_at\n    updated_at\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationProjectFragment on OrganizationProject {\n    id\n\n    budget_amount\n    budget_currency_code\n    canceled_at\n    completed_at\n    contract_url\n    description\n    ends_at\n    name\n    starts_at\n    status\n\n    organization_id\n    organization {\n      name\n    }\n\n    organization_customer_id\n    organization_customer {\n      name\n    }\n\n    created_at\n    updated_at\n  }\n"): (typeof documents)["\n  fragment OrganizationProjectFragment on OrganizationProject {\n    id\n\n    budget_amount\n    budget_currency_code\n    canceled_at\n    completed_at\n    contract_url\n    description\n    ends_at\n    name\n    starts_at\n    status\n\n    organization_id\n    organization {\n      name\n    }\n\n    organization_customer_id\n    organization_customer {\n      name\n    }\n\n    created_at\n    updated_at\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationProjects(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n\n    $name: String,\n\n    $started: Boolean,\n    $ended: Boolean,\n    $canceled: Boolean,\n    $completed: Boolean,\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationProjects(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationProjects(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n\n    $name: String,\n\n    $started: Boolean,\n    $ended: Boolean,\n    $canceled: Boolean,\n    $completed: Boolean,\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationProjects(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationProject(\n    $organizationId: String!,\n    $organizationProjectId: String!,\n  ) {\n    userOrganizationProject(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationProject(\n    $organizationId: String!,\n    $organizationProjectId: String!,\n  ) {\n    userOrganizationProject(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationProjectCreate(\n    $organizationId: String!\n    $data: UserOrganizationProjectCreateSchema!,\n  ) {\n    userOrganizationProjectCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationProjectCreate(\n    $organizationId: String!\n    $data: UserOrganizationProjectCreateSchema!,\n  ) {\n    userOrganizationProjectCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationProjectUpdate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $data: UserOrganizationProjectUpdateSchema!,\n  ) {\n    userOrganizationProjectUpdate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationProjectUpdate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $data: UserOrganizationProjectUpdateSchema!,\n  ) {\n    userOrganizationProjectUpdate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationProjectDelete(\n    $organizationId: String!,\n    $organizationProjectId: String!\n  ) {\n    userOrganizationProjectDelete(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationProjectDelete(\n    $organizationId: String!,\n    $organizationProjectId: String!\n  ) {\n    userOrganizationProjectDelete(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationProjectChangeRequestCreate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userOrganizationProjectChangeRequestCreate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationProjectChangeRequestCreate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userOrganizationProjectChangeRequestCreate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationProjectChangeRequestUpdate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userOrganizationProjectChangeRequestUpdate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationProjectChangeRequestUpdate(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userOrganizationProjectChangeRequestUpdate(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationProjectChangeRequestCancel(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestCancel(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationProjectChangeRequestCancel(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestCancel(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationProjectChangeRequestAccept(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestAccept(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationProjectChangeRequestAccept(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestAccept(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationProjectChangeRequestReject(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestReject(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationProjectChangeRequestReject(\n    $organizationId: String!,\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userOrganizationProjectChangeRequestReject(\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserCustomerOrganizationProjects(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n\n    $name: String,\n\n    $started: Boolean,\n    $ended: Boolean,\n    $canceled: Boolean,\n    $completed: Boolean,\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationProjects(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserCustomerOrganizationProjects(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n\n    $name: String,\n\n    $started: Boolean,\n    $ended: Boolean,\n    $canceled: Boolean,\n    $completed: Boolean,\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationProjects(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserCustomerOrganizationProject(\n    $organizationId: String!,\n    $organizationVendorId: String!\n    $organizationProjectId: String!,\n  ) {\n    userCustomerOrganizationProject(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"): (typeof documents)["\n  query UserCustomerOrganizationProject(\n    $organizationId: String!,\n    $organizationVendorId: String!\n    $organizationProjectId: String!,\n  ) {\n    userCustomerOrganizationProject(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserCustomerOrganizationProjectChangeRequestCreate(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserCustomerOrganizationProjectChangeRequestCreate(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserCustomerOrganizationProjectChangeRequestUpdate(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserCustomerOrganizationProjectChangeRequestUpdate(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n    $data: OrganizationProjectChangeRequestUpsertSchema!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      data: $data\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserCustomerOrganizationProjectChangeRequestCancel(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestCancel(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserCustomerOrganizationProjectChangeRequestCancel(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestCancel(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserCustomerOrganizationProjectChangeRequestAccept(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestAccept(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserCustomerOrganizationProjectChangeRequestAccept(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestAccept(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserCustomerOrganizationProjectChangeRequestReject(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestReject(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserCustomerOrganizationProjectChangeRequestReject(\n    $organizationId: String!,\n    $organizationVendorId: String!,\n    $organizationProjectId: String!,\n    $organizationProjectChangeRequestId: String!,\n  ) {\n    userCustomerOrganizationProjectChangeRequestReject(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      organization_project_id: $organizationProjectId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UnconnectedCustomerOrganizationProjects(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $name: String\n\n    $started: Boolean\n    $ended: Boolean\n    $canceled: Boolean\n    $completed: Boolean\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationProjects(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query UnconnectedCustomerOrganizationProjects(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $name: String\n\n    $started: Boolean\n    $ended: Boolean\n    $canceled: Boolean\n    $completed: Boolean\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $skip: Int\n    $take: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationProjects(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      name: $name\n\n      started: $started\n      ended: $ended\n      canceled: $canceled\n      completed: $completed\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationProjectFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UnconnectedCustomerOrganizationProject(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n  ) {\n    unconnectedCustomerOrganizationProject(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"): (typeof documents)["\n  query UnconnectedCustomerOrganizationProject(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n  ) {\n    unconnectedCustomerOrganizationProject(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_id: $organizationId\n      organization_project_id: $organizationProjectId\n    ) {\n      ...OrganizationProjectFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestActionRequestToken(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestActionRequestToken(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n    )\n  }\n"): (typeof documents)["\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestActionRequestToken(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestActionRequestToken(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestAccept(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n    $verificationCode: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestAccept(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n      verification_code: $verificationCode\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestAccept(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n    $verificationCode: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestAccept(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n      verification_code: $verificationCode\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestReject(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n    $verificationCode: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestReject(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n      verification_code: $verificationCode\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UnconnectedCustomerOrganizationProjectChangeRequestReject(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationId: String\n    $organizationProjectId: String!\n    $organizationProjectChangeRequestId: String!\n    $verificationCode: String!\n  ) {\n    unconnectedCustomerOrganizationProjectChangeRequestReject(\n      email: $email\n      organization_id: $organizationId\n      organization_project_change_request_id: $organizationProjectChangeRequestId\n      organization_project_id: $organizationProjectId\n      token: $token\n      unique_code: $uniqueCode\n      verification_code: $verificationCode\n    ) {\n      ...OrganizationProjectChangeRequestFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationReminderSettingFragment on OrganizationReminderSetting {\n    id\n    due_date_mode\n    days_amount\n    repeat_mode\n    repeat_value\n    selected_hour\n    created_at\n    updated_at\n    organization_id\n    organization_customer_id\n    organization_project_id\n    organization_invoice_id\n  }\n"): (typeof documents)["\n  fragment OrganizationReminderSettingFragment on OrganizationReminderSetting {\n    id\n    due_date_mode\n    days_amount\n    repeat_mode\n    repeat_value\n    selected_hour\n    created_at\n    updated_at\n    organization_id\n    organization_customer_id\n    organization_project_id\n    organization_invoice_id\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationReminderSettings(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n    $organizationProjectId: String,\n    $organizationInvoiceId: String,\n\n    $dueDateMode: REMINDER_DUE_DATE_MODE,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationReminderSettings(\n      organization_id: $organizationId\n\n      organization_customer_id: $organizationCustomerId\n      organization_project_id: $organizationProjectId\n      organization_invoice_id: $organizationInvoiceId\n\n      due_date_mode: $dueDateMode\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationReminderSettingFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n"): (typeof documents)["\n  query UserOrganizationReminderSettings(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n    $organizationProjectId: String,\n    $organizationInvoiceId: String,\n\n    $dueDateMode: REMINDER_DUE_DATE_MODE,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationReminderSettings(\n      organization_id: $organizationId\n\n      organization_customer_id: $organizationCustomerId\n      organization_project_id: $organizationProjectId\n      organization_invoice_id: $organizationInvoiceId\n\n      due_date_mode: $dueDateMode\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationReminderSettingFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationReminderSetting($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSetting(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationReminderSetting($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSetting(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationReminderSettingCreate($organizationId: String!, $data: UserOrganizationReminderSettingSchema!) {\n    userOrganizationReminderSettingCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationReminderSettingCreate($organizationId: String!, $data: UserOrganizationReminderSettingSchema!) {\n    userOrganizationReminderSettingCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationReminderSettingUpdate(\n    $organizationId: String!,\n    $organizationReminderSettingId: String!,\n    $data: UserOrganizationReminderSettingSchema!\n  ) {\n    userOrganizationReminderSettingUpdate(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationReminderSettingUpdate(\n    $organizationId: String!,\n    $organizationReminderSettingId: String!,\n    $data: UserOrganizationReminderSettingSchema!\n  ) {\n    userOrganizationReminderSettingUpdate(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationReminderSettingDelete($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSettingDelete(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationReminderSettingDelete($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSettingDelete(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationReminderSettingGlobalUpdate(\n    $organizationId: String!\n    $settingSendInvoiceDueReminders: Boolean!\n    $settingSendInvoiceOverdueReminders: Boolean!\n    $settingAllowInvoiceDueSnoozeReminders: Boolean!\n    $settingAllowInvoiceOverdueSnoozeReminders: Boolean!\n  ) {\n    userOrganizationReminderSettingGlobalUpdate(\n      organization_id: $organizationId\n      setting_send_invoice_due_reminders: $settingSendInvoiceDueReminders\n      setting_send_invoice_overdue_reminders: $settingSendInvoiceOverdueReminders\n      setting_allow_invoice_due_snooze_reminders: $settingAllowInvoiceDueSnoozeReminders\n      setting_allow_invoice_overdue_snooze_reminders: $settingAllowInvoiceOverdueSnoozeReminders\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationReminderSettingGlobalUpdate(\n    $organizationId: String!\n    $settingSendInvoiceDueReminders: Boolean!\n    $settingSendInvoiceOverdueReminders: Boolean!\n    $settingAllowInvoiceDueSnoozeReminders: Boolean!\n    $settingAllowInvoiceOverdueSnoozeReminders: Boolean!\n  ) {\n    userOrganizationReminderSettingGlobalUpdate(\n      organization_id: $organizationId\n      setting_send_invoice_due_reminders: $settingSendInvoiceDueReminders\n      setting_send_invoice_overdue_reminders: $settingSendInvoiceOverdueReminders\n      setting_allow_invoice_due_snooze_reminders: $settingAllowInvoiceDueSnoozeReminders\n      setting_allow_invoice_overdue_snooze_reminders: $settingAllowInvoiceOverdueSnoozeReminders\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerStatementInvoiceLineFragment on OrganizationCustomerStatementInvoiceLine {\n    id\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    organization_customer_id\n    organization_invoice_id\n    paid_amount\n    running_balance\n    invoice_status\n    type\n    updated_at\n\n    organization_invoice {\n      provider\n      provider_code\n\n      payment_options {\n        method\n        url\n        payload\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerStatementInvoiceLineFragment on OrganizationCustomerStatementInvoiceLine {\n    id\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    organization_customer_id\n    organization_invoice_id\n    paid_amount\n    running_balance\n    invoice_status\n    type\n    updated_at\n\n    organization_invoice {\n      provider\n      provider_code\n\n      payment_options {\n        method\n        url\n        payload\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerStatementTransactionLineFragment on OrganizationCustomerStatementTransactionLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_transaction_id\n    paid_amount\n    running_balance\n    transaction_status\n    type\n    updated_at\n\n    organization_invoice_transaction {\n      provider\n      provider_code\n\n      links {\n        id\n        amount\n        organization_invoice_id\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerStatementTransactionLineFragment on OrganizationCustomerStatementTransactionLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_transaction_id\n    paid_amount\n    running_balance\n    transaction_status\n    type\n    updated_at\n\n    organization_invoice_transaction {\n      provider\n      provider_code\n\n      links {\n        id\n        amount\n        organization_invoice_id\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerStatementFragment on OrganizationCustomerStatement {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      name\n      email\n    }\n\n    customer_organization_id\n    customer_organization {\n      name\n      email\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ... on OrganizationCustomerStatementInvoiceLine {\n            ...OrganizationCustomerStatementInvoiceLineFragment\n          }\n          ... on OrganizationCustomerStatementTransactionLine {\n            ...OrganizationCustomerStatementTransactionLineFragment\n          }\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    latest_acct_provider_one_to_thirty_days_due_amount\n    latest_acct_provider_thirty_one_to_sixty_days_due_amount\n    latest_acct_provider_sixty_plus_days_due_amount\n\n    total_open_invoice_count\n    total_overdue_invoice_count\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerStatementFragment on OrganizationCustomerStatement {\n    vendor_organization_id\n    vendor_organization {\n      name\n      email\n      phone_number\n      address_line_1\n      address_number\n      address_line_2\n      address_city\n      address_state\n      address_zip_code\n      address_country_code_iso_3\n      address_lat\n      address_lng\n      logo_picture_file {\n        public_url\n      }\n    }\n\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      name\n      email\n    }\n\n    customer_organization_id\n    customer_organization {\n      name\n      email\n    }\n\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ... on OrganizationCustomerStatementInvoiceLine {\n            ...OrganizationCustomerStatementInvoiceLineFragment\n          }\n          ... on OrganizationCustomerStatementTransactionLine {\n            ...OrganizationCustomerStatementTransactionLineFragment\n          }\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n    due_start_date\n    due_end_date\n    currency\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    latest_acct_provider_one_to_thirty_days_due_amount\n    latest_acct_provider_thirty_one_to_sixty_days_due_amount\n    latest_acct_provider_sixty_plus_days_due_amount\n\n    total_open_invoice_count\n    total_overdue_invoice_count\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserCustomerOrganizationStatement(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationStatement(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n"): (typeof documents)["\n  query UserCustomerOrganizationStatement(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationStatement(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserCustomerOrganizationStatementLineGetPDF(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userCustomerOrganizationStatementLineGetPDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserCustomerOrganizationStatementLineGetPDF(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userCustomerOrganizationStatementLineGetPDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnconnectedCustomerOrganizationStatementRequestToken(\n    $uniqueCode: String!\n    $email: String!\n  ) {\n    unconnectedCustomerOrganizationStatementRequestToken(\n      unique_code: $uniqueCode\n      email: $email\n    )\n}\n"): (typeof documents)["\n  mutation UnconnectedCustomerOrganizationStatementRequestToken(\n    $uniqueCode: String!\n    $email: String!\n  ) {\n    unconnectedCustomerOrganizationStatementRequestToken(\n      unique_code: $uniqueCode\n      email: $email\n    )\n}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UnconnectedCustomerOrganizationStatement(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationStatement(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n"): (typeof documents)["\n  query UnconnectedCustomerOrganizationStatement(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n    $type: STATEMENT_LINE_TYPE\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedCustomerOrganizationStatement(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      type: $type\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnconnectedCustomerOrganizationStatementLineGetPDF(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    unconnectedCustomerOrganizationStatementLineGetPDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UnconnectedCustomerOrganizationStatementLineGetPDF(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    unconnectedCustomerOrganizationStatementLineGetPDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserCustomerOrganizationStatementLine(\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String!,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $organizationVendorId: String!\n  ) {\n    userCustomerOrganizationStatementLine(\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserCustomerOrganizationStatementLine(\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String!,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $organizationVendorId: String!\n  ) {\n    userCustomerOrganizationStatementLine(\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UnconnectedCustomerOrganizationStatementLine(\n    $email: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $token: String!,\n    $uniqueCode: String!\n  ) {\n    unconnectedCustomerOrganizationStatementLine(\n      email: $email,\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      token: $token,\n      unique_code: $uniqueCode\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"): (typeof documents)["\n  query UnconnectedCustomerOrganizationStatementLine(\n    $email: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $token: String!,\n    $uniqueCode: String!\n  ) {\n    unconnectedCustomerOrganizationStatementLine(\n      email: $email,\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      token: $token,\n      unique_code: $uniqueCode\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserCustomerOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n"): (typeof documents)["\n  query UserCustomerOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n\n    $latestAcctProviderStatus: INVOICE_STATUS\n    $latestAcctProviderIsOverdue: Boolean\n\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n\n      status: $status\n      is_overdue: $isOverdue\n\n      latest_acct_provider_status: $latestAcctProviderStatus\n      latest_acct_provider_is_overdue: $latestAcctProviderIsOverdue\n\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationInvoiceSummaryFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserCustomerOrganizationInvoiceGetPDF(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userCustomerOrganizationInvoiceGetPDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserCustomerOrganizationInvoiceGetPDF(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userCustomerOrganizationInvoiceGetPDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserCustomerOrganizationSynchronize($organizationId: String!, $organizationVendorId: String!) {\n    userCustomerOrganizationSynchronize(organization_id: $organizationId, organization_vendor_id: $organizationVendorId)\n  }\n"): (typeof documents)["\n  mutation UserCustomerOrganizationSynchronize($organizationId: String!, $organizationVendorId: String!) {\n    userCustomerOrganizationSynchronize(organization_id: $organizationId, organization_vendor_id: $organizationVendorId)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnconnectedCustomerSynchronize($uniqueCode: String!, $email: String!, $token: String!) {\n    unconnectedCustomerSynchronize(unique_code: $uniqueCode, email: $email,token: $token)\n  }\n"): (typeof documents)["\n  mutation UnconnectedCustomerSynchronize($uniqueCode: String!, $email: String!, $token: String!) {\n    unconnectedCustomerSynchronize(unique_code: $uniqueCode, email: $email,token: $token)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationPaymentMethodFragment on OrganizationPaymentMethod {\n    id\n    payment_method\n    payment_provider\n    bound_mode\n    bound_id\n    is_enabled\n    is_default\n    billing_first_name\n    billing_last_name\n    billing_email\n    billing_phone_number\n    billing_address_line_1\n    billing_address_number\n    billing_address_line_2\n    billing_address_city\n    billing_address_state\n    billing_address_zip_code\n    billing_address_country_code_iso_3\n    created_at\n    updated_at\n    payment_method_info {\n      ... on OrganizationPaymentMethodCreditCardInfo {\n        type\n        card_number_masked\n        card_brand\n      }\n      ... on OrganizationPaymentMethodGenericInfo {\n        type\n      }\n    }\n    organization_id\n  }\n"): (typeof documents)["\n  fragment OrganizationPaymentMethodFragment on OrganizationPaymentMethod {\n    id\n    payment_method\n    payment_provider\n    bound_mode\n    bound_id\n    is_enabled\n    is_default\n    billing_first_name\n    billing_last_name\n    billing_email\n    billing_phone_number\n    billing_address_line_1\n    billing_address_number\n    billing_address_line_2\n    billing_address_city\n    billing_address_state\n    billing_address_zip_code\n    billing_address_country_code_iso_3\n    created_at\n    updated_at\n    payment_method_info {\n      ... on OrganizationPaymentMethodCreditCardInfo {\n        type\n        card_number_masked\n        card_brand\n      }\n      ... on OrganizationPaymentMethodGenericInfo {\n        type\n      }\n    }\n    organization_id\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationSubscriptionTransactionFragment on OrganizationSubscriptionTransaction {\n    id\n    transaction_provider\n    provider_transaction_code\n    transaction_code\n    amount\n    currency\n    started_at\n    succeeded_at\n    failed_at\n    reverted_at\n    transaction_date\n    due_date\n    procedure\n    subscription_item_ids\n    period_ends_at\n    period_sequence\n    period_starts_at\n    created_at\n    updated_at\n    status\n    organization_subscription_id\n    organization_payment_method_id\n  }\n"): (typeof documents)["\n  fragment OrganizationSubscriptionTransactionFragment on OrganizationSubscriptionTransaction {\n    id\n    transaction_provider\n    provider_transaction_code\n    transaction_code\n    amount\n    currency\n    started_at\n    succeeded_at\n    failed_at\n    reverted_at\n    transaction_date\n    due_date\n    procedure\n    subscription_item_ids\n    period_ends_at\n    period_sequence\n    period_starts_at\n    created_at\n    updated_at\n    status\n    organization_subscription_id\n    organization_payment_method_id\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCouponFragment on OrganizationCoupon {\n    id\n    campaign\n    category\n    subdivision\n    is_activation_unlimited\n    activated_at\n    expires_at\n    created_at\n    updated_at\n    status\n    organization_id\n    category_description\n    subdivision_description\n  }\n"): (typeof documents)["\n  fragment OrganizationCouponFragment on OrganizationCoupon {\n    id\n    campaign\n    category\n    subdivision\n    is_activation_unlimited\n    activated_at\n    expires_at\n    created_at\n    updated_at\n    status\n    organization_id\n    category_description\n    subdivision_description\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationSubscriptionItemFragment on OrganizationSubscriptionItem {\n    id\n    quantity\n    unit_price\n    started_at\n    canceled_at\n    item_type\n    created_at\n    updated_at\n    status\n    category\n    classification\n    organization_subscription_id\n  }\n"): (typeof documents)["\n  fragment OrganizationSubscriptionItemFragment on OrganizationSubscriptionItem {\n    id\n    quantity\n    unit_price\n    started_at\n    canceled_at\n    item_type\n    created_at\n    updated_at\n    status\n    category\n    classification\n    organization_subscription_id\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationSubscriptionFragment on OrganizationSubscription {\n    id\n    price_total_amount\n    price_currency\n    price_tier\n    current_period_ends_at\n    current_period_starts_at\n    canceled_at\n    renew_interval\n    next_payment_at\n    provider\n    provider_status\n    provider_plan_code\n    provider_subscription_code\n    provider_last_verified_at\n    has_outdated_price\n    created_at\n    updated_at\n    status\n    payment_status\n\n    organization_id\n    organization_coupon_id\n\n    organization_payment_method_id\n    organization_payment_method {\n      ...OrganizationPaymentMethodFragment\n    }\n\n    items {\n      ...OrganizationSubscriptionItemFragment\n    }\n\n    transactions {\n      ...OrganizationSubscriptionTransactionFragment\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationSubscriptionFragment on OrganizationSubscription {\n    id\n    price_total_amount\n    price_currency\n    price_tier\n    current_period_ends_at\n    current_period_starts_at\n    canceled_at\n    renew_interval\n    next_payment_at\n    provider\n    provider_status\n    provider_plan_code\n    provider_subscription_code\n    provider_last_verified_at\n    has_outdated_price\n    created_at\n    updated_at\n    status\n    payment_status\n\n    organization_id\n    organization_coupon_id\n\n    organization_payment_method_id\n    organization_payment_method {\n      ...OrganizationPaymentMethodFragment\n    }\n\n    items {\n      ...OrganizationSubscriptionItemFragment\n    }\n\n    transactions {\n      ...OrganizationSubscriptionTransactionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationSubscriptionDefaultPricingFragment on OrganizationSubscriptionDefaultPricing {\n    organization_id\n    organization_coupon_id\n    organization_coupon {\n      ...OrganizationCouponFragment\n    }\n\n    price_tier\n    price_currency\n\n    options {\n      renew_interval\n      options {\n        base_item {\n          item_type\n          category\n          additional_organization_seats\n\n          original_unit_price\n          unit_price\n\n          is_purchase_available\n\n          current_item_pending_purchase_subscription {\n            ...OrganizationSubscriptionFragment\n          }\n\n          current_item_active_until\n          current_item_subscription {\n            ...OrganizationSubscriptionFragment\n          }\n        }\n        available_addon_items {\n          item_type\n          is_purchase_available\n          original_unit_price\n          unit_price\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationSubscriptionDefaultPricingFragment on OrganizationSubscriptionDefaultPricing {\n    organization_id\n    organization_coupon_id\n    organization_coupon {\n      ...OrganizationCouponFragment\n    }\n\n    price_tier\n    price_currency\n\n    options {\n      renew_interval\n      options {\n        base_item {\n          item_type\n          category\n          additional_organization_seats\n\n          original_unit_price\n          unit_price\n\n          is_purchase_available\n\n          current_item_pending_purchase_subscription {\n            ...OrganizationSubscriptionFragment\n          }\n\n          current_item_active_until\n          current_item_subscription {\n            ...OrganizationSubscriptionFragment\n          }\n        }\n        available_addon_items {\n          item_type\n          is_purchase_available\n          original_unit_price\n          unit_price\n        }\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationSubscriptionCalculatedPricingFragment on OrganizationSubscriptionCalculatedPricing {\n    organization_id\n    organization_coupon_id\n    organization_coupon {\n      ...OrganizationCouponFragment\n    }\n    price_tier\n    price_currency\n    renew_interval\n    selected_base_item {\n      item_type\n      original_unit_price\n      unit_price\n      category\n    }\n    selected_addon_items {\n      item_type\n      quantity\n      original_unit_price\n      unit_price\n    }\n    original_price_total_amount\n    price_total_amount\n    provider\n  }\n"): (typeof documents)["\n  fragment OrganizationSubscriptionCalculatedPricingFragment on OrganizationSubscriptionCalculatedPricing {\n    organization_id\n    organization_coupon_id\n    organization_coupon {\n      ...OrganizationCouponFragment\n    }\n    price_tier\n    price_currency\n    renew_interval\n    selected_base_item {\n      item_type\n      original_unit_price\n      unit_price\n      category\n    }\n    selected_addon_items {\n      item_type\n      quantity\n      original_unit_price\n      unit_price\n    }\n    original_price_total_amount\n    price_total_amount\n    provider\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationSubscriptions(\n    $organizationId: String!\n    $organizationCouponId: String\n    $organizationPaymentMethodId: String\n\n    $provider: ORGANIZATION_SUBSCRIPTION_PROVIDER\n    $providerStatus: ORGANIZATION_SUBSCRIPTION_PROVIDER_STATUS\n    $providerPlanCode: String\n    $providerSubscriptionCode: String\n\n    $containsItem: ORGANIZATION_SUBSCRIPTION_ITEM\n\n    $renewInterval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL\n\n    $priceTier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER\n\n    $status: ORGANIZATION_SUBSCRIPTION_STATUS\n\n    $started: Boolean\n    $canceled: Boolean\n    $expired: Boolean\n\n    $hasOutdatedPrice: Boolean\n    $hasError: Boolean\n\n    $skip: Int\n    $take: Int\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationSubscriptions(\n      organization_id: $organizationId\n      organization_coupon_id: $organizationCouponId\n      organization_payment_method_id: $organizationPaymentMethodId\n\n      provider: $provider\n      provider_status: $providerStatus\n      provider_plan_code: $providerPlanCode\n      provider_subscription_code: $providerSubscriptionCode\n\n      contains_item: $containsItem\n\n      renew_interval: $renewInterval\n\n      price_tier: $priceTier\n\n      status: $status\n\n      started: $started\n      canceled: $canceled\n      expired: $expired\n\n      has_outdated_price: $hasOutdatedPrice\n      has_error: $hasError\n\n      skip: $skip\n      take: $take\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      sorting: $sorting\n    ) {\n      edges {\n        node {\n          ...OrganizationSubscriptionFragment\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      totalCount\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationSubscriptions(\n    $organizationId: String!\n    $organizationCouponId: String\n    $organizationPaymentMethodId: String\n\n    $provider: ORGANIZATION_SUBSCRIPTION_PROVIDER\n    $providerStatus: ORGANIZATION_SUBSCRIPTION_PROVIDER_STATUS\n    $providerPlanCode: String\n    $providerSubscriptionCode: String\n\n    $containsItem: ORGANIZATION_SUBSCRIPTION_ITEM\n\n    $renewInterval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL\n\n    $priceTier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER\n\n    $status: ORGANIZATION_SUBSCRIPTION_STATUS\n\n    $started: Boolean\n    $canceled: Boolean\n    $expired: Boolean\n\n    $hasOutdatedPrice: Boolean\n    $hasError: Boolean\n\n    $skip: Int\n    $take: Int\n\n    $after: ConnectionCursor\n    $first: Int\n\n    $before: ConnectionCursor\n    $last: Int\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationSubscriptions(\n      organization_id: $organizationId\n      organization_coupon_id: $organizationCouponId\n      organization_payment_method_id: $organizationPaymentMethodId\n\n      provider: $provider\n      provider_status: $providerStatus\n      provider_plan_code: $providerPlanCode\n      provider_subscription_code: $providerSubscriptionCode\n\n      contains_item: $containsItem\n\n      renew_interval: $renewInterval\n\n      price_tier: $priceTier\n\n      status: $status\n\n      started: $started\n      canceled: $canceled\n      expired: $expired\n\n      has_outdated_price: $hasOutdatedPrice\n      has_error: $hasError\n\n      skip: $skip\n      take: $take\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      sorting: $sorting\n    ) {\n      edges {\n        node {\n          ...OrganizationSubscriptionFragment\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      totalCount\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationSubscription(\n    $organizationId: String!\n    $subscriptionId: String!\n  ) {\n    userOrganizationSubscription(\n      organization_id: $organizationId\n      organization_subscription_id: $subscriptionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationSubscription(\n    $organizationId: String!\n    $subscriptionId: String!\n  ) {\n    userOrganizationSubscription(\n      organization_id: $organizationId\n      organization_subscription_id: $subscriptionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationSubscriptionDefaultPricingSetup($organizationId: String!, $organizationCouponId: String) {\n    userOrganizationSubscriptionDefaultPricingSetup(\n      organization_id: $organizationId\n      organization_coupon_id: $organizationCouponId\n    ) {\n      ...OrganizationSubscriptionDefaultPricingFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationSubscriptionDefaultPricingSetup($organizationId: String!, $organizationCouponId: String) {\n    userOrganizationSubscriptionDefaultPricingSetup(\n      organization_id: $organizationId\n      organization_coupon_id: $organizationCouponId\n    ) {\n      ...OrganizationSubscriptionDefaultPricingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationSubscriptionVerifyCoupon($organizationId: String!, $code: String!) {\n    userOrganizationSubscriptionVerifyCoupon(organization_id: $organizationId, code: $code) {\n      ...OrganizationCouponFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationSubscriptionVerifyCoupon($organizationId: String!, $code: String!) {\n    userOrganizationSubscriptionVerifyCoupon(organization_id: $organizationId, code: $code) {\n      ...OrganizationCouponFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationSubscriptionCalculatePricing($data: UserOrganizationSubscriptionCalculatePricingSchema!, $organizationId: String!) {\n    userOrganizationSubscriptionCalculatePricing(data: $data, organization_id: $organizationId) {\n      ...OrganizationSubscriptionCalculatedPricingFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationSubscriptionCalculatePricing($data: UserOrganizationSubscriptionCalculatePricingSchema!, $organizationId: String!) {\n    userOrganizationSubscriptionCalculatePricing(data: $data, organization_id: $organizationId) {\n      ...OrganizationSubscriptionCalculatedPricingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationSubscriptionGetPrePurchaseTransactionData(\n    $organizationId: String!\n  ) {\n    userOrganizationSubscriptionGetPrePurchaseTransactionData(\n      organization_id: $organizationId\n    ) {\n      ... on NuveiTransactionProviderPreTransactionData {\n        transaction_provider\n        environment\n        merchant_id\n        merchant_site_id\n      }\n\n      ... on AccruPayTransactionProviderPreTransactionData {\n        transaction_provider\n        environment\n        merchant_id\n        merchant_site_id\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationSubscriptionGetPrePurchaseTransactionData(\n    $organizationId: String!\n  ) {\n    userOrganizationSubscriptionGetPrePurchaseTransactionData(\n      organization_id: $organizationId\n    ) {\n      ... on NuveiTransactionProviderPreTransactionData {\n        transaction_provider\n        environment\n        merchant_id\n        merchant_site_id\n      }\n\n      ... on AccruPayTransactionProviderPreTransactionData {\n        transaction_provider\n        environment\n        merchant_id\n        merchant_site_id\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationSubscriptionStartPurchase(\n    $organizationId: String!\n    $data: UserOrganizationSubscriptionStartPurchaseSchema!\n  ) {\n    userOrganizationSubscriptionStartPurchase(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationSubscriptionTransactionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationSubscriptionStartPurchase(\n    $organizationId: String!\n    $data: UserOrganizationSubscriptionStartPurchaseSchema!\n  ) {\n    userOrganizationSubscriptionStartPurchase(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationSubscriptionTransactionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationSubscriptionCompletePurchase(\n    $organizationId: String!\n    $organizationSubscriptionId: String!\n    $organizationSubscriptionTransactionId: String!\n  ) {\n    userOrganizationSubscriptionCompletePurchase(\n      organization_id: $organizationId\n      organization_subscription_id: $organizationSubscriptionId\n      organization_subscription_transaction_id: $organizationSubscriptionTransactionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationSubscriptionCompletePurchase(\n    $organizationId: String!\n    $organizationSubscriptionId: String!\n    $organizationSubscriptionTransactionId: String!\n  ) {\n    userOrganizationSubscriptionCompletePurchase(\n      organization_id: $organizationId\n      organization_subscription_id: $organizationSubscriptionId\n      organization_subscription_transaction_id: $organizationSubscriptionTransactionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationSubscriptionCancel(\n    $organizationId: String!\n    $organizationSubscriptionId: String!\n  ) {\n    userOrganizationSubscriptionCancel(\n      organization_id: $organizationId\n      organization_subscription_id: $organizationSubscriptionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationSubscriptionCancel(\n    $organizationId: String!\n    $organizationSubscriptionId: String!\n  ) {\n    userOrganizationSubscriptionCancel(\n      organization_id: $organizationId\n      organization_subscription_id: $organizationSubscriptionId\n    ) {\n      ...OrganizationSubscriptionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInvoiceTransactionGetPDF(\n    $organizationId: String!\n    $organizationInvoiceTransactionId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userOrganizationInvoiceTransactionGetPDF(\n      organization_id: $organizationId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInvoiceTransactionGetPDF(\n    $organizationId: String!\n    $organizationInvoiceTransactionId: String!\n    $acctProvider: ACCT_PROVIDER\n  ) {\n    userOrganizationInvoiceTransactionGetPDF(\n      organization_id: $organizationId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment User on User {\n    id\n    email\n    organizations {\n      id\n      role\n      is_current_organization_user_seat_available\n      organization_id\n      organization {\n        name\n        email\n        subscription_level\n        subscription_data {\n          ...OrganizationSubscriptionDataFragment\n        }\n      }\n    }\n    first_name\n    last_name\n    language\n    phone_number\n    timezone\n    is_admin\n    updated_at\n    created_at\n    profile_picture_file {\n      public_url\n    }\n  }\n"): (typeof documents)["\n  fragment User on User {\n    id\n    email\n    organizations {\n      id\n      role\n      is_current_organization_user_seat_available\n      organization_id\n      organization {\n        name\n        email\n        subscription_level\n        subscription_data {\n          ...OrganizationSubscriptionDataFragment\n        }\n      }\n    }\n    first_name\n    last_name\n    language\n    phone_number\n    timezone\n    is_admin\n    updated_at\n    created_at\n    profile_picture_file {\n      public_url\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query User {\n    user {\n      ...User\n    }\n  }\n"): (typeof documents)["\n  query User {\n    user {\n      ...User\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserUpdateData($data: UserUpdateDataSchema!) {\n    userUpdateData(\n      data: $data\n    ) {\n      ...User\n    }\n  }\n"): (typeof documents)["\n  mutation UserUpdateData($data: UserUpdateDataSchema!) {\n    userUpdateData(\n      data: $data\n    ) {\n      ...User\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserEmailVerifyOrChangeStart($data: UserEmailVerifyOrChangeStartSchema!) {\n    userEmailVerifyOrChangeStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserEmailVerifyOrChangeStart($data: UserEmailVerifyOrChangeStartSchema!) {\n    userEmailVerifyOrChangeStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserEmailVerifyOrChangeFinish($data: UserEmailVerifyOrChangeFinishSchema!) {\n    userEmailVerifyOrChangeFinish(data: $data) {\n      email\n    }\n  }\n"): (typeof documents)["\n  mutation UserEmailVerifyOrChangeFinish($data: UserEmailVerifyOrChangeFinishSchema!) {\n    userEmailVerifyOrChangeFinish(data: $data) {\n      email\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPhoneNumberVerifyOrChangeStart($data: UserPhoneNumberVerifyOrChangeStartSchema!) {\n    userPhoneNumberVerifyOrChangeStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserPhoneNumberVerifyOrChangeStart($data: UserPhoneNumberVerifyOrChangeStartSchema!) {\n    userPhoneNumberVerifyOrChangeStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPhoneNumberVerifyOrChangeFinish($data: UserPhoneNumberVerifyOrChangeFinishSchema!) {\n    userPhoneNumberVerifyOrChangeFinish(data: $data) {\n      phone_number\n    }\n  }\n"): (typeof documents)["\n  mutation UserPhoneNumberVerifyOrChangeFinish($data: UserPhoneNumberVerifyOrChangeFinishSchema!) {\n    userPhoneNumberVerifyOrChangeFinish(data: $data) {\n      phone_number\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPasswordChangeStart($data: UserPasswordChangeStartSchema!) {\n    userPasswordChangeStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserPasswordChangeStart($data: UserPasswordChangeStartSchema!) {\n    userPasswordChangeStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPasswordChangeFinish($data: UserPasswordChangeFinishSchema!) {\n    userPasswordChangeFinish(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserPasswordChangeFinish($data: UserPasswordChangeFinishSchema!) {\n    userPasswordChangeFinish(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserProfilePictureRemove {\n    userProfilePictureRemove {\n        profile_picture_file_id\n    }\n  }\n"): (typeof documents)["\n  mutation UserProfilePictureRemove {\n    userProfilePictureRemove {\n        profile_picture_file_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserHandleLoginAttempt($email: String!) {\n    userHandleLoginAttempt(email: $email)\n  }\n"): (typeof documents)["\n  mutation UserHandleLoginAttempt($email: String!) {\n    userHandleLoginAttempt(email: $email)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationVendorFragment on OrganizationVendor {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    balance\n    overdue_amount\n  }\n"): (typeof documents)["\n  fragment OrganizationVendorFragment on OrganizationVendor {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    balance\n    overdue_amount\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationVendorBillSummaryFragment on OrganizationVendor {\n    bill_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              bill_date\n              due_date\n              vendor_email\n              created_at\n              updated_at\n              status\n              latest_acct_provider_status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n\n      total_open_bill_count\n      total_overdue_bill_count\n\n      total_amount\n      paid_amount\n      overdue_amount\n      balance\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationVendorBillSummaryFragment on OrganizationVendor {\n    bill_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              bill_date\n              due_date\n              vendor_email\n              created_at\n              updated_at\n              status\n              latest_acct_provider_status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n\n      total_open_bill_count\n      total_overdue_bill_count\n\n      total_amount\n      paid_amount\n      overdue_amount\n      balance\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationVendorAdditionalDataFragment on OrganizationVendor {\n    ...OrganizationVendorBillSummaryFragment\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      created_at\n      updated_at\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationVendorAdditionalDataFragment on OrganizationVendor {\n    ...OrganizationVendorBillSummaryFragment\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      created_at\n      updated_at\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationVendors(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n    userOrganizationVendors(\n      organization_id: $organizationId\n\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationVendorFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n"): (typeof documents)["\n  query UserOrganizationVendors(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n    userOrganizationVendors(\n      organization_id: $organizationId\n\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationVendorFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationVendor($organizationVendorId: String!, $organizationId: String!) {\n    userOrganizationVendor(organization_vendor_id: $organizationVendorId, organization_id: $organizationId) {\n      ...OrganizationVendorFragment\n      ...OrganizationVendorAdditionalDataFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationVendor($organizationVendorId: String!, $organizationId: String!) {\n    userOrganizationVendor(organization_vendor_id: $organizationVendorId, organization_id: $organizationId) {\n      ...OrganizationVendorFragment\n      ...OrganizationVendorAdditionalDataFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorUpdate ($organizationId: String!, $organizationVendorId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n      ...OrganizationVendorAdditionalDataFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorUpdate ($organizationId: String!, $organizationVendorId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n      ...OrganizationVendorAdditionalDataFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorCreate ($organizationId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorCreate ($organizationId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;