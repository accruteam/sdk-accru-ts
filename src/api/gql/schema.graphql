enum ACCT_PROVIDER {
  QUICKBOOKS
}

enum AUTH_PROVIDER {
  FIREBASE
  INTUIT
}

type AccruPayTransactionProviderPreTransactionData {
  environment: String!
  merchant_id: String!
  merchant_site_id: String!
  transaction_provider: TRANSACTION_PROVIDER!
}

enum BILL_STATUS {
  OPEN
  PAID
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

enum COUNTRY_ISO_3 {
  ABW
  AFG
  AGO
  AIA
  ALA
  ALB
  AND
  ARE
  ARG
  ARM
  ASM
  ATA
  ATF
  ATG
  AUS
  AUT
  AZE
  BDI
  BEL
  BEN
  BES
  BFA
  BGD
  BGR
  BHR
  BHS
  BIH
  BLM
  BLR
  BLZ
  BMU
  BOL
  BRA
  BRB
  BRN
  BTN
  BVT
  BWA
  CAF
  CAN
  CCK
  CHE
  CHL
  CHN
  CIV
  CMR
  COD
  COG
  COK
  COL
  COM
  CPV
  CRI
  CUB
  CUW
  CXR
  CYM
  CYP
  CZE
  DEU
  DJI
  DMA
  DNK
  DOM
  DZA
  ECU
  EGY
  ERI
  ESH
  ESP
  EST
  ETH
  FIN
  FJI
  FLK
  FRA
  FRO
  FSM
  GAB
  GBR
  GEO
  GGY
  GHA
  GIB
  GIN
  GLP
  GMB
  GNB
  GNQ
  GRC
  GRD
  GRL
  GTM
  GUF
  GUM
  GUY
  HKG
  HMD
  HND
  HRV
  HTI
  HUN
  IDN
  IMN
  IND
  IOT
  IRL
  IRN
  IRQ
  ISL
  ISR
  ITA
  JAM
  JEY
  JOR
  JPN
  KAZ
  KEN
  KGZ
  KHM
  KIR
  KNA
  KOR
  KWT
  LAO
  LBN
  LBR
  LBY
  LCA
  LIE
  LKA
  LSO
  LTU
  LUX
  LVA
  MAC
  MAF
  MAR
  MCO
  MDA
  MDG
  MDV
  MEX
  MHL
  MKD
  MLI
  MLT
  MMR
  MNE
  MNG
  MNP
  MOZ
  MRT
  MSR
  MTQ
  MUS
  MWI
  MYS
  MYT
  NAM
  NCL
  NER
  NFK
  NGA
  NIC
  NIU
  NLD
  NOR
  NPL
  NRU
  NZL
  OMN
  PAK
  PAN
  PCN
  PER
  PHL
  PLW
  PNG
  POL
  PRI
  PRK
  PRT
  PRY
  PSE
  PYF
  QAT
  REU
  ROU
  RUS
  RWA
  SAU
  SDN
  SEN
  SGP
  SGS
  SHN
  SJM
  SLB
  SLE
  SLV
  SMR
  SOM
  SPM
  SRB
  SSD
  STP
  SUR
  SVK
  SVN
  SWE
  SWZ
  SXM
  SYC
  SYR
  TCA
  TCD
  TGO
  THA
  TJK
  TKL
  TKM
  TLS
  TON
  TTO
  TUN
  TUR
  TUV
  TWN
  TZA
  UGA
  UKR
  UMI
  URY
  USA
  UZB
  VAT
  VCT
  VEN
  VGB
  VIR
  VNM
  VUT
  WLF
  WSM
  YEM
  ZAF
  ZMB
  ZWE
}

enum CURRENCY {
  EUR
  USD
}

"""Cursor for pagination"""
scalar ConnectionCursor

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type File {
  allow_public_access: Boolean!
  archived_at: DateTime
  checksum_md5: String!
  checksum_sha256: String!
  created_at: DateTime!
  extension: String!
  filename: String!
  id: ID!
  mime_type: MIME_TYPE!
  payload: JSON!
  public_url: String
  public_url_expires_at: DateTime
  recipient_id: String
  recipient_type: RECIPIENT_TYPE!
  size: Int!
  storage_provider: STORAGE_PROVIDER!
  type: String!
  updated_at: DateTime!
}

enum INVOICE_STATUS {
  OPEN
  PAID
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

enum MIME_TYPE {
  JPEG
  OTHER
  PDF
  PNG
}

type Mutation {
  adminClearCache: DateTime!
  adminOrganizationAcctProviderSynchronize(acct_provider: ACCT_PROVIDER!, organization_id: String!): DateTime!
  adminOrganizationAcctProviderSynchronizeAll(acct_provider: ACCT_PROVIDER): Int!
  adminOrganizationArchive(organization_id: String!): Organization!
  adminOrganizationBillProcess(organization_bill_id: String, organization_id: String!): Int!
  adminOrganizationBillTransactionProcess(organization_bill_transaction_id: String, organization_id: String!): Int!
  adminOrganizationCouponCreate(data: OrganizationCouponCreateSchema!): OrganizationCoupon!
  adminOrganizationCouponDelete(organization_coupon_id: String!): OrganizationCoupon!
  adminOrganizationCustomerProcess(organization_customer_id: String, organization_id: String!): Int!
  adminOrganizationCustomerStatementRecalculate(organization_customer_id: String, organization_id: String): DateTime!
  adminOrganizationDelete(organization_id: String!): Organization!
  adminOrganizationInvoiceProcess(organization_id: String!, organization_invoice_id: String): Int!
  adminOrganizationInvoiceTransactionProcess(organization_id: String!, organization_invoice_transaction_id: String): Int!
  adminOrganizationManualSubscriptionAddonsSetup(data: OrganizationManualSubscriptionAddonsSetupSchema!): OrganizationSubscription!
  adminOrganizationManualSubscriptionCancel(organization_subscription_id: String!): OrganizationSubscription!
  adminOrganizationManualSubscriptionModuleSetup(data: OrganizationManualSubscriptionModuleSetupSchema!): OrganizationSubscription!
  adminOrganizationManualSubscriptionPlanSetup(data: OrganizationManualSubscriptionPlanSetupSchema!): OrganizationSubscription!
  adminOrganizationSubscriptionProviderCancelSubscription(organization_subscription_id: String!): OrganizationSubscription!
  adminOrganizationSubscriptionProviderRefreshSettings(provider: ORGANIZATION_SUBSCRIPTION_PROVIDER!): DateTime!
  adminOrganizationSubscriptionProviderRefreshSubscription(organization_subscription_id: String!): OrganizationSubscription!
  adminOrganizationVendorProcess(organization_id: String!, organization_vendor_id: String): Int!
  adminUserDelete(user_id: String!): User!
  unauthorizedUserOrganizationAcctProviderConnCheckConnection(acct_provider: ACCT_PROVIDER!, acct_provider_conn_code: String!): DateTime!
  unconnectedCustomerOrganizationInvoiceGetPDF(acct_provider: ACCT_PROVIDER, organization_id: String, organization_invoice_id: String!, token: String!, unique_code: String!): String!
  unconnectedCustomerOrganizationProjectChangeRequestAccept(organization_id: String, organization_project_change_request_id: String!, organization_project_id: String!, token: String!, unique_code: String!, verification_code: String!): OrganizationProjectChangeRequest!
  unconnectedCustomerOrganizationProjectChangeRequestActionRequestToken(organization_id: String, organization_project_change_request_id: String!, organization_project_id: String!, token: String!, unique_code: String!): DateTime!
  unconnectedCustomerOrganizationProjectChangeRequestReject(organization_id: String, organization_project_change_request_id: String!, organization_project_id: String!, token: String!, unique_code: String!, verification_code: String!): OrganizationProjectChangeRequest!
  unconnectedCustomerOrganizationStatementLineGetPDF(acct_provider: ACCT_PROVIDER, organization_customer_statement_line_id: Int!, organization_id: String, token: String!, unique_code: String!): String!
  unconnectedCustomerOrganizationStatementRequestToken(unique_code: String!): DateTime!
  unconnectedCustomerSynchronize(organization_id: String, token: String!, unique_code: String!): DateTime!
  userAuthProviderDisconnect(auth_provider: AUTH_PROVIDER!): UserAuthProviderConn!
  userAuthProviderGetOAuthToken(auth_provider: AUTH_PROVIDER!, authorization_token: String!): String!
  userAuthProviderGetOAuthUrl(auth_provider: AUTH_PROVIDER!): String!
  userCustomerOrganizationInvoiceCreateSyncBill(organization_id: String!, organization_invoice_id: String!, organization_vendor_id: String!): OrganizationBill!
  userCustomerOrganizationInvoiceGetPDF(acct_provider: ACCT_PROVIDER, organization_id: String!, organization_invoice_id: String!, organization_vendor_id: String!): String!
  userCustomerOrganizationProjectChangeRequestAccept(organization_id: String!, organization_project_change_request_id: String!, organization_project_id: String!, organization_vendor_id: String!): OrganizationProjectChangeRequest!
  userCustomerOrganizationProjectChangeRequestCancel(organization_id: String!, organization_project_change_request_id: String!, organization_project_id: String!, organization_vendor_id: String!): OrganizationProjectChangeRequest!
  userCustomerOrganizationProjectChangeRequestCreate(data: OrganizationProjectChangeRequestUpsertSchema!, organization_id: String!, organization_project_id: String!, organization_vendor_id: String!): OrganizationProjectChangeRequest!
  userCustomerOrganizationProjectChangeRequestReject(organization_id: String!, organization_project_change_request_id: String!, organization_project_id: String!, organization_vendor_id: String!): OrganizationProjectChangeRequest!
  userCustomerOrganizationProjectChangeRequestUpdate(data: OrganizationProjectChangeRequestUpsertSchema!, organization_id: String!, organization_project_change_request_id: String!, organization_project_id: String!, organization_vendor_id: String!): OrganizationProjectChangeRequest!
  userCustomerOrganizationStatementLineGetPDF(acct_provider: ACCT_PROVIDER, organization_customer_statement_line_id: Int!, organization_id: String!, organization_vendor_id: String!): String!
  userCustomerOrganizationSynchronize(organization_id: String!, organization_vendor_id: String!): DateTime!
  userEmailVerifyOrChangeFinish(data: UserEmailVerifyOrChangeFinishSchema!): User!
  userEmailVerifyOrChangeStart(data: UserEmailVerifyOrChangeStartSchema!): DateTime!
  userHandleLoginAttempt(email: String!): DateTime!
  userOrganizationAcctProviderConnCheckConnection(acct_provider: ACCT_PROVIDER!, acct_provider_conn_code: String!, organization_id: String!): OrganizationAcctProviderConn!
  userOrganizationAcctProviderConnDisconnect(acct_provider: ACCT_PROVIDER!, organization_id: String!): OrganizationAcctProviderConn!
  userOrganizationAcctProviderConnUpdate(acct_provider: ACCT_PROVIDER!, data: UserOrganizationAcctProviderConnUpdateSchema!, organization_id: String!): OrganizationAcctProviderConn!
  userOrganizationAcctProviderConnect(acct_provider: ACCT_PROVIDER!, automatic_pull_enabled: Boolean!, organization_id: String!, url: String!): OrganizationAcctProviderConn!
  userOrganizationAcctProviderGetOAuthUrl(acct_provider: ACCT_PROVIDER!, organization_id: String!): String!
  userOrganizationAcctProviderSynchronize(acct_provider: ACCT_PROVIDER!, organization_id: String!): DateTime!
  userOrganizationBillConnLock(organization_bill_id: String!, organization_id: String!): OrganizationBill!
  userOrganizationBillConnSync(organization_bill_id: String!, organization_id: String!): OrganizationBill!
  userOrganizationBillConnUnlock(organization_bill_id: String!, organization_id: String!): OrganizationBill!
  userOrganizationBillCreate(data: UserOrganizationBillSchema!, organization_id: String!): OrganizationBill!
  userOrganizationBillDelete(organization_bill_ids: [String!]!, organization_id: String!): [OrganizationBill!]!
  userOrganizationBillFileDelete(organization_bill_id: String!, organization_id: String!): OrganizationBill!
  userOrganizationBillManualPaymentCreate(data: UserOrganizationBillManualPaymentCreateSchema!, organization_bill_id: String!, organization_id: String!): OrganizationBill!
  userOrganizationBillManualPaymentDelete(organization_bill_id: String!, organization_bill_transaction_id: String!, organization_id: String!): OrganizationBill!
  userOrganizationBillUpdate(data: UserOrganizationBillSchema!, organization_bill_id: String!, organization_id: String!): OrganizationBill!
  userOrganizationCollaboratorDelete(organization_id: String!, organization_user_id: String!): OrganizationUser!
  userOrganizationCollaboratorUpdate(data: UserOrganizationCollaboratorUpdateSchema!, organization_id: String!, organization_user_id: String!): OrganizationUser!
  userOrganizationConnectionAccept(organization_connection_id: String!, organization_id: String!): OrganizationConnection!
  userOrganizationConnectionInviteCustomer(organization_customer_id: String!, organization_id: String!): OrganizationConnection!
  userOrganizationConnectionInviteVendor(organization_id: String!, organization_vendor_id: String!): OrganizationConnection!
  userOrganizationConnectionReject(organization_connection_id: String!, organization_id: String!): OrganizationConnection!
  userOrganizationCreate(data: UserOrganizationCreateSchema!): Organization!
  userOrganizationCustomerConnLock(organization_customer_id: String!, organization_id: String!): OrganizationCustomer!
  userOrganizationCustomerConnSync(organization_customer_id: String!, organization_id: String!): OrganizationCustomer!
  userOrganizationCustomerConnUnlock(organization_customer_id: String!, organization_id: String!): OrganizationCustomer!
  userOrganizationCustomerContactCreate(data: UserOrganizationCustomerContactCreateSchema!, organization_customer_id: String!, organization_id: String!): OrganizationCustomerContact!
  userOrganizationCustomerContactDelete(organization_customer_contact_id: String!, organization_customer_id: String!, organization_id: String!): OrganizationCustomerContact!
  userOrganizationCustomerContactUpdate(data: UserOrganizationCustomerContactUpdateSchema!, organization_customer_contact_id: String!, organization_customer_id: String!, organization_id: String!): OrganizationCustomerContact!
  userOrganizationCustomerCreate(data: UserOrganizationCustomerSchema!, organization_id: String!): OrganizationCustomer!
  userOrganizationCustomerGetStatementLink(expires_at: DateTime, organization_customer_id: String!, organization_id: String!): String!
  userOrganizationCustomerSendInvoiceEmail(organization_id: String!, targets: [UserOrganizationCustomerSendInvoiceEmailSchema!]!): JSON!
  userOrganizationCustomerSendStatementEmail(organization_id: String!, targets: [UserOrganizationCustomerSendStatementEmailSchema!]!): JSON!
  userOrganizationCustomerSynchronize(organization_customer_id: String!, organization_id: String!): [String!]!
  userOrganizationCustomerUniqueCodeUpdate(organization_customer_id: String!, organization_id: String!): OrganizationCustomer!
  userOrganizationCustomerUpdate(data: UserOrganizationCustomerSchema!, organization_customer_id: String!, organization_id: String!): OrganizationCustomer!
  userOrganizationDelete(organization_id: String!): Organization!
  userOrganizationEmailVerifyOrChangeFinish(data: UserOrganizationEmailVerifyOrChangeFinishSchema!, organization_id: String!): Organization!
  userOrganizationEmailVerifyOrChangeStart(data: UserOrganizationEmailVerifyOrChangeStartSchema!, organization_id: String!): DateTime!
  userOrganizationInviteCollaboratorCancel(organization_id: String!, organization_invite_id: String!): OrganizationInvite!
  userOrganizationInviteCollaboratorCreate(data: UserOrganizationInviteCollaboratorCreateSchema!, organization_id: String!): OrganizationInvite!
  userOrganizationInviteCollaboratorResend(organization_id: String!, organization_invite_id: String!): OrganizationInvite!
  userOrganizationInviteReject(code: String!, organization_id: String!, organization_invite_id: String!): OrganizationInvite!
  userOrganizationInvoiceCreate(data: UserOrganizationInvoiceSchema!, organization_id: String!): OrganizationInvoice!
  userOrganizationInvoiceDelete(organization_id: String!, organization_invoice_ids: [String!]!): [OrganizationInvoice!]!
  userOrganizationInvoiceFileDelete(organization_id: String!, organization_invoice_id: String!): OrganizationInvoice!
  userOrganizationInvoiceGetPDF(acct_provider: ACCT_PROVIDER, organization_id: String!, organization_invoice_id: String!): String!
  userOrganizationInvoiceManualPaymentCreate(data: UserOrganizationInvoiceManualPaymentCreateSchema!, organization_id: String!, organization_invoice_id: String!): OrganizationInvoice!
  userOrganizationInvoiceManualPaymentDelete(organization_id: String!, organization_invoice_id: String!, organization_invoice_transaction_id: String!): OrganizationInvoice!
  userOrganizationInvoiceTransactionGetPDF(acct_provider: ACCT_PROVIDER, organization_id: String!, organization_invoice_transaction_id: String!): String!
  userOrganizationInvoiceUpdate(data: UserOrganizationInvoiceSchema!, organization_id: String!, organization_invoice_id: String!): OrganizationInvoice!
  userOrganizationLeave(organization_id: String!): OrganizationUser!
  userOrganizationLogoPictureRemove(organization_id: String!): Organization!
  userOrganizationProjectChangeRequestAccept(organization_id: String!, organization_project_change_request_id: String!, organization_project_id: String!): OrganizationProjectChangeRequest!
  userOrganizationProjectChangeRequestCancel(organization_id: String!, organization_project_change_request_id: String!, organization_project_id: String!): OrganizationProjectChangeRequest!
  userOrganizationProjectChangeRequestCreate(data: OrganizationProjectChangeRequestUpsertSchema!, organization_id: String!, organization_project_id: String!): OrganizationProjectChangeRequest!
  userOrganizationProjectChangeRequestReject(organization_id: String!, organization_project_change_request_id: String!, organization_project_id: String!): OrganizationProjectChangeRequest!
  userOrganizationProjectChangeRequestUpdate(data: OrganizationProjectChangeRequestUpsertSchema!, organization_id: String!, organization_project_change_request_id: String!, organization_project_id: String!): OrganizationProjectChangeRequest!
  userOrganizationProjectCreate(data: UserOrganizationProjectCreateSchema!, organization_id: String!): OrganizationProject!
  userOrganizationProjectDelete(organization_id: String!, organization_project_id: String!): OrganizationProject!
  userOrganizationProjectUpdate(data: UserOrganizationProjectUpdateSchema!, organization_id: String!, organization_project_id: String!): OrganizationProject!
  userOrganizationReceivingMethodDelete(organization_id: String!, organization_receiving_method_id: String!): OrganizationReceivingMethod!
  userOrganizationReceivingMethodUpdate(data: UserOrganizationReceivingMethodUpdateSchema!, organization_id: String!, organization_receiving_method_id: String!): OrganizationReceivingMethod!
  userOrganizationReminderSettingCreate(data: UserOrganizationReminderSettingSchema!, organization_id: String!): OrganizationReminderSetting!
  userOrganizationReminderSettingDelete(organization_id: String!, organization_reminder_setting_id: String!): OrganizationReminderSetting!
  userOrganizationReminderSettingGlobalUpdate(organization_id: String!, setting_allow_invoice_due_snooze_reminders: Boolean, setting_allow_invoice_overdue_snooze_reminders: Boolean, setting_send_invoice_due_reminders: Boolean, setting_send_invoice_overdue_reminders: Boolean): Organization!
  userOrganizationReminderSettingUpdate(data: UserOrganizationReminderSettingSchema!, organization_id: String!, organization_reminder_setting_id: String!): OrganizationReminderSetting!
  userOrganizationSendGenericInviteMail(email: String!, organization_id: String!): DateTime!
  userOrganizationSubscriptionCalculatePricing(data: UserOrganizationSubscriptionCalculatePricingSchema!, organization_id: String!): OrganizationSubscriptionCalculatedPricing!
  userOrganizationSubscriptionCancel(organization_id: String!, organization_subscription_id: String!): OrganizationSubscription!
  userOrganizationSubscriptionCompletePurchase(organization_id: String!, organization_subscription_id: String!, organization_subscription_transaction_id: String!): OrganizationSubscription!
  userOrganizationSubscriptionGetPrePurchaseTransactionData(organization_id: String!): OrganizationTransactionPreTransactionData!
  userOrganizationSubscriptionStartPurchase(data: UserOrganizationSubscriptionStartPurchaseSchema!, organization_id: String!): OrganizationSubscriptionTransaction!
  userOrganizationSubscriptionVerifyCoupon(code: String!, organization_id: String!): OrganizationCoupon!
  userOrganizationUniqueCodeUpdate(organization_id: String!): Organization!
  userOrganizationUniqueNameUpdate(organization_id: String!): Organization!
  userOrganizationUpdate(data: UserOrganizationUpdateSchema!, organization_id: String!): Organization!
  userOrganizationUserInviteAccept(code: String!, organization_id: String!, organization_invite_id: String!): OrganizationUser!
  userOrganizationVendorConnLock(organization_id: String!, organization_vendor_id: String!): OrganizationVendor!
  userOrganizationVendorConnSync(organization_id: String!, organization_vendor_id: String!): OrganizationVendor!
  userOrganizationVendorConnUnlock(organization_id: String!, organization_vendor_id: String!): OrganizationVendor!
  userOrganizationVendorContactCreate(data: UserOrganizationVendorContactCreateSchema!, organization_id: String!, organization_vendor_id: String!): OrganizationVendorContact!
  userOrganizationVendorContactDelete(organization_id: String!, organization_vendor_contact_id: String!, organization_vendor_id: String!): OrganizationVendorContact!
  userOrganizationVendorContactUpdate(data: UserOrganizationVendorContactUpdateSchema!, organization_id: String!, organization_vendor_contact_id: String!, organization_vendor_id: String!): OrganizationVendorContact!
  userOrganizationVendorCreate(data: UserOrganizationVendorSchema!, organization_id: String!): OrganizationVendor!
  userOrganizationVendorUniqueCodeUpdate(organization_id: String!, organization_vendor_id: String!): OrganizationVendor!
  userOrganizationVendorUpdate(data: UserOrganizationVendorSchema!, organization_id: String!, organization_vendor_id: String!): OrganizationVendor!
  userPasswordChangeFinish(data: UserPasswordChangeFinishSchema!): String!
  userPasswordChangeStart(data: UserPasswordChangeStartSchema!): DateTime!
  userPasswordResetFinish(data: UserPasswordResetFinishSchema!): String!
  userPasswordResetStart(data: UserPasswordResetStartSchema!): String!
  userPhoneNumberRemove: User!
  userPhoneNumberVerifyOrChangeFinish(data: UserPhoneNumberVerifyOrChangeFinishSchema!): User!
  userPhoneNumberVerifyOrChangeStart(data: UserPhoneNumberVerifyOrChangeStartSchema!): DateTime!
  userProfilePictureRemove: User!
  userSessionsClose: UserAuthProviderConn!
  userSignUpWithEmailFinish(data: UserSignUpWithEmailFinishSchema!): String!
  userSignUpWithEmailStart(data: UserSignUpWithEmailStartSchema!): DateTime!
  userSignUpWithEmailVerify(data: UserSignUpWithEmailVerifySchema!): DateTime!
  userUpdateData(data: UserUpdateDataSchema!): User!
}

type NuveiTransactionProviderPreTransactionData {
  environment: String!
  merchant_id: String!
  merchant_site_id: String!
  transaction_provider: TRANSACTION_PROVIDER!
}

enum ORGANIZATION_ACCT_PROVIDER_CONN_STATUS {
  CONNECTED
  DISCONNECTED
  EXPIRED
}

enum ORGANIZATION_ACCT_PROVIDER_CONN_SYNCHRONIZATION_SCOPE {
  COMPLETE
  CUSTOMER
}

enum ORGANIZATION_CONNECTION_STATUS {
  ACCEPTED
  INVITED
  REJECTED
}

enum ORGANIZATION_COUPON_CAMPAIGN {
  FOUNDING_FIRST_1OO_ORGANIZATIONS
  RANDOM_ADMIN_GIVEAWAY
}

enum ORGANIZATION_COUPON_CATEGORY {
  ORGANIZATION_SUBSCRIPTION
}

enum ORGANIZATION_COUPON_STATUS {
  ACTIVATED
  AVAILABLE
  EXPIRED
}

enum ORGANIZATION_COUPON_SUBDIVISION {
  ORGANIZATION_SUBSCRIPTION_FOUNDING_PRICING_TIER
}

enum ORGANIZATION_INVITE_STATUS {
  ACCEPTED
  CANCELED
  EXPIRED
  OPEN
  REJECTED
}

enum ORGANIZATION_PAYMENT_METHOD_BOUND_MODE {
  SYSTEM_SUBSCRIPTION_PAYMENT
  VENDOR_RECEIVING_METHOD_PAYMENT
}

enum ORGANIZATION_PROJECT_CHANGE_REQUEST_SIDE {
  CUSTOMER
  VENDOR
}

enum ORGANIZATION_SUBSCRIPTION {
  EARLY_ACCESS
  EARLY_ACCESS_PREMIUM
}

enum ORGANIZATION_SUBSCRIPTION_ADDON_ITEM {
  ADDITIONAL_USERS_ADDON
}

enum ORGANIZATION_SUBSCRIPTION_BASE_ITEM {
  BASIC_PLAN
  FREE_PLAN
  PROJECTS_MODULE
  PRO_PLAN
}

enum ORGANIZATION_SUBSCRIPTION_ITEM {
  ADDITIONAL_USERS_ADDON
  BASIC_PLAN
  FREE_PLAN
  PROJECTS_MODULE
  PRO_PLAN
}

enum ORGANIZATION_SUBSCRIPTION_ITEM_CATEGORY {
  ADDON
  MODULE
  PLAN
}

enum ORGANIZATION_SUBSCRIPTION_ITEM_CLASSIFICATION {
  ADDON
  BASE
}

enum ORGANIZATION_SUBSCRIPTION_ITEM_STATUS {
  ACTIVE
  CANCELED
}

enum ORGANIZATION_SUBSCRIPTION_MODULE_ITEM {
  PROJECTS_MODULE
}

enum ORGANIZATION_SUBSCRIPTION_PAYMENT_STATUS {
  CURRENT
  OVERDUE
  PENDING
  REQUIRES_ACTION
}

enum ORGANIZATION_SUBSCRIPTION_PLAN_ITEM {
  BASIC_PLAN
  FREE_PLAN
  PRO_PLAN
}

enum ORGANIZATION_SUBSCRIPTION_PRICE_TIER {
  FOUNDING
  STANDARD
}

enum ORGANIZATION_SUBSCRIPTION_PROVIDER {
  ACCRUPAY
  MANUAL
  NUVEI
}

enum ORGANIZATION_SUBSCRIPTION_PROVIDER_STATUS {
  ACTIVE
  CANCELED
  EXPIRED
  INACTIVE
  INITIALIZING
}

enum ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL {
  MONTHLY
  YEARLY
}

enum ORGANIZATION_SUBSCRIPTION_STATUS {
  ACTIVE
  CANCELED
  INACTIVE
  INITIALIZING
}

enum ORGANIZATION_SUBSCRIPTION_TRANSACTION_PROCEDURE {
  CHANGE
  PURCHASE
  RENEWAL
}

enum ORGANIZATION_USER_ROLE {
  ADMIN
  EDITOR
  OWNER
  VIEWER
}

type Organization {
  address_city: String
  address_country_code_iso_3: COUNTRY_ISO_3
  address_lat: Float
  address_line_1: String
  address_line_2: String
  address_lng: Float
  address_number: String
  address_state: String
  address_zip_code: String
  archived_at: DateTime
  business_address_city: String
  business_address_country_code_iso_3: COUNTRY_ISO_3
  business_address_lat: Float
  business_address_line_1: String
  business_address_line_2: String
  business_address_lng: Float
  business_address_number: String
  business_address_state: String
  business_address_zip_code: String
  business_industry: String
  business_name: String
  business_number_of_employees: Int
  business_tax_code: String
  business_tax_code_type: TAX_TYPE
  created_at: DateTime!
  current_email_verification_id: String
  current_phone_number_verification_id: String
  email: String!
  id: ID!
  language: String
  logo_picture_file: File
  logo_picture_file_id: String
  name: String!
  phone_number: String
  primary_contact_name: String
  setting_allow_invoice_due_snooze_reminders: Boolean
  setting_allow_invoice_overdue_snooze_reminders: Boolean
  setting_receive_customer_notification_mode: RECEIVE_CUSTOMER_NOTIFICATION_MODE
  setting_send_invoice_due_reminders: Boolean
  setting_send_invoice_overdue_reminders: Boolean
  subscription: ORGANIZATION_SUBSCRIPTION @deprecated(reason: "Use subscription_data instead")
  subscription_code: String @deprecated(reason: "Use subscription_data instead")
  subscription_data: OrganizationSubscriptionData
  subscription_date: DateTime @deprecated(reason: "Use subscription_data instead")
  subscription_expires_at: DateTime @deprecated(reason: "Use subscription_data instead")
  subscription_level: Int @deprecated(reason: "Use subscription_data.subscription_level instead")
  timezone: String
  unique_code: String!
  unique_name: String!
  updated_at: DateTime!
  website: String
}

type OrganizationAcctProviderConn {
  acct_provider: ACCT_PROVIDER!
  address_city: String
  address_country_code_iso_3: COUNTRY_ISO_3
  address_lat: Float
  address_line_1: String
  address_line_2: String
  address_lng: Float
  address_number: String
  address_state: String
  address_zip_code: String
  automatic_pull_enabled: Boolean!
  bill_add_url: String
  business_address_city: String
  business_address_country_code_iso_3: COUNTRY_ISO_3
  business_address_lat: Float
  business_address_line_1: String
  business_address_line_2: String
  business_address_lng: Float
  business_address_number: String
  business_address_state: String
  business_address_zip_code: String
  business_industry: String
  business_name: String
  business_number_of_employees: Int
  business_tax_code: String
  business_tax_code_type: TAX_TYPE
  code: String!
  conn_expires_at: DateTime!
  created_at: DateTime!
  customer_add_url: String
  disconnected_at: DateTime
  email: String
  id: ID!
  invoice_add_url: String
  language: String
  name: String
  organization_id: String!
  payload: JSON
  phone_number: String
  primary_contact_name: String
  status: ORGANIZATION_ACCT_PROVIDER_CONN_STATUS!
  synchronizations(after: ConnectionCursor, before: ConnectionCursor, failed: Boolean, finished: Boolean, first: Int, last: Int, scope: ORGANIZATION_ACCT_PROVIDER_CONN_SYNCHRONIZATION_SCOPE, skip: Int, sorting: [SortingFieldSchema!], succeeded: Boolean, take: Int): OrganizationAcctProviderConnSynchronizationPaginationConnection!
  timezone: String
  updated_at: DateTime!
  url: String
  vendor_add_url: String
  website_url: String
}

type OrganizationAcctProviderConnPaginationConnection {
  edges: [OrganizationAcctProviderConnPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationAcctProviderConnPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationAcctProviderConn!
}

type OrganizationAcctProviderConnSynchronization {
  create_failure: Int!
  create_success: Int!
  created_at: DateTime!
  data: OrganizationAcctProviderConnSynchronizationData
  delete_failure: Int!
  delete_success: Int!
  error: String
  errors: [String!]!
  failed_at: DateTime
  finished_at: DateTime
  force: Boolean
  id: ID!
  mode: String!
  organization_acct_provider_conn_id: String!
  organization_id: String!
  payload: JSON
  process_failure: Int!
  process_success: Int!
  provider: ACCT_PROVIDER!
  read_failure: Int!
  read_success: Int!
  scope: String!
  scope_description: String
  scope_id: String
  skipped: Int!
  started_at: DateTime
  succeeded_at: DateTime
  update_failure: Int!
  update_success: Int!
  updated_at: DateTime!
  warnings: [String!]!
}

type OrganizationAcctProviderConnSynchronizationData {
  bill: OrganizationAcctProviderConnSynchronizationEntity
  bill_transaction: OrganizationAcctProviderConnSynchronizationEntity
  customer: OrganizationAcctProviderConnSynchronizationEntity
  invoice: OrganizationAcctProviderConnSynchronizationEntity
  invoice_transaction: OrganizationAcctProviderConnSynchronizationEntity
  vendor: OrganizationAcctProviderConnSynchronizationEntity
}

type OrganizationAcctProviderConnSynchronizationEntity {
  count: OrganizationAcctProviderConnSynchronizationEntityCount!
  items: JSON
}

type OrganizationAcctProviderConnSynchronizationEntityCount {
  create_failure: Int!
  create_success: Int!
  delete_failure: Int!
  delete_success: Int!
  process_failure: Int!
  process_success: Int!
  read_failure: Int!
  read_success: Int!
  skipped: Int!
  update_failure: Int!
  update_success: Int!
}

type OrganizationAcctProviderConnSynchronizationPaginationConnection {
  edges: [OrganizationAcctProviderConnSynchronizationPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationAcctProviderConnSynchronizationPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationAcctProviderConnSynchronization!
}

type OrganizationBill {
  amount: BigInt!

  """The open amount for this bill. Balance 0 represents bill fully paid."""
  balance: BigInt
  bill_date: DateTime!
  conn_linked_invoice_id: String
  conn_locked_data_at: DateTime
  created_at: DateTime!
  currency_code: CURRENCY!
  description: String
  discount_amount: BigInt!
  due_date: DateTime!
  file: File
  file_id: String
  has_sync_errors: Boolean @deprecated(reason: "Use `provider_errors` and `provider_warnings` instead")
  history(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationBillHistoryPaginationConnection!
  id: ID!
  is_overdue: Boolean
  last_successful_sync_at: DateTime!
  last_successful_sync_id: String!
  last_sync_at: DateTime!
  last_sync_id: String!
  last_sync_succeeded: Boolean!
  latest_acct_provider_balance: BigInt
  latest_acct_provider_is_overdue: Boolean
  latest_acct_provider_status: BILL_STATUS
  number: String
  organization: Organization!
  organization_acct_provider_conn_id: String!
  organization_id: String!
  organization_project: OrganizationProject
  organization_project_id: String
  organization_vendor: OrganizationVendor!
  organization_vendor_id: String!
  paid_amount: BigInt
  paid_at: DateTime
  payload: JSON
  provider: ACCT_PROVIDER!
  provider_code: String!
  provider_errors: [String!]!
  provider_url: String
  provider_warnings: [String!]!
  status: BILL_STATUS
  tax_amount: BigInt!
  total_amount: BigInt!
  transaction_links: [OrganizationBillTransactionLink!]
  unique_code: String!
  updated_at: DateTime!
  vendor_address_city: String
  vendor_address_country_code_iso_3: COUNTRY_ISO_3
  vendor_address_lat: Float
  vendor_address_line_1: String
  vendor_address_line_2: String
  vendor_address_lng: Float
  vendor_address_number: String
  vendor_address_state: String
  vendor_address_zip_code: String
  vendor_email: String
}

type OrganizationBillHistory {
  created_at: DateTime!
  id: ID!
  organization_bill_id: String!
  payload: JSON
  updated_at: DateTime!
}

type OrganizationBillHistoryPaginationConnection {
  edges: [OrganizationBillHistoryPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationBillHistoryPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationBillHistory!
}

type OrganizationBillPaginationConnection {
  edges: [OrganizationBillPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationBillPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationBill!
}

type OrganizationBillSummary {
  balance: BigInt!
  currency: CURRENCY
  customer_organization: Organization!
  customer_organization_id: String!
  customer_organization_vendor: OrganizationVendor
  customer_organization_vendor_id: String
  data: OrganizationBillPaginationConnection!
  due_end_date: DateTime
  due_start_date: DateTime
  end_date: DateTime
  has_sync_errors: Boolean
  last_sync_at: DateTime
  latest_acct_provider_balance: BigInt
  latest_acct_provider_one_to_thirty_days_due_amount: BigInt
  latest_acct_provider_sixty_plus_days_due_amount: BigInt
  latest_acct_provider_thirty_one_to_sixty_days_due_amount: BigInt
  one_to_thirty_days_due_amount: BigInt
  overdue_amount: BigInt!
  paid_amount: BigInt!
  sixty_plus_days_due_amount: BigInt
  start_date: DateTime
  status: BILL_STATUS
  thirty_one_to_sixty_days_due_amount: BigInt
  total_amount: BigInt!
  total_open_bill_count: Int!
  total_overdue_bill_count: Int!
  vendor_organization: Organization
  vendor_organization_id: String
}

type OrganizationBillTransaction {
  amount: BigInt!
  created_at: DateTime!
  currency_code: CURRENCY!
  customer_organization_acct_provider_conn_id: String!
  customer_organization_id: String!
  customer_organization_payment_method_id: String!
  customer_organization_vendor_id: String!
  due_date: DateTime!
  failed_at: DateTime
  has_sync_errors: Boolean @deprecated(reason: "Use `provider_errors` and `provider_warnings` instead")
  id: ID!
  last_successful_sync_at: DateTime!
  last_successful_sync_id: String!
  last_sync_at: DateTime!
  last_sync_id: String!
  last_sync_succeeded: Boolean!
  links: [OrganizationBillTransactionLink!]!
  payment_method: PAYMENT_METHOD!
  payment_method_code: String!
  provider: ACCT_PROVIDER!
  provider_code: String!
  provider_errors: [String!]!
  provider_transaction_code: String!
  provider_url: String
  provider_warnings: [String!]!
  reverted_at: DateTime
  started_at: DateTime
  status: TRANSACTION_STATUS
  succeeded_at: DateTime
  transaction_code: String!
  transaction_date: DateTime!
  transaction_provider: TRANSACTION_PROVIDER!
  updated_at: DateTime!
}

type OrganizationBillTransactionLink {
  amount: BigInt!
  created_at: DateTime!
  id: ID!
  organization_bill_id: String!
  organization_bill_transaction: OrganizationBillTransaction!
  organization_bill_transaction_id: String!
  updated_at: DateTime!
}

type OrganizationConnection {
  created_at: DateTime!
  customer_conn_status: ORGANIZATION_CONNECTION_STATUS
  customer_conn_status_at: DateTime
  customer_organization_email: String
  customer_organization_id: String
  customer_organization_name: String
  customer_target_vendor_email: String
  customer_target_vendor_id: String
  customer_target_vendor_name: String
  id: ID!
  is_connected: Boolean!
  is_valid: Boolean!
  updated_at: DateTime!
  vendor_conn_status: ORGANIZATION_CONNECTION_STATUS
  vendor_conn_status_at: DateTime
  vendor_organization_email: String
  vendor_organization_id: String
  vendor_organization_name: String
  vendor_target_customer_email: String
  vendor_target_customer_id: String
  vendor_target_customer_name: String
}

type OrganizationConnectionPaginationConnection {
  edges: [OrganizationConnectionPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationConnectionPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationConnection!
}

type OrganizationCoupon {
  activated_at: DateTime
  archived_at: DateTime
  campaign: ORGANIZATION_COUPON_CAMPAIGN!
  category: ORGANIZATION_COUPON_CATEGORY!
  category_description: String
  created_at: DateTime!
  expires_at: DateTime
  id: ID!
  is_activation_unlimited: Boolean!
  organization_id: String
  status: ORGANIZATION_COUPON_STATUS!
  subdivision: ORGANIZATION_COUPON_SUBDIVISION!
  subdivision_description: String
  updated_at: DateTime!
}

input OrganizationCouponCreateSchema {
  campaign: ORGANIZATION_COUPON_CAMPAIGN!
  category: ORGANIZATION_COUPON_CATEGORY!
  expires_at: DateTime
  is_activation_unlimited: Boolean!
  organization_id: String
  subdivision: ORGANIZATION_COUPON_SUBDIVISION!
}

type OrganizationCouponPaginationConnection {
  edges: [OrganizationCouponPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationCouponPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationCoupon!
}

type OrganizationCustomer {
  address_city: String
  address_country_code_iso_3: COUNTRY_ISO_3
  address_lat: Float
  address_line_1: String
  address_line_2: String
  address_lng: Float
  address_number: String
  address_state: String
  address_zip_code: String
  balance: BigInt
  conn_locked_data_at: DateTime
  connection: OrganizationConnection
  contacts: [OrganizationCustomerContact!]!
  created_at: DateTime!
  email: String
  has_sync_errors: Boolean @deprecated(reason: "Use `provider_errors` and `provider_warnings` instead")
  id: ID!
  invoice_summary(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, customer_name: String, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, latest_acct_provider_is_overdue: Boolean, latest_acct_provider_status: INVOICE_STATUS, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, status: INVOICE_STATUS, take: Int): OrganizationInvoiceSummary!
  is_active: Boolean!
  language: String
  last_successful_sync_at: DateTime!
  last_successful_sync_id: String!
  last_sync_at: DateTime!
  last_sync_id: String!
  last_sync_succeeded: Boolean!
  latest_acct_provider_balance: BigInt
  name: String!
  organization: Organization!
  organization_acct_provider_conn_id: String!
  organization_id: String!
  overdue_amount: BigInt
  phone_number: String
  provider: ACCT_PROVIDER!
  provider_code: String!
  provider_errors: [String!]!
  provider_url: String
  provider_warnings: [String!]!
  statement(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, take: Int, type: STATEMENT_LINE_TYPE): OrganizationCustomerStatement!
  tax_code: String
  tax_code_type: TAX_TYPE
  timezone: String
  unique_code: String!
  updated_at: DateTime!
}

type OrganizationCustomerContact {
  created_at: DateTime!
  email: String!
  id: ID!
  is_default: Boolean!
  name: String!
  organization_customer_id: String!
  phone_number: String
  send_invoice_reminders: Boolean!
  updated_at: DateTime!
}

type OrganizationCustomerContactPaginationConnection {
  edges: [OrganizationCustomerContactPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationCustomerContactPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationCustomerContact!
}

type OrganizationCustomerPaginationConnection {
  edges: [OrganizationCustomerPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationCustomerPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationCustomer!
}

type OrganizationCustomerStatement {
  balance: BigInt!
  currency: CURRENCY
  customer_organization: Organization
  customer_organization_id: String
  data: OrganizationCustomerStatementLineDataPaginationConnection!
  due_end_date: DateTime
  due_start_date: DateTime
  end_date: DateTime
  has_sync_errors: Boolean
  last_sync_at: DateTime
  latest_acct_provider_balance: BigInt
  latest_acct_provider_one_to_thirty_days_due_amount: BigInt
  latest_acct_provider_sixty_plus_days_due_amount: BigInt
  latest_acct_provider_thirty_one_to_sixty_days_due_amount: BigInt
  one_to_thirty_days_due_amount: BigInt
  overdue_amount: BigInt!
  paid_amount: BigInt!
  sixty_plus_days_due_amount: BigInt
  start_date: DateTime
  thirty_one_to_sixty_days_due_amount: BigInt
  total_amount: BigInt!
  total_open_invoice_count: Int!
  total_overdue_invoice_count: Int!
  vendor_organization: Organization!
  vendor_organization_customer: OrganizationCustomer!
  vendor_organization_customer_id: String!
  vendor_organization_id: String!
}

type OrganizationCustomerStatementInvoiceLine {
  amount: BigInt!
  code: String
  created_at: DateTime!
  currency_code: CURRENCY!
  date: DateTime!
  due_date: DateTime!
  id: ID!
  invoice_status: String!
  organization_customer_id: String!
  organization_invoice: OrganizationCustomerStatementInvoiceLineData!
  organization_invoice_id: String!
  paid_amount: BigInt!
  running_balance: BigInt!
  type: STATEMENT_LINE_TYPE!
  updated_at: DateTime!
}

type OrganizationCustomerStatementInvoiceLineData {
  amount: BigInt!

  """
  The open amount for this invoice. Balance 0 represents invoice fully paid.
  """
  balance: BigInt
  created_at: DateTime!
  currency_code: CURRENCY!
  customer_address_city: String
  customer_address_country_code_iso_3: COUNTRY_ISO_3
  customer_address_lat: Float
  customer_address_line_1: String
  customer_address_line_2: String
  customer_address_lng: Float
  customer_address_number: String
  customer_address_state: String
  customer_address_zip_code: String
  customer_email: String
  description: String
  discount_amount: BigInt!
  due_date: DateTime!
  email_sent_at: DateTime
  file_id: String
  id: ID!
  invoice_date: DateTime!
  last_successful_sync_at: DateTime!
  last_successful_sync_id: String!
  last_sync_at: DateTime!
  last_sync_id: String!
  last_sync_succeeded: Boolean!
  latest_acct_provider_balance: BigInt
  latest_acct_provider_status: INVOICE_STATUS
  number: String
  organization_acct_provider_conn_id: String!
  organization_customer_id: String!
  organization_id: String!
  organization_project_id: String
  paid_amount: BigInt
  paid_at: DateTime
  payload: JSON
  payment_options: [OrganizationInvoicePaymentOption!]!
  provider: ACCT_PROVIDER!
  provider_code: String!
  provider_errors: [String!]!
  provider_url: String
  provider_warnings: [String!]!
  status: INVOICE_STATUS
  tax_amount: BigInt!
  total_amount: BigInt!
  unique_code: String!
  updated_at: DateTime!
  view_url: String
}

union OrganizationCustomerStatementLineData = OrganizationCustomerStatementInvoiceLine | OrganizationCustomerStatementTransactionLine

type OrganizationCustomerStatementLineDataPaginationConnection {
  edges: [OrganizationCustomerStatementLineDataPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationCustomerStatementLineDataPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationCustomerStatementLineData!
}

type OrganizationCustomerStatementTransactionLine {
  amount: BigInt!
  code: String
  created_at: DateTime!
  currency_code: CURRENCY!
  date: DateTime!
  due_date: DateTime!
  id: ID!
  organization_customer_id: String!
  organization_invoice_transaction: OrganizationCustomerStatementTransactionLineData!
  organization_invoice_transaction_id: String!
  paid_amount: BigInt!
  running_balance: BigInt!
  transaction_status: String!
  type: STATEMENT_LINE_TYPE!
  updated_at: DateTime!
}

type OrganizationCustomerStatementTransactionLineData {
  amount: BigInt!
  created_at: DateTime!
  currency_code: CURRENCY!
  due_date: DateTime!
  failed_at: DateTime
  id: ID!
  last_successful_sync_at: DateTime!
  last_successful_sync_id: String!
  last_sync_at: DateTime!
  last_sync_id: String!
  last_sync_succeeded: Boolean!
  links: [OrganizationInvoiceTransactionLink!]!
  payment_method: PAYMENT_METHOD!
  payment_method_code: String!
  provider: ACCT_PROVIDER!
  provider_code: String!
  provider_errors: [String!]!
  provider_transaction_code: String!
  provider_url: String
  provider_warnings: [String!]!
  reverted_at: DateTime
  started_at: DateTime
  status: TRANSACTION_STATUS
  succeeded_at: DateTime
  transaction_code: String!
  transaction_date: DateTime!
  transaction_provider: TRANSACTION_PROVIDER!
  unapplied_amount: BigInt!
  updated_at: DateTime!
  vendor_organization_acct_provider_conn_id: String!
  vendor_organization_customer_id: String!
  vendor_organization_id: String!
  vendor_organization_receiving_method_id: String!
}

type OrganizationInvite {
  accepted_at: DateTime
  canceled_at: DateTime
  code: String!
  created_at: DateTime!
  created_by_user: User!
  created_by_user_id: String!
  email: String!
  expires_at: DateTime!
  id: ID!
  organization: Organization!
  organization_id: String!
  payload: JSON
  rejected_at: DateTime
  role: ORGANIZATION_USER_ROLE!
  status: ORGANIZATION_INVITE_STATUS!
  updated_at: DateTime!
}

type OrganizationInvitePaginationConnection {
  edges: [OrganizationInvitePaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationInvitePaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationInvite!
}

type OrganizationInvoice {
  amount: BigInt!

  """
  The open amount for this invoice. Balance 0 represents invoice fully paid.
  """
  balance: BigInt
  created_at: DateTime!
  currency_code: CURRENCY!
  customer_address_city: String
  customer_address_country_code_iso_3: COUNTRY_ISO_3
  customer_address_lat: Float
  customer_address_line_1: String
  customer_address_line_2: String
  customer_address_lng: Float
  customer_address_number: String
  customer_address_state: String
  customer_address_zip_code: String
  customer_email: String
  description: String
  discount_amount: BigInt!
  due_date: DateTime!
  email_sent_at: DateTime
  file: File
  file_id: String
  has_sync_errors: Boolean @deprecated(reason: "Use `provider_errors` and `provider_warnings` instead")
  history(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationInvoiceHistoryPaginationConnection!
  id: ID!
  invoice_date: DateTime!
  is_overdue: Boolean
  last_successful_sync_at: DateTime!
  last_successful_sync_id: String!
  last_sync_at: DateTime!
  last_sync_id: String!
  last_sync_succeeded: Boolean!
  latest_acct_provider_balance: BigInt
  latest_acct_provider_is_overdue: Boolean
  latest_acct_provider_status: INVOICE_STATUS
  number: String
  organization: Organization!
  organization_acct_provider_conn_id: String!
  organization_customer: OrganizationCustomer!
  organization_customer_id: String!
  organization_id: String!
  organization_project: OrganizationProject
  organization_project_id: String
  paid_amount: BigInt
  paid_at: DateTime
  payload: JSON
  payment_options: [OrganizationInvoicePaymentOption!]!
  provider: ACCT_PROVIDER!
  provider_code: String!
  provider_errors: [String!]!
  provider_url: String
  provider_warnings: [String!]!
  status: INVOICE_STATUS
  tax_amount: BigInt!
  total_amount: BigInt!
  transaction_links: [OrganizationInvoiceTransactionLink!]
  unique_code: String!
  updated_at: DateTime!
  view_url: String
}

type OrganizationInvoiceHistory {
  created_at: DateTime!
  id: ID!
  organization_invoice_id: String!
  payload: JSON
  updated_at: DateTime!
}

type OrganizationInvoiceHistoryPaginationConnection {
  edges: [OrganizationInvoiceHistoryPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationInvoiceHistoryPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationInvoiceHistory!
}

type OrganizationInvoicePaginationConnection {
  edges: [OrganizationInvoicePaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationInvoicePaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationInvoice!
}

type OrganizationInvoicePaymentOption {
  method: PAYMENT_METHOD!
  payload: JSON
  url: String
}

type OrganizationInvoiceSummary {
  balance: BigInt!
  currency: CURRENCY
  customer_organization: Organization
  customer_organization_id: String
  data: OrganizationInvoicePaginationConnection!
  due_end_date: DateTime
  due_start_date: DateTime
  end_date: DateTime
  has_sync_errors: Boolean
  last_sync_at: DateTime
  latest_acct_provider_balance: BigInt
  latest_acct_provider_one_to_thirty_days_due_amount: BigInt
  latest_acct_provider_sixty_plus_days_due_amount: BigInt
  latest_acct_provider_thirty_one_to_sixty_days_due_amount: BigInt
  one_to_thirty_days_due_amount: BigInt
  overdue_amount: BigInt!
  paid_amount: BigInt!
  sixty_plus_days_due_amount: BigInt
  start_date: DateTime
  status: INVOICE_STATUS
  thirty_one_to_sixty_days_due_amount: BigInt
  total_amount: BigInt!
  total_open_invoice_count: Int!
  total_overdue_invoice_count: Int!
  vendor_organization: Organization!
  vendor_organization_customer: OrganizationCustomer
  vendor_organization_customer_id: String
  vendor_organization_id: String!
}

type OrganizationInvoiceTransaction {
  amount: BigInt!
  created_at: DateTime!
  currency_code: CURRENCY!
  due_date: DateTime!
  failed_at: DateTime
  has_sync_errors: Boolean @deprecated(reason: "Use `provider_errors` and `provider_warnings` instead")
  id: ID!
  last_successful_sync_at: DateTime!
  last_successful_sync_id: String!
  last_sync_at: DateTime!
  last_sync_id: String!
  last_sync_succeeded: Boolean!
  links: [OrganizationInvoiceTransactionLink!]!
  payment_method: PAYMENT_METHOD!
  payment_method_code: String!
  provider: ACCT_PROVIDER!
  provider_code: String!
  provider_errors: [String!]!
  provider_transaction_code: String!
  provider_url: String
  provider_warnings: [String!]!
  reverted_at: DateTime
  started_at: DateTime
  status: TRANSACTION_STATUS
  succeeded_at: DateTime
  transaction_code: String!
  transaction_date: DateTime!
  transaction_provider: TRANSACTION_PROVIDER!
  unapplied_amount: BigInt!
  updated_at: DateTime!
  vendor_organization_acct_provider_conn_id: String!
  vendor_organization_customer_id: String!
  vendor_organization_id: String!
  vendor_organization_receiving_method_id: String!
}

type OrganizationInvoiceTransactionLink {
  amount: BigInt!
  created_at: DateTime!
  id: ID!
  organization_invoice_id: String!
  organization_invoice_transaction: OrganizationInvoiceTransaction!
  organization_invoice_transaction_id: String!
  updated_at: DateTime!
}

input OrganizationManualSubscriptionAddonsSetupSchema {
  addons: [OrganizationManualSubscriptionSetupAddonSchema!]!
  ends_at: DateTime
  organization_id: String!
}

input OrganizationManualSubscriptionModuleSetupSchema {
  ends_at: DateTime
  module: ORGANIZATION_SUBSCRIPTION_MODULE_ITEM!
  organization_id: String!
}

input OrganizationManualSubscriptionPlanSetupSchema {
  ends_at: DateTime
  organization_id: String!
  plan: ORGANIZATION_SUBSCRIPTION_PLAN_ITEM!
}

input OrganizationManualSubscriptionSetupAddonSchema {
  addon: ORGANIZATION_SUBSCRIPTION_ADDON_ITEM!
  quantity: Float!
}

type OrganizationPaginationConnection {
  edges: [OrganizationPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationPaginationEdge {
  cursor: ConnectionCursor!
  node: Organization!
}

type OrganizationPaymentMethod {
  archived_at: DateTime
  billing_address_city: String
  billing_address_country_code_iso_3: COUNTRY_ISO_3
  billing_address_line_1: String
  billing_address_line_2: String
  billing_address_number: String
  billing_address_state: String
  billing_address_zip_code: String
  billing_email: String
  billing_first_name: String
  billing_last_name: String
  billing_phone_number: String
  bound_id: String
  bound_mode: ORGANIZATION_PAYMENT_METHOD_BOUND_MODE
  created_at: DateTime!
  id: ID!
  is_default: Boolean!
  is_enabled: Boolean!
  organization_id: String!
  payment_method: PAYMENT_METHOD!
  payment_method_info: OrganizationPaymentMethodInfo
  payment_provider: PAYMENT_PROVIDER!
  updated_at: DateTime!
}

type OrganizationPaymentMethodCreditCardInfo {
  card_brand: String
  card_number_masked: String
  type: PAYMENT_METHOD!
}

type OrganizationPaymentMethodGenericInfo {
  type: PAYMENT_METHOD!
}

union OrganizationPaymentMethodInfo = OrganizationPaymentMethodCreditCardInfo | OrganizationPaymentMethodGenericInfo

type OrganizationProject {
  archived_at: DateTime
  budget_amount: BigInt!
  budget_currency_code: CURRENCY!
  canceled_at: DateTime
  change_requests(accepted: Boolean, after: ConnectionCursor, before: ConnectionCursor, canceled: Boolean, expired: Boolean, first: Int, last: Int, organization_project_change_request_id: String, published: Boolean, rejected: Boolean, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationProjectChangeRequestPaginationConnection!
  completed_at: DateTime
  contract_url: String
  created_at: DateTime!
  description: String
  ends_at: DateTime
  id: ID!
  name: String!
  organization: Organization!
  organization_customer: OrganizationCustomer!
  organization_customer_id: String!
  organization_id: String!
  starts_at: DateTime
  status: PROJECT_STATUS!
  updated_at: DateTime!
}

type OrganizationProjectChange {
  created_at: DateTime!
  id: ID!
  organization_project_change_request_id: String!
  previous_budget_amount: BigInt!
  previous_ends_at: DateTime
  previous_name: String!
  previous_starts_at: DateTime
  updated_at: DateTime!
}

type OrganizationProjectChangeRequest {
  accepted_at: DateTime
  budget_amount: BigInt!
  canceled_at: DateTime
  contract_url: String
  created_at: DateTime!
  created_by_user_id: String
  created_by_user_name: String!
  created_side: ORGANIZATION_PROJECT_CHANGE_REQUEST_SIDE!
  ends_at: DateTime
  expires_at: DateTime
  finished_by_user_id: String
  finished_by_user_name: String
  finished_side: ORGANIZATION_PROJECT_CHANGE_REQUEST_SIDE
  id: ID!
  name: String!
  organization_project_change: OrganizationProjectChange
  organization_project_id: String!
  payload: JSON!
  published_at: DateTime
  rejected_at: DateTime
  sequence_number: Int!
  starts_at: DateTime
  status: PROJECT_CHANGE_REQUEST_STATUS!
  updated_at: DateTime!
}

type OrganizationProjectChangeRequestPaginationConnection {
  edges: [OrganizationProjectChangeRequestPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationProjectChangeRequestPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationProjectChangeRequest!
}

input OrganizationProjectChangeRequestUpsertSchema {
  budget_amount: BigInt!
  change_request_expires_at: DateTime
  contract_url: String
  ends_at: DateTime
  name: String!
  publish: Boolean
  starts_at: DateTime
}

type OrganizationProjectPaginationConnection {
  edges: [OrganizationProjectPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationProjectPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationProject!
}

type OrganizationReceivingMethod {
  archived_at: DateTime
  created_at: DateTime!
  id: ID!
  is_default: Boolean!
  is_enabled: Boolean!
  organization_id: String!
  receiving_method: RECEIVING_METHOD!
  receiving_provider: RECEIVING_PROVIDER!
  updated_at: DateTime!
}

type OrganizationReminderSetting {
  created_at: DateTime!
  days_amount: Int!
  due_date_mode: REMINDER_DUE_DATE_MODE!
  id: ID!
  organization_customer_id: String
  organization_id: String!
  organization_invoice_id: String
  organization_project_id: String
  payload: JSON
  repeat_mode: REMINDER_REPEAT_MODE
  repeat_value: Int
  selected_hour: Int!
  updated_at: DateTime!
}

type OrganizationReminderSettingPaginationConnection {
  edges: [OrganizationReminderSettingPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationReminderSettingPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationReminderSetting!
}

type OrganizationSubscription {
  canceled_at: DateTime
  created_at: DateTime!
  current_period_ends_at: DateTime
  current_period_starts_at: DateTime
  has_outdated_price: Boolean!
  id: ID!
  items: [OrganizationSubscriptionItem!]!
  next_payment_at: DateTime
  organization_coupon_id: String
  organization_id: String!
  organization_payment_method: OrganizationPaymentMethod!
  organization_payment_method_id: String!
  payment_status: ORGANIZATION_SUBSCRIPTION_PAYMENT_STATUS
  price_currency: CURRENCY!
  price_tier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER!
  price_total_amount: BigInt!
  provider: ORGANIZATION_SUBSCRIPTION_PROVIDER!
  provider_error: String
  provider_last_verified_at: DateTime
  provider_plan_code: String
  provider_status: ORGANIZATION_SUBSCRIPTION_PROVIDER_STATUS!
  provider_subscription_code: String
  renew_interval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL!
  status: ORGANIZATION_SUBSCRIPTION_STATUS!
  transactions: [OrganizationSubscriptionTransaction!]!
  updated_at: DateTime!
}

type OrganizationSubscriptionCalculatedPricing {
  organization_coupon: OrganizationCoupon
  organization_coupon_id: String
  organization_id: String!
  original_price_total_amount: BigInt!
  price_currency: CURRENCY!
  price_tier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER!
  price_total_amount: BigInt!
  provider: ORGANIZATION_SUBSCRIPTION_PROVIDER!
  renew_interval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL!
  selected_addon_items: [OrganizationSubscriptionCalculatedPricingAddonItem!]!
  selected_base_item: OrganizationSubscriptionCalculatedPricingBaseItem!
}

type OrganizationSubscriptionCalculatedPricingAddonItem {
  item_type: ORGANIZATION_SUBSCRIPTION_ADDON_ITEM!
  original_unit_price: BigInt!
  quantity: Int!
  unit_price: BigInt!
}

type OrganizationSubscriptionCalculatedPricingBaseItem {
  category: ORGANIZATION_SUBSCRIPTION_ITEM_CATEGORY!
  item_type: ORGANIZATION_SUBSCRIPTION_BASE_ITEM!
  original_unit_price: BigInt!
  unit_price: BigInt!
}

type OrganizationSubscriptionData {
  active_addons: [OrganizationSubscriptionItem!]!
  active_modules: [OrganizationSubscriptionItem!]!
  active_plans: [OrganizationSubscriptionItem!]!
  active_subscriptions: [OrganizationSubscription!]!
  organization_user_seats: Int!
  requires_provider_refresh: Boolean!
  requires_user_action: Boolean!
  subscription_level: Int!
}

type OrganizationSubscriptionDefaultPricing {
  options: [OrganizationSubscriptionDefaultPricingRenewIntervalOption!]!
  organization_coupon: OrganizationCoupon
  organization_coupon_id: String
  organization_id: String!
  price_currency: CURRENCY!
  price_tier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER!
}

type OrganizationSubscriptionDefaultPricingOption {
  available_addon_items: [OrganizationSubscriptionDefaultPricingOptionAddonItem!]!
  base_item: OrganizationSubscriptionDefaultPricingOptionBaseItem!
}

type OrganizationSubscriptionDefaultPricingOptionAddonItem {
  is_purchase_available: Boolean!
  item_type: ORGANIZATION_SUBSCRIPTION_ADDON_ITEM!
  original_unit_price: BigInt!
  unit_price: BigInt!
}

type OrganizationSubscriptionDefaultPricingOptionBaseItem {
  additional_organization_seats: Int!
  category: ORGANIZATION_SUBSCRIPTION_ITEM_CATEGORY!
  current_item_active_until: DateTime
  current_item_pending_purchase_subscription: OrganizationSubscription
  current_item_subscription: OrganizationSubscription
  is_purchase_available: Boolean!
  item_type: ORGANIZATION_SUBSCRIPTION_BASE_ITEM!
  original_unit_price: BigInt!
  unit_price: BigInt!
}

type OrganizationSubscriptionDefaultPricingRenewIntervalOption {
  options: [OrganizationSubscriptionDefaultPricingOption!]!
  renew_interval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL!
}

type OrganizationSubscriptionItem {
  canceled_at: DateTime
  category: ORGANIZATION_SUBSCRIPTION_ITEM_CATEGORY!
  classification: ORGANIZATION_SUBSCRIPTION_ITEM_CLASSIFICATION!
  created_at: DateTime!
  id: ID!
  item_type: ORGANIZATION_SUBSCRIPTION_ITEM!
  organization_subscription_id: String!
  quantity: Int!
  started_at: DateTime
  status: ORGANIZATION_SUBSCRIPTION_ITEM_STATUS!
  unit_price: BigInt!
  updated_at: DateTime!
}

type OrganizationSubscriptionPaginationConnection {
  edges: [OrganizationSubscriptionPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationSubscriptionPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationSubscription!
}

type OrganizationSubscriptionTransaction {
  amount: BigInt!
  created_at: DateTime!
  currency: CURRENCY!
  due_date: DateTime!
  failed_at: DateTime
  id: ID!
  organization_payment_method: OrganizationPaymentMethod!
  organization_payment_method_id: String!
  organization_subscription_id: String!
  period_ends_at: DateTime
  period_sequence: Int
  period_starts_at: DateTime
  procedure: ORGANIZATION_SUBSCRIPTION_TRANSACTION_PROCEDURE!
  provider_error: String
  provider_transaction_code: String!
  reverted_at: DateTime
  started_at: DateTime
  status: TRANSACTION_STATUS!
  subscription_item_ids: [String!]!
  succeeded_at: DateTime
  transaction_code: String!
  transaction_date: DateTime!
  transaction_provider: TRANSACTION_PROVIDER!
  updated_at: DateTime!
}

type OrganizationSubscriptionTransactionPaginationConnection {
  edges: [OrganizationSubscriptionTransactionPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationSubscriptionTransactionPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationSubscriptionTransaction!
}

input OrganizationTransactionBillingAddressSchema {
  billing_address_city: String
  billing_address_country_code_iso_3: COUNTRY_ISO_3!
  billing_address_line_1: String
  billing_address_line_2: String
  billing_address_number: String
  billing_address_state: String
  billing_address_zip_code: String
  billing_email: String!
  billing_first_name: String!
  billing_last_name: String!
  billing_phone_number: String
}

union OrganizationTransactionPreTransactionData = AccruPayTransactionProviderPreTransactionData | NuveiTransactionProviderPreTransactionData

type OrganizationUser {
  created_at: DateTime!
  id: ID!
  is_current_organization_user_seat_available: Boolean
  organization: Organization!
  organization_id: String!
  payload: JSON
  receive_customer_notification_mode: RECEIVE_CUSTOMER_NOTIFICATION_MODE
  receive_invoice_reminders: Boolean!
  role: ORGANIZATION_USER_ROLE!
  updated_at: DateTime!
  user: User
  user_id: String!
}

type OrganizationVendor {
  address_city: String
  address_country_code_iso_3: COUNTRY_ISO_3
  address_lat: Float
  address_line_1: String
  address_line_2: String
  address_lng: Float
  address_number: String
  address_state: String
  address_zip_code: String
  balance: BigInt
  bill_summary(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, latest_acct_provider_is_overdue: Boolean, latest_acct_provider_status: BILL_STATUS, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, status: BILL_STATUS, take: Int): OrganizationBillSummary!
  conn_locked_data_at: DateTime
  connection: OrganizationConnection
  contacts: [OrganizationVendorContact!]!
  created_at: DateTime!
  email: String
  has_sync_errors: Boolean @deprecated(reason: "Use `provider_errors` and `provider_warnings` instead")
  id: ID!
  is_active: Boolean!
  language: String
  last_successful_sync_at: DateTime!
  last_successful_sync_id: String!
  last_sync_at: DateTime!
  last_sync_id: String!
  last_sync_succeeded: Boolean!
  latest_acct_provider_balance: BigInt
  name: String!
  organization: Organization!
  organization_acct_provider_conn_id: String!
  organization_id: String!
  overdue_amount: BigInt
  phone_number: String
  provider: ACCT_PROVIDER!
  provider_code: String!
  provider_errors: [String!]!
  provider_url: String
  provider_warnings: [String!]!
  tax_code: String
  tax_code_type: TAX_TYPE
  timezone: String
  unique_code: String!
  updated_at: DateTime!
}

type OrganizationVendorContact {
  created_at: DateTime!
  email: String!
  id: ID!
  is_default: Boolean!
  name: String!
  organization_vendor_id: String!
  phone_number: String
  updated_at: DateTime!
}

type OrganizationVendorContactPaginationConnection {
  edges: [OrganizationVendorContactPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationVendorContactPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationVendorContact!
}

type OrganizationVendorPaginationConnection {
  edges: [OrganizationVendorPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrganizationVendorPaginationEdge {
  cursor: ConnectionCursor!
  node: OrganizationVendor!
}

enum PAYMENT_METHOD {
  CARD
  CHECK
  MANUAL
  QUICKBOOKS
  SYNC
}

enum PAYMENT_PROVIDER {
  ACCRUPAY
  MANUAL
  NUVEI
  QUICKBOOKS
}

enum PROJECT_CHANGE_REQUEST_STATUS {
  ACCEPTED
  CANCELED
  DRAFT
  EXPIRED
  PUBLISHED
  REJECTED
}

enum PROJECT_STATUS {
  ACTIVE
  CANCELED
  COMPLETED
  EXPIRED
  WAITING
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  adminOrganizationAcctProviderSynchronizations(acct_provider: ACCT_PROVIDER, after: ConnectionCursor, before: ConnectionCursor, failed: Boolean, finished: Boolean, first: Int, last: Int, organization_id: String!, scope: ORGANIZATION_ACCT_PROVIDER_CONN_SYNCHRONIZATION_SCOPE, skip: Int, sorting: [SortingFieldSchema!], succeeded: Boolean, take: Int): OrganizationAcctProviderConnSynchronizationPaginationConnection!
  adminOrganizationCoupon(organization_coupon_id: String!): OrganizationCoupon!
  adminOrganizationCoupons(activated: Boolean, after: ConnectionCursor, before: ConnectionCursor, campaign: ORGANIZATION_COUPON_CAMPAIGN, category: ORGANIZATION_COUPON_CATEGORY, code: String, expired: Boolean, first: Int, is_activation_unlimited: Boolean, last: Int, organization_id: String, skip: Int, sorting: [SortingFieldSchema!], subdivision: ORGANIZATION_COUPON_SUBDIVISION, take: Int): OrganizationCouponPaginationConnection!
  adminOrganizationManualSubscription(organization_subscription_id: String!): OrganizationSubscription!
  adminOrganizationManualSubscriptions(after: ConnectionCursor, before: ConnectionCursor, canceled: Boolean, contains_item: ORGANIZATION_SUBSCRIPTION_ITEM, expired: Boolean, first: Int, has_error: Boolean, has_outdated_price: Boolean, last: Int, organization_coupon_id: String, organization_payment_method_id: String, price_tier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER, provider_plan_code: String, provider_status: ORGANIZATION_SUBSCRIPTION_PROVIDER_STATUS, provider_subscription_code: String, renew_interval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL, skip: Int, sorting: [SortingFieldSchema!], started: Boolean, status: ORGANIZATION_SUBSCRIPTION_STATUS, take: Int): OrganizationSubscriptionPaginationConnection!
  adminOrganizationSubscription(organization_subscription_id: String!): OrganizationSubscription!
  adminOrganizationSubscriptionTransaction(organization_subscription_transaction_id: String!): OrganizationSubscriptionTransaction!
  adminOrganizationSubscriptionTransactions(after: ConnectionCursor, before: ConnectionCursor, failed: Boolean, first: Int, last: Int, organization_id: String, organization_payment_method_id: String, organization_subscription_id: String, procedure: ORGANIZATION_SUBSCRIPTION_TRANSACTION_PROCEDURE, provider_transaction_code: String, reverted: Boolean, skip: Int, sorting: [SortingFieldSchema!], started: Boolean, succeeded: Boolean, take: Int, transaction_code: String, transaction_end_date: DateTime, transaction_provider: TRANSACTION_PROVIDER, transaction_start_date: DateTime): OrganizationSubscriptionTransactionPaginationConnection!
  adminOrganizationSubscriptions(after: ConnectionCursor, before: ConnectionCursor, canceled: Boolean, contains_item: ORGANIZATION_SUBSCRIPTION_ITEM, expired: Boolean, first: Int, has_error: Boolean, has_outdated_price: Boolean, last: Int, organization_coupon_id: String, organization_payment_method_id: String, price_tier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER, provider: ORGANIZATION_SUBSCRIPTION_PROVIDER, provider_plan_code: String, provider_status: ORGANIZATION_SUBSCRIPTION_PROVIDER_STATUS, provider_subscription_code: String, renew_interval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL, skip: Int, sorting: [SortingFieldSchema!], started: Boolean, status: ORGANIZATION_SUBSCRIPTION_STATUS, take: Int): OrganizationSubscriptionPaginationConnection!
  adminOrganizations(after: ConnectionCursor, before: ConnectionCursor, email: String, first: Int, id: String, include_archived: Boolean, last: Int, name: String, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationPaginationConnection!
  adminUsers(after: ConnectionCursor, before: ConnectionCursor, email: String, first: Int, first_name: String, id: String, include_archived: Boolean, last: Int, last_name: String, phone_number: String, skip: Int, sorting: [SortingFieldSchema!], take: Int): UserPaginationConnection!
  session: Session!
  unauthorizedUserOrganizationUserInvite(code: String!, email: String!, organization_id: String!, organization_invite_id: String!): UnauthorizedUserOrganizationUserInviteResponse!
  unconnectedCustomerOrganizationInvoiceSummary(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, customer_name: String, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, latest_acct_provider_is_overdue: Boolean, latest_acct_provider_status: INVOICE_STATUS, organization_id: String, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, status: INVOICE_STATUS, take: Int, token: String!, unique_code: String!): OrganizationInvoiceSummary!
  unconnectedCustomerOrganizationProject(organization_id: String, organization_project_id: String!, token: String!, unique_code: String!): OrganizationProject!
  unconnectedCustomerOrganizationProjects(after: ConnectionCursor, before: ConnectionCursor, canceled: Boolean, completed: Boolean, ended: Boolean, first: Int, last: Int, name: String, organization_id: String, skip: Int, sorting: [SortingFieldSchema!], started: Boolean, take: Int, token: String!, unique_code: String!): OrganizationProjectPaginationConnection!
  unconnectedCustomerOrganizationStatement(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, organization_id: String, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, take: Int, token: String!, type: STATEMENT_LINE_TYPE, unique_code: String!): OrganizationCustomerStatement!
  unconnectedCustomerOrganizationStatementLine(organization_customer_statement_line_id: Int, organization_id: String, organization_invoice_id: String, organization_invoice_transaction_id: String, token: String!, unique_code: String!): OrganizationCustomerStatementLineData!
  user: User!
  userCustomerOrganization(organization_id: String!, organization_vendor_id: String!): OrganizationConnection!
  userCustomerOrganizationInvoice(organization_id: String!, organization_invoice_id: String!, organization_vendor_id: String!): OrganizationInvoice!
  userCustomerOrganizationInvoiceSummary(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, customer_name: String, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, latest_acct_provider_is_overdue: Boolean, latest_acct_provider_status: INVOICE_STATUS, organization_id: String!, organization_vendor_id: String!, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, status: INVOICE_STATUS, take: Int): OrganizationInvoiceSummary!
  userCustomerOrganizationInvoices(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, organization_id: String!, organization_vendor_id: String!, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationInvoicePaginationConnection!
  userCustomerOrganizationProject(organization_id: String!, organization_project_id: String!, organization_vendor_id: String!): OrganizationProject!
  userCustomerOrganizationProjects(after: ConnectionCursor, before: ConnectionCursor, canceled: Boolean, completed: Boolean, ended: Boolean, first: Int, last: Int, name: String, organization_id: String!, organization_vendor_id: String!, skip: Int, sorting: [SortingFieldSchema!], started: Boolean, take: Int): OrganizationProjectPaginationConnection!
  userCustomerOrganizationStatement(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, organization_id: String!, organization_vendor_id: String!, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, take: Int, type: STATEMENT_LINE_TYPE): OrganizationCustomerStatement!
  userCustomerOrganizationStatementLine(organization_customer_statement_line_id: Int, organization_id: String!, organization_invoice_id: String, organization_invoice_transaction_id: String, organization_vendor_id: String!): OrganizationCustomerStatementLineData!
  userCustomerOrganizations(organization_id: String!): [OrganizationConnection!]!
  userOrganization(organization_id: String!): Organization!
  userOrganizationAcctProvider(organization_acct_provider_conn_id: String!, organization_id: String!): OrganizationAcctProviderConn!
  userOrganizationAcctProviderSynchronization(organization_acct_provider_conn_synchronization_id: String!, organization_id: String!): OrganizationAcctProviderConnSynchronization!
  userOrganizationAcctProviderSynchronizations(after: ConnectionCursor, before: ConnectionCursor, failed: Boolean, finished: Boolean, first: Int, last: Int, organization_acct_provider_conn_id: String, organization_id: String!, scope: ORGANIZATION_ACCT_PROVIDER_CONN_SYNCHRONIZATION_SCOPE, skip: Int, sorting: [SortingFieldSchema!], succeeded: Boolean, take: Int): OrganizationAcctProviderConnSynchronizationPaginationConnection!
  userOrganizationAcctProviders(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, organization_id: String!, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationAcctProviderConnPaginationConnection!
  userOrganizationBill(organization_bill_id: String!, organization_id: String!): OrganizationBill!
  userOrganizationBillSummary(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, latest_acct_provider_is_overdue: Boolean, latest_acct_provider_status: BILL_STATUS, organization_id: String!, organization_vendor_id: String, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, status: BILL_STATUS, take: Int): OrganizationBillSummary!
  userOrganizationBillTransaction(organization_bill_transaction_id: String!, organization_id: String!): OrganizationBillTransaction!
  userOrganizationBillTransactions(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, organization_id: String!, organization_payment_method_id: String, organization_vendor_id: String, skip: Int, take: Int): [OrganizationBillTransaction!]!
  userOrganizationBills(after: ConnectionCursor, before: ConnectionCursor, first: Int, is_overdue: Boolean, last: Int, latest_acct_provider_is_overdue: Boolean, latest_acct_provider_status: BILL_STATUS, number: String, organization_id: String!, organization_project_id: String, organization_vendor_id: String, skip: Int, sorting: [SortingFieldSchema!], status: BILL_STATUS, take: Int, unique_code: String): OrganizationBillPaginationConnection!
  userOrganizationCollaborator(organization_id: String!, organization_user_id: String!): OrganizationUser!
  userOrganizationCollaborators(organization_id: String!): [OrganizationUser!]!
  userOrganizationConnection(organization_connection_id: String!, organization_id: String!): OrganizationConnection!
  userOrganizationConnections(organization_id: String!, status: ORGANIZATION_CONNECTION_STATUS): OrganizationConnectionPaginationConnection!
  userOrganizationCustomer(organization_customer_id: String!, organization_id: String!): OrganizationCustomer!
  userOrganizationCustomerContact(organization_customer_contact_id: String!, organization_customer_id: String!, organization_id: String!): OrganizationCustomerContact!
  userOrganizationCustomerContacts(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, name: String, organization_customer_id: String!, organization_id: String!, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationCustomerContactPaginationConnection!
  userOrganizationCustomerStatement(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, organization_customer_id: String!, organization_id: String!, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, take: Int, type: STATEMENT_LINE_TYPE): OrganizationCustomerStatement!
  userOrganizationCustomerStatementLine(organization_customer_id: String!, organization_customer_statement_line_id: Int, organization_id: String!, organization_invoice_id: String, organization_invoice_transaction_id: String): OrganizationCustomerStatementLineData!
  userOrganizationCustomers(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, name: String, organization_id: String!, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationCustomerPaginationConnection!
  userOrganizationInviteCollaborator(organization_id: String!, organization_invite_id: String!): OrganizationInvite!
  userOrganizationInviteCollaborators(accepted: Boolean, after: ConnectionCursor, before: ConnectionCursor, canceled: Boolean, expired: Boolean, first: Int, last: Int, organization_id: String!, rejected: Boolean, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationInvitePaginationConnection!
  userOrganizationInvoice(organization_id: String!, organization_invoice_id: String!): OrganizationInvoice!
  userOrganizationInvoiceSummary(after: ConnectionCursor, before: ConnectionCursor, currency: CURRENCY, customer_name: String, due_end_date: DateTime, due_start_date: DateTime, end_date: DateTime, first: Int, is_overdue: Boolean, last: Int, latest_acct_provider_is_overdue: Boolean, latest_acct_provider_status: INVOICE_STATUS, organization_customer_id: String, organization_id: String!, skip: Int, sorting: [SortingFieldSchema!], start_date: DateTime, status: INVOICE_STATUS, take: Int): OrganizationInvoiceSummary!
  userOrganizationInvoiceTransaction(organization_id: String!, organization_invoice_transaction_id: String!): OrganizationInvoiceTransaction!
  userOrganizationInvoiceTransactions(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, organization_customer_id: String, organization_id: String!, organization_receiving_method_id: String, skip: Int, take: Int): [OrganizationInvoiceTransaction!]!
  userOrganizationInvoices(after: ConnectionCursor, before: ConnectionCursor, customer_name: String, first: Int, is_overdue: Boolean, last: Int, latest_acct_provider_is_overdue: Boolean, latest_acct_provider_status: INVOICE_STATUS, number: String, organization_customer_id: String, organization_id: String!, organization_project_id: String, skip: Int, sorting: [SortingFieldSchema!], status: INVOICE_STATUS, take: Int, unique_code: String): OrganizationInvoicePaginationConnection!
  userOrganizationPaymentMethod(organization_id: String!, organization_payment_method_id: String!): OrganizationPaymentMethod!
  userOrganizationPaymentMethods(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, organization_id: String!, skip: Int, take: Int): [OrganizationPaymentMethod!]!
  userOrganizationProject(organization_id: String!, organization_project_id: String!): OrganizationProject!
  userOrganizationProjects(after: ConnectionCursor, before: ConnectionCursor, canceled: Boolean, completed: Boolean, ended: Boolean, first: Int, last: Int, name: String, organization_customer_id: String, organization_id: String!, skip: Int, sorting: [SortingFieldSchema!], started: Boolean, take: Int): OrganizationProjectPaginationConnection!
  userOrganizationReceivingMethod(organization_id: String!, organization_receiving_method_id: String!): OrganizationReceivingMethod!
  userOrganizationReceivingMethods(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, organization_id: String!, skip: Int, take: Int): [OrganizationReceivingMethod!]!
  userOrganizationReminderSetting(organization_id: String!, organization_reminder_setting_id: String!): OrganizationReminderSetting!
  userOrganizationReminderSettings(after: ConnectionCursor, before: ConnectionCursor, due_date_mode: REMINDER_DUE_DATE_MODE, first: Int, last: Int, organization_customer_id: String, organization_id: String!, organization_invoice_id: String, organization_project_id: String, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationReminderSettingPaginationConnection!
  userOrganizationSubscription(organization_id: String!, organization_subscription_id: String!): OrganizationSubscription!
  userOrganizationSubscriptionDefaultPricingSetup(organization_coupon_id: String, organization_id: String!): OrganizationSubscriptionDefaultPricing!
  userOrganizationSubscriptions(after: ConnectionCursor, before: ConnectionCursor, canceled: Boolean, contains_item: ORGANIZATION_SUBSCRIPTION_ITEM, expired: Boolean, first: Int, has_error: Boolean, has_outdated_price: Boolean, last: Int, organization_coupon_id: String, organization_id: String!, organization_payment_method_id: String, price_tier: ORGANIZATION_SUBSCRIPTION_PRICE_TIER, provider: ORGANIZATION_SUBSCRIPTION_PROVIDER, provider_plan_code: String, provider_status: ORGANIZATION_SUBSCRIPTION_PROVIDER_STATUS, provider_subscription_code: String, renew_interval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL, skip: Int, sorting: [SortingFieldSchema!], started: Boolean, status: ORGANIZATION_SUBSCRIPTION_STATUS, take: Int): OrganizationSubscriptionPaginationConnection!
  userOrganizationUserInvite(organization_invite_id: String!): OrganizationInvite!
  userOrganizationUserInvites(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationInvitePaginationConnection!
  userOrganizationVendor(organization_id: String!, organization_vendor_id: String!): OrganizationVendor!
  userOrganizationVendorContact(organization_id: String!, organization_vendor_contact_id: String!, organization_vendor_id: String!): OrganizationVendorContact!
  userOrganizationVendorContacts(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, name: String, organization_id: String!, organization_vendor_id: String!, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationVendorContactPaginationConnection!
  userOrganizationVendors(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, name: String, organization_id: String!, skip: Int, sorting: [SortingFieldSchema!], take: Int): OrganizationVendorPaginationConnection!
  userOrganizations(after: ConnectionCursor, before: ConnectionCursor, first: Int, last: Int, skip: Int, take: Int): [Organization!]!
}

enum RECEIVE_CUSTOMER_NOTIFICATION_MODE {
  BCC
  TO
}

enum RECEIVING_METHOD {
  ACH
  DEBIT_CARD
  MANUAL
  QUICKBOOKS
}

enum RECEIVING_PROVIDER {
  MANUAL
  QUICKBOOKS
}

enum RECIPIENT_TYPE {
  ORGANIZATION
  OTHER
  USER
}

enum REMINDER_DUE_DATE_MODE {
  AFTER
  BEFORE
}

enum REMINDER_REPEAT_MODE {
  DAILY
  MONTHLY
  WEEKLY
}

enum SORT_ORDER {
  ASC
  DESC
}

enum STATEMENT_LINE_TYPE {
  INVOICE
  TRANSACTION
}

enum STORAGE_PROVIDER {
  GOOGLE_CLOUD_STORAGE
}

type Session {
  user: User!
  user_auth_provider_conn: UserAuthProviderConn!
  user_session: UserSession!
}

input SortingFieldSchema {
  field: String!
  order: SORT_ORDER!
}

enum TAX_TYPE {
  ATIN
  EIN
  ITIN
  PTIN
  SSN
}

enum TRANSACTION_PROVIDER {
  ACCRUPAY
  MANUAL
  NUVEI
  QUICKBOOKS
}

enum TRANSACTION_STATUS {
  EXPIRED
  FAILED
  PENDING
  REVERTED
  STARTED
  SUCCEEDED
}

type UnauthorizedUserOrganizationUserInviteResponse {
  invited_by: String
  organization_id: String!
  organization_name: String!
  target_account_exists: Boolean!
}

type User {
  archived_at: DateTime
  created_at: DateTime!
  current_email_verification_id: String
  current_phone_number_verification_id: String
  email: String!
  first_name: String
  id: ID!
  is_admin: Boolean!
  language: String
  last_name: String
  organizations: [OrganizationUser]
  phone_number: String
  profile_picture_file: File
  profile_picture_file_id: String
  timezone: String
  updated_at: DateTime!
}

type UserAuthProviderConn {
  auth_provider: AUTH_PROVIDER!
  code: String!
  created_at: DateTime!
  disconnected_at: DateTime
  id: ID!
  payload: JSON!
  updated_at: DateTime!
  user_id: String!
}

input UserEmailVerifyOrChangeFinishSchema {
  email: String!
  verification_code: String!
}

input UserEmailVerifyOrChangeStartSchema {
  email: String!
}

input UserOrganizationAcctProviderConnUpdateSchema {
  automatic_pull_enabled: Boolean!
}

input UserOrganizationBillManualPaymentCreateSchema {
  amount: BigInt!
  currency_code: CURRENCY!
}

input UserOrganizationBillSchema {
  amount: BigInt!
  bill_date: DateTime!
  currency_code: CURRENCY!
  description: String!
  discount_amount: BigInt!
  due_date: DateTime!
  number: String
  organization_project_id: String
  organization_vendor_id: String!
  total_amount: BigInt!
}

input UserOrganizationCollaboratorUpdateSchema {
  receive_customer_notification_mode: RECEIVE_CUSTOMER_NOTIFICATION_MODE
  receive_invoice_reminders: Boolean!
  role: ORGANIZATION_USER_ROLE!
}

input UserOrganizationCreateSchema {
  address_city: String
  address_country_code_iso_3: COUNTRY_ISO_3
  address_line_1: String
  address_line_2: String
  address_number: String
  address_state: String
  address_zip_code: String
  business_industry: String
  business_number_of_employees: Int
  email: String!
  language: String
  name: String!
  phone_number: String
  primary_contact_name: String
  setting_receive_customer_notification_mode: RECEIVE_CUSTOMER_NOTIFICATION_MODE
  timezone: String
  website: String
}

input UserOrganizationCustomerContactCreateSchema {
  email: String!
  is_default: Boolean!
  name: String!
  phone_number: String
  send_invoice_reminders: Boolean!
}

input UserOrganizationCustomerContactUpdateSchema {
  email: String!
  is_default: Boolean!
  name: String!
  phone_number: String
  send_invoice_reminders: Boolean!
}

input UserOrganizationCustomerSchema {
  address_city: String
  address_country_code_iso_3: COUNTRY_ISO_3
  address_line_1: String
  address_line_2: String
  address_number: String
  address_state: String
  address_zip_code: String
  email: String!
  is_active: Boolean!
  language: String
  name: String!
  phone_number: String
  tax_code: String
  tax_code_type: TAX_TYPE
  timezone: String
}

input UserOrganizationCustomerSendInvoiceEmailSchema {
  contact_ids: [String!]!
  organization_invoice_id: String!
  send_to_base_customer_email: Boolean
  send_to_primary_contact: Boolean
}

input UserOrganizationCustomerSendStatementEmailSchema {
  contact_ids: [String!]!
  organization_customer_id: String!
  send_to_base_customer_email: Boolean
  send_to_primary_contact: Boolean
}

input UserOrganizationEmailVerifyOrChangeFinishSchema {
  email: String!
  verification_code: String!
}

input UserOrganizationEmailVerifyOrChangeStartSchema {
  email: String!
}

input UserOrganizationInviteCollaboratorCreateSchema {
  email: String!
  role: ORGANIZATION_USER_ROLE!
}

input UserOrganizationInvoiceManualPaymentCreateSchema {
  amount: BigInt!
  currency_code: CURRENCY!
}

input UserOrganizationInvoiceSchema {
  amount: BigInt!
  currency_code: CURRENCY!
  description: String!
  discount_amount: BigInt!
  due_date: DateTime!
  invoice_date: DateTime!
  number: String
  organization_customer_id: String!
  organization_project_id: String
  total_amount: BigInt!
}

input UserOrganizationProjectCreateSchema {
  budget_amount: BigInt!
  budget_currency_code: CURRENCY!
  contract_url: String
  description: String
  ends_at: DateTime
  name: String!
  organization_customer_id: String!
  starts_at: DateTime
}

input UserOrganizationProjectUpdateSchema {
  canceled_at: DateTime
  completed_at: DateTime
  contract_url: String
  description: String
}

input UserOrganizationReceivingMethodUpdateSchema {
  is_default: Boolean!
  is_enabled: Boolean!
}

input UserOrganizationReminderSettingSchema {
  days_amount: Int!
  due_date_mode: REMINDER_DUE_DATE_MODE!
  organization_customer_id: String
  organization_invoice_id: String
  organization_project_id: String
  repeat_mode: REMINDER_REPEAT_MODE
  repeat_value: Int
  selected_hour: Int!
}

input UserOrganizationSubscriptionCalculatePricingAddonItemSchema {
  item_type: ORGANIZATION_SUBSCRIPTION_ADDON_ITEM!
  quantity: Int!
}

input UserOrganizationSubscriptionCalculatePricingSchema {
  currency: CURRENCY!
  organization_coupon_id: String
  renew_interval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL!
  selected_addon_items: [UserOrganizationSubscriptionCalculatePricingAddonItemSchema!]!
  selected_base_item: ORGANIZATION_SUBSCRIPTION_BASE_ITEM!
}

input UserOrganizationSubscriptionStartPurchaseSchema {
  billing_address: OrganizationTransactionBillingAddressSchema
  calculated_total_amount: BigInt!
  currency: CURRENCY!
  organization_coupon_id: String
  renew_interval: ORGANIZATION_SUBSCRIPTION_RENEW_INTERVAL!
  selected_addon_items: [UserOrganizationSubscriptionCalculatePricingAddonItemSchema!]!
  selected_base_item: ORGANIZATION_SUBSCRIPTION_BASE_ITEM!
}

input UserOrganizationUpdateSchema {
  address_city: String
  address_country_code_iso_3: COUNTRY_ISO_3
  address_line_1: String
  address_line_2: String
  address_number: String
  address_state: String
  address_zip_code: String
  business_industry: String
  business_number_of_employees: Int
  language: String
  name: String
  phone_number: String
  primary_contact_name: String
  setting_receive_customer_notification_mode: RECEIVE_CUSTOMER_NOTIFICATION_MODE
  timezone: String
  website: String
}

input UserOrganizationVendorContactCreateSchema {
  email: String!
  is_default: Boolean!
  name: String!
  phone_number: String
}

input UserOrganizationVendorContactUpdateSchema {
  email: String!
  is_default: Boolean!
  name: String!
  phone_number: String
}

input UserOrganizationVendorSchema {
  address_city: String
  address_country_code_iso_3: COUNTRY_ISO_3
  address_line_1: String
  address_line_2: String
  address_number: String
  address_state: String
  address_zip_code: String
  email: String!
  is_active: Boolean!
  language: String
  name: String!
  phone_number: String
  tax_code: String
  tax_code_type: TAX_TYPE
  timezone: String
}

type UserPaginationConnection {
  edges: [UserPaginationEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type UserPaginationEdge {
  cursor: ConnectionCursor!
  node: User!
}

input UserPasswordChangeFinishSchema {
  new_password: String!
  verification_code: String!
}

input UserPasswordChangeStartSchema {
  current_password: String
}

input UserPasswordResetFinishSchema {
  email: String!
  new_password: String!
  user_id: String!
  verification_code: String!
}

input UserPasswordResetStartSchema {
  email: String!
}

input UserPhoneNumberVerifyOrChangeFinishSchema {
  phone_number: String!
  verification_code: String!
}

input UserPhoneNumberVerifyOrChangeStartSchema {
  phone_number: String!
}

type UserSession {
  access_token: String!
  access_token_expires_at: DateTime!
  canceled_at: DateTime
  created_at: DateTime!
  id: ID!
  parent_session: UserSession
  parent_session_id: String
  payload: JSON!
  refresh_token: String
  refresh_token_expires_at: DateTime
  updated_at: DateTime!
  user_auth_provider_conn: UserAuthProviderConn!
  user_auth_provider_conn_id: String!
}

input UserSignUpWithEmailFinishSchema {
  email: String!
  password: String!
  verification_code: String!
}

input UserSignUpWithEmailStartSchema {
  email: String!
}

input UserSignUpWithEmailVerifySchema {
  email: String!
  verification_code: String!
}

input UserUpdateDataSchema {
  first_name: String!
  language: String!
  last_name: String!
  timezone: String!
}